/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:34:06 GMT 2025
 */

package org.apache.commons.imaging.formats.gif;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.file.NoSuchFileException;
import javax.swing.DebugGraphics;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.bytesource.ByteSource;
import org.apache.commons.imaging.common.RgbBufferedImageFactory;
import org.apache.commons.imaging.common.XmpImagingParameters;
import org.apache.commons.imaging.formats.gif.DisposalMethod;
import org.apache.commons.imaging.formats.gif.GifImageParser;
import org.apache.commons.imaging.formats.gif.GifImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GifImageParser_ESTest extends GifImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(4715, 4715, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) printStream0, gifImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.writeImage((BufferedImage) null, (OutputStream) pipedOutputStream0, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(76, 76, false);
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.writeImage(bufferedImage0, (OutputStream) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(3, 3, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.writeImage(bufferedImage0, (OutputStream) pipedOutputStream0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      XmpImagingParameters<GifImagingParameters> xmpImagingParameters0 = new XmpImagingParameters<GifImagingParameters>();
      try { 
        gifImageParser0.getXmpXml(byteSource0, xmpImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getXmpXml((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSource byteSource0 = ByteSource.inputStream(dataInputStream0, "");
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getXmpXml(byteSource0, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getXmpXml(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      GifImageParser gifImageParser0 = new GifImageParser();
      try { 
        gifImageParser0.getMetadata(byteSource0, (GifImagingParameters) null);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getMetadata((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSource byteSource0 = ByteSource.inputStream(dataInputStream0, "");
      // Undeclared exception!
      try { 
        gifImageParser0.getMetadata(byteSource0, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        gifImageParser0.getMetadata(byteSource0, (GifImagingParameters) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getImageSize(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        gifImageParser0.getImageSize(byteSource0, (GifImagingParameters) null);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageSize((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-30), 738);
      ByteSource byteSource0 = ByteSource.inputStream(byteArrayInputStream0, "LayerAndMaskDataLength");
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageSize(byteSource0, gifImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSource byteSource0 = ByteSource.inputStream(pipedInputStream0, "");
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getImageSize(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getImageInfo(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageInfo((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("", "");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getImageInfo(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      try { 
        gifImageParser0.getFormatCompliance(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        gifImageParser0.getFormatCompliance(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0, 57);
      ByteSource byteSource0 = ByteSource.inputStream(bufferedInputStream0, (String) null);
      // Undeclared exception!
      try { 
        gifImageParser0.getFormatCompliance(byteSource0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      try { 
        gifImageParser0.getFormatCompliance(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getBufferedImage(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      File file0 = MockFile.createTempFile("YSweL +MO+", "YSweL +MO+");
      ByteSource byteSource0 = ByteSource.file(file0);
      try { 
        gifImageParser0.getBufferedImage(byteSource0, gifImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getBufferedImage((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getBufferedImage(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      try { 
        gifImageParser0.getAllBufferedImages(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      GifImageParser gifImageParser0 = new GifImageParser();
      try { 
        gifImageParser0.getAllBufferedImages(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.getAllBufferedImages((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      try { 
        gifImageParser0.getAllBufferedImages(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ich#");
      MockFile mockFile0 = new MockFile("identifier3");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      // Undeclared exception!
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) null, byteSource0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("BMP has invalid image data offset: ");
      MockFile mockFile0 = new MockFile("BMP has invalid image data offset: ");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      ByteSource byteSource0 = ByteSource.inputStream(mockFileInputStream0, "BMP has invalid image data offset: ");
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageInfo((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(115, 79, true);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("XMP block in GIF missing magic trailer.");
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      gifImagingParameters0.setXmpXml("XMP block in GIF missing magic trailer.");
      // Undeclared exception!
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) mockFileOutputStream0, gifImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(8, 8, false);
      PrintStream printStream0 = DebugGraphics.logStream();
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) printStream0, gifImagingParameters0);
      assertEquals(1, bufferedImage0.getNumXTiles());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(8, 8, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      GifImageParser gifImageParser0 = new GifImageParser();
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) printStream0, (GifImagingParameters) null);
      assertEquals(1, bufferedImage0.getNumXTiles());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getXmpXml(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getMetadata(byteSource0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      try { 
        GifImageParser.createDisposalMethodFromIntValue((byte) (-16));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GIF: Invalid parsing of disposal method
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(7);
      assertEquals(DisposalMethod.TO_BE_DEFINED_4, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(6);
      assertEquals(DisposalMethod.TO_BE_DEFINED_3, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(5);
      assertEquals(DisposalMethod.TO_BE_DEFINED_2, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(3);
      assertEquals(DisposalMethod.RESTORE_TO_PREVIOUS, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(2);
      assertEquals(DisposalMethod.RESTORE_TO_BACKGROUND, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(1);
      assertEquals(DisposalMethod.DO_NOT_DISPOSE, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(4);
      assertEquals(DisposalMethod.TO_BE_DEFINED_1, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(0);
      assertEquals(DisposalMethod.UNSPECIFIED, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      String string0 = gifImageParser0.getName();
      assertEquals("Graphics Interchange Format", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      String string0 = gifImageParser0.getDefaultExtension();
      assertEquals("gif", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      byte[] byteArray0 = gifImageParser0.getIccProfileBytes((ByteSource) null, gifImagingParameters0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      MockFile mockFile0 = new MockFile("Image Top Position");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        gifImageParser0.getImageInfo(byteSource0, gifImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      String[] stringArray0 = gifImageParser0.getAcceptedExtensions();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.getFormatCompliance((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      ImageFormat[] imageFormatArray0 = gifImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }
}
