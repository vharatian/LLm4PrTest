/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 00:29:35 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)25;
      byteArray0[4] = (byte)25;
      TiffField tiffField0 = new TiffField((-1450), 278, fieldTypeRational0, 1046, (byte)25, byteArray0, byteOrder0, 1759);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1759, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals(8368, tiffField0.getBytesLength());
      assertEquals((-1450), tiffField0.getTag());
      assertEquals(278, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)25;
      TiffField tiffField0 = new TiffField((-1450), 278, fieldTypeRational0, 1046, (byte)25, byteArray0, byteOrder0, 1759);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(278, tiffField0.getDirectoryType());
      assertEquals((-1450), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1759, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(8368, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1291), (byte)1, fieldTypeLong0, 1L, (-1488L), byteArray0, byteOrder0, 2000);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1488), tiffField0.getOffset());
      assertEquals(2000, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1291), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      TiffField tiffField0 = new TiffField((byte)42, (byte)0, fieldTypeFloat0, (byte)0, 1L, byteArray0, byteOrder0, 3421);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(30, byteArrayOutputStream0.size());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-1), fieldTypeRational0.DOUBLE, 335L, (byte) (-109), byteArray0, byteOrder0, (byte) (-109));
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-109), tiffField0.getSortHint());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (335 Double)", string0);
      assertEquals((-109), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[98];
      CharBuffer charBuffer0 = CharBuffer.allocate(259);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(261, "HP#D$z1R<[k!`TL4");
      TiffField tiffField0 = new TiffField(1043, 261, fieldTypeByte0, 259, 1043, byteArray0, byteOrder0, (-4638));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-4638), tiffField0.getSortHint());
      assertEquals(1043, tiffField0.getTag());
      assertEquals(1043, tiffField0.getOffset());
      assertEquals(261, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(259, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1046, 0, fieldTypeRational0, 0, 1046, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1046, tiffField0.getTag());
      assertEquals("", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1046, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-601), 39, fieldTypeByte0, 173, 173, byteArray0, byteOrder0, 173);
      tiffField0.getValue();
      assertEquals(173, tiffField0.getBytesLength());
      assertEquals(173, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(173, tiffField0.getOffset());
      assertEquals((-601), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1811, (-342), fieldTypeRational0, (-17156399408L), (-594L), byteArray0, (ByteOrder) null, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals((-342), tiffField0.getDirectoryType());
      assertEquals(1811, int0);
      assertEquals((-594), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-2662), fieldTypeShort0, 1L, 4096, byteArray0, byteOrder0, 129);
      int int0 = tiffField0.getTag();
      assertEquals(129, tiffField0.getSortHint());
      assertEquals((-2662), tiffField0.getDirectoryType());
      assertEquals(4096, tiffField0.getOffset());
      assertEquals((-1717986917), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3129), "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte) (-16);
      byteArray0[3] = (byte) (-69);
      byteArray0[4] = (byte)114;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147293487, 2146904342, fieldTypeAscii0, 226L, (byte)0, byteArray0, byteOrder0, (byte)71);
      String string0 = tiffField0.getStringValue();
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(226, tiffField0.getBytesLength());
      assertEquals(2146904342, tiffField0.getDirectoryType());
      assertEquals(2147293487, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1046, 0, fieldTypeRational0, 0, 1046, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1046, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1046, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0, byteArray0, byteOrder0, 113);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(113, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-826), (-342), fieldTypeRational0, (-826), 0L, byteArray0, byteOrder0, 336);
      int int0 = tiffField0.getOffset();
      assertEquals((-826), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(336, tiffField0.getSortHint());
      assertEquals((-342), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 940L, (-363L), byteArray0, byteOrder0, 532);
      int int0 = tiffField0.getOffset();
      assertEquals((-363), int0);
      assertEquals(532, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(3);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-9);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-34), fieldType0, 3250L, (byte)0, byteArray0, byteOrder0, 2493);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(247, int0);
      assertEquals(6500, tiffField0.getBytesLength());
      assertEquals(2493, tiffField0.getSortHint());
      assertEquals((-34), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-13);
      TiffField tiffField0 = new TiffField(840, (-2118066062), fieldTypeFloat0.SSHORT, 1855L, 840, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(840, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(840, tiffField0.getOffset());
      assertEquals((-3328), int0);
      assertEquals(3710, tiffField0.getBytesLength());
      assertEquals((-2118066062), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)14, (byte) (-34), fieldTypeShort0, 1L, (byte)1, byteArray0, byteOrder0, (-1291));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getTag());
      assertEquals((-34), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1291), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((-2099761788), (-592), fieldTypeRational0.SLONG, 1L, (-1), byteArray0, byteOrder0, (-2099761788));
      tiffField0.getIntValue();
      assertEquals((-2099761788), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2099761788), tiffField0.getSortHint());
      assertEquals((-592), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-73);
      TiffField tiffField0 = new TiffField((byte) (-73), (byte) (-73), fieldTypeByte0, 1L, 452L, byteArray0, byteOrder0, (byte) (-73));
      tiffField0.getIntValue();
      assertEquals((-73), tiffField0.getDirectoryType());
      assertEquals((-73), tiffField0.getTag());
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals(452, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(15, (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, Integer.MAX_VALUE, fieldTypeFloat0, 21248L, 15, byteArray0, byteOrder0, (-87));
      tiffField0.getFieldTypeName();
      assertEquals(Integer.MAX_VALUE, tiffField0.getDirectoryType());
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getTag());
      assertEquals(15, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2823), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2556), (-2556), fieldTypeFloat0, 2114L, 1327L, byteArray0, byteOrder0, 2007);
      tiffField0.getFieldTypeName();
      assertEquals((-2556), tiffField0.getTag());
      assertEquals(2007, tiffField0.getSortHint());
      assertEquals(1327, tiffField0.getOffset());
      assertEquals((-2556), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, (FieldType) null, 12, 2451L, byteArray0, byteOrder0, (byte) (-102));
      tiffField0.getFieldType();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals(2451, tiffField0.getOffset());
      assertEquals((-102), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((-128), 6, fieldTypeLong0.DOUBLE, 1905L, 50, byteArray0, byteOrder0, (byte) (-37));
      tiffField0.getFieldType();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-128), tiffField0.getTag());
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2144549926), "... (");
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(32803, (byte)80, fieldTypeFloat0, (-3640), (-2147483648L), byteArray0, byteOrder0, (byte)80);
      tiffField0.getFieldType();
      assertEquals(32803, tiffField0.getTag());
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-2662), fieldTypeShort0, 1L, 4096, byteArray0, byteOrder0, 129);
      tiffField0.getDoubleValue();
      assertEquals(129, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2662), tiffField0.getDirectoryType());
      assertEquals(4096, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(3);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-9);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-34), 969, fieldType0, (byte)1, 4528L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals((-34), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(969, tiffField0.getDirectoryType());
      assertEquals(4528, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-73);
      TiffField tiffField0 = new TiffField((byte) (-73), (byte) (-73), fieldTypeByte0, 1L, 452L, byteArray0, byteOrder0, (byte) (-73));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-73), tiffField0.getTag());
      assertEquals((-73), tiffField0.getDirectoryType());
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals(452, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1036, 1036, fieldTypeRational0, 1036, 1036, byteArray0, byteOrder0, 1036);
      tiffField0.getDoubleArrayValue();
      assertEquals(1036, tiffField0.getSortHint());
      assertEquals(1036, tiffField0.getDirectoryType());
      assertEquals(1036, tiffField0.getOffset());
      assertEquals(8288, tiffField0.getBytesLength());
      assertEquals(1036, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(334, 0, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).ASCII).FLOAT, 0, 0L, byteArray0, byteOrder0, 1958);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1958, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(334, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)14, (byte) (-34), fieldTypeShort0, 1L, (byte)1, byteArray0, byteOrder0, (-1291));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1291), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-34), int0);
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 2493L, byteArray0, byteOrder0, 113);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(2493, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1883, 39, fieldTypeByte0, (-1254L), 2016L, byteArray0, byteOrder0, 640);
      tiffField0.getCount();
      assertEquals(640, tiffField0.getSortHint());
      assertEquals(1883, tiffField0.getTag());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(2016, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, (String) null);
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, (ByteOrder) null, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2010), fieldTypeFloat0, (-2010), 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-8040), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2010), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2147009065, (byte)0, fieldTypeFloat0, (byte)0, (-3644L), byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.getByteOrder();
      assertEquals((-3644), tiffField0.getOffset());
      assertEquals(2147009065, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1251, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5846, (-2694), fieldTypeFloat0, 5846, (-2876L), byteArray0, byteOrder0, 1251);
      tiffField0.getByteOrder();
      assertEquals(5846, tiffField0.getTag());
      assertEquals(1251, tiffField0.getSortHint());
      assertEquals((-2876), tiffField0.getOffset());
      assertEquals((-2694), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1257, 136, fieldTypeByte0, 1391L, 1412L, byteArray0, byteOrder0, (-1));
      tiffField0.getByteArrayValue();
      assertEquals(1391, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1257, tiffField0.getTag());
      assertEquals(136, tiffField0.getDirectoryType());
      assertEquals(1412, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-601), 39, fieldTypeByte0, 173, 173, byteArray0, byteOrder0, 173);
      tiffField0.getByteArrayValue();
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(173, tiffField0.getBytesLength());
      assertEquals(173, tiffField0.getSortHint());
      assertEquals(173, tiffField0.getOffset());
      assertEquals((-601), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1096), (-1096), fieldTypeRational0, 324L, 324L, (byte[]) null, byteOrder0, (-1096));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-6), (-6), fieldTypeLong0, (-6), (-400), byteArray0, byteOrder0, (-400));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1043, 1043, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 1043);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeRational0, (-4), (-4), byteArray0, (ByteOrder) null, (-4));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-1), fieldTypeRational0.DOUBLE, 335L, (byte) (-109), byteArray0, byteOrder0, (byte) (-109));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-417), (-417), fieldTypeShort0, (-417), (-417), byteArray0, byteOrder0, (-417));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1043, 1043, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 1043);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(928, 928, fieldTypeByte0, 928, (-163L), (byte[]) null, byteOrder0, 928);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1453), (-1453), fieldTypeShort0, (-1453), (-1453), byteArray0, byteOrder0, (-1453));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(80, 65535, fieldTypeRational0, 1L, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37379, 65561, (FieldType) null, 37379, (-2696L), byteArray0, byteOrder0, 65561);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1804, 1804, fieldTypeShort0, 1804, 1804, (byte[]) null, byteOrder0, 1804);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1043, 1043, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 1043);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2275), (String) null);
      TiffField tiffField0 = new TiffField(28, (-2008), fieldTypeAscii0, (-14744L), 28, byteArray0, (ByteOrder) null, (-2008));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, (-1), (-1), (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1193), (-1193), fieldTypeShort0, (-1193), (-1193), byteArray0, byteOrder0, (-1193));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1043, 1043, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 1043);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeRational0, 1L, 80, byteArray0, (ByteOrder) null, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(95, 95, fieldTypeRational0, 95, 95, (byte[]) null, (ByteOrder) null, 95);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3095), (-3095), fieldTypeShort0, (-3095), (-3095), byteArray0, byteOrder0, (-3095));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1043, 1043, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 1043);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(524, 2220, (FieldType) null, (-2147483648L), 200L, byteArray0, byteOrder0, 1472);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[193];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(40092, 0, fieldTypeLong0, 40092, 65520, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeRational0, 33, 33, (byte[]) null, (ByteOrder) null, 33);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2629), (-2629), fieldTypeShort0, (-2629), (-2629), byteArray0, byteOrder0, (-2629));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, (-1), (-1), (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1043, 1043, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 1043);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((byte) (-85), (byte) (-85), fieldTypeLong0.SSHORT, (byte) (-85), (byte) (-85), byteArray0, byteOrder0, (byte) (-85));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeRational0, (-17), (-17), byteArray0, (ByteOrder) null, (-17));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("SubSecTimeDigitized");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "SubSecTimeDigitized");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4721), (-4721), fieldTypeShort0, (-4721), (-4721), byteArray0, byteOrder0, (-4721));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("aA_us)rLhzZ)@36-x'A");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[84];
      TiffField tiffField0 = new TiffField((-4783), (-4783), fieldTypeLong0, (-4783), (-4783), byteArray0, byteOrder0, (-4783));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1043, 1043, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 1043);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)25, fieldTypeShort0, (byte)25, (-2792L), byteArray0, byteOrder0, 0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("0 (0x0: Unknown Tag): 0, 0, 0 (25 SShort)", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals((-2792), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-727), (-727), fieldTypeAscii0, (-727), (-727), byteArray0, byteOrder0, (byte)77);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-727), tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals((-727), tiffField0.getTag());
      assertEquals((-727), tiffField0.getOffset());
      assertEquals(77, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2132, 2132, fieldTypeLong0, 2132, 2132, byteArray0, byteOrder0, 2132);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(2132, tiffField0.getSortHint());
      assertEquals(2132, tiffField0.getTag());
      assertEquals(2132, tiffField0.getDirectoryType());
      assertEquals(2132, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1036, 1036, fieldTypeLong0, 1012, 1012, (byte[]) null, byteOrder0, 1036);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "OpcodeList2");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4351, 0, fieldTypeShort0, 130978L, 0, byteArray0, byteOrder0, 890);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4351, tiffField0.getTag());
      assertEquals(890, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2220, 2220, fieldTypeShort0, 2220, 2220, byteArray0, byteOrder0, 2220);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(95, 95, fieldTypeRational0, 95, 95, (byte[]) null, (ByteOrder) null, 95);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2242, 2242, fieldTypeRational0, (-866L), (-866L), (byte[]) null, (ByteOrder) null, 2242);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-3026), fieldTypeShort0, 3, 704L, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getOffset();
      assertEquals(3, tiffField0.getTag());
      assertEquals(704, int0);
      assertEquals((-3026), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1251, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5846, (-2694), fieldTypeFloat0, 5846, (-2876L), byteArray0, byteOrder0, 1251);
      tiffField0.getTagInfo();
      assertEquals(5846, tiffField0.getTag());
      assertEquals((-2876), tiffField0.getOffset());
      assertEquals(1251, tiffField0.getSortHint());
      assertEquals((-2694), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 2224);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2224, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2132, 2132, fieldTypeLong0, 2132, 2132, byteArray0, byteOrder0, 2132);
      tiffField0.getCount();
      assertEquals(2132, tiffField0.getTag());
      assertEquals(2132, tiffField0.getDirectoryType());
      assertEquals(2132, tiffField0.getSortHint());
      assertEquals(2132, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-3026), fieldTypeShort0, 3, 704L, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-3026), tiffField0.getDirectoryType());
      assertEquals(6, int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(704, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1020, 1020, fieldTypeRational0, 1020, 1020, byteArray0, byteOrder0, 1020);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1046, 1046, fieldTypeRational0, 1046, 1046, byteArray0, (ByteOrder) null, 1046);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)41, (byte)41, fieldTypeFloat0, (byte)41, (byte)41, byteArray0, byteOrder0, (byte)41);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@514b5ad3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1005, 1005, fieldTypeRational0, 1005, 1005, byteArray0, byteOrder0, 1005);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[153];
      TiffField tiffField0 = new TiffField(1055, 1055, fieldTypeLong0, 1055, 1055, byteArray0, byteOrder0, 1055);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1055, tiffField0.getDirectoryType());
      assertEquals(4220, tiffField0.getBytesLength());
      assertEquals(1055, tiffField0.getTag());
      assertEquals(1055, tiffField0.getSortHint());
      assertEquals(1055, tiffField0.getOffset());
      assertEquals(1055L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[171];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65479, 65479, fieldTypeDouble0, 65479, 65479, byteArray0, byteOrder0, 65479);
      tiffField0.getDoubleArrayValue();
      assertEquals(65479, tiffField0.getOffset());
      assertEquals(523832, tiffField0.getBytesLength());
      assertEquals(65479, tiffField0.getTag());
      assertEquals(65479L, tiffField0.getCount());
      assertEquals(65479, tiffField0.getSortHint());
      assertEquals(65479, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)41, (byte)41, fieldTypeFloat0, (byte)41, (byte)41, byteArray0, byteOrder0, (byte)41);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getOffset());
      assertEquals(26, doubleArray0.length);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getTag());
      assertEquals(41L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(787, 787, fieldTypeShort0.ASCII, 259L, 787, byteArray0, byteOrder0, 787);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@33f564e7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1036, 1036, fieldTypeShort0, 1036, 1036, byteArray0, byteOrder0, 1036);
      tiffField0.getDoubleArrayValue();
      assertEquals(1036, tiffField0.getDirectoryType());
      assertEquals(1036L, tiffField0.getCount());
      assertEquals(1036, tiffField0.getOffset());
      assertEquals(2072, tiffField0.getBytesLength());
      assertEquals(1036, tiffField0.getSortHint());
      assertEquals(1036, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(985, 985, fieldTypeRational0, 985, 985, byteArray0, byteOrder0, 985);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(985L, tiffField0.getCount());
      assertEquals(985, tiffField0.getTag());
      assertEquals(985, tiffField0.getSortHint());
      assertEquals(985, tiffField0.getDirectoryType());
      assertEquals(985, tiffField0.getOffset());
      assertEquals(7880, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(363, 363, fieldTypeLong0, 363, 363, byteArray0, byteOrder0, 363);
      tiffField0.getDoubleArrayValue();
      assertEquals(363L, tiffField0.getCount());
      assertEquals(363, tiffField0.getOffset());
      assertEquals(363, tiffField0.getSortHint());
      assertEquals(363, tiffField0.getTag());
      assertEquals(363, tiffField0.getDirectoryType());
      assertEquals(1452, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)41, (byte)41, fieldTypeFloat0, (byte)41, (byte)41, byteArray0, byteOrder0, (byte)41);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4d65bf10 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1789, 1789, fieldTypeShort0, 1789, 1789, byteArray0, byteOrder0, 1789);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3578, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(1789L, tiffField0.getCount());
      assertEquals(1789, tiffField0.getDirectoryType());
      assertEquals(1789, tiffField0.getOffset());
      assertEquals(1789, tiffField0.getSortHint());
      assertEquals(1789, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1046, 1046, fieldTypeRational0, 1046, 1046, byteArray0, (ByteOrder) null, 1046);
      tiffField0.getIntArrayValue();
      assertEquals(1046, tiffField0.getSortHint());
      assertEquals(1046, tiffField0.getDirectoryType());
      assertEquals(1046, tiffField0.getTag());
      assertEquals(1046, tiffField0.getOffset());
      assertEquals(8368, tiffField0.getBytesLength());
      assertEquals(1046L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1789, 1789, fieldTypeLong0, 1789, 1789, byteArray0, byteOrder0, 1789);
      tiffField0.getIntArrayValue();
      assertEquals(1789L, tiffField0.getCount());
      assertEquals(7156, tiffField0.getBytesLength());
      assertEquals(1789, tiffField0.getSortHint());
      assertEquals(1789, tiffField0.getDirectoryType());
      assertEquals(1789, tiffField0.getTag());
      assertEquals(1789, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1781, 1781, fieldTypeShort0, 1781, 1781, byteArray0, byteOrder0, 1781);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@66ae547f
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2220, 17, fieldTypeAscii0, 2072L, 28152L, byteArray0, byteOrder0, 2220);
      String string0 = tiffField0.getStringValue();
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(2072, tiffField0.getBytesLength());
      assertEquals(2220, tiffField0.getTag());
      assertEquals(28152, tiffField0.getOffset());
      assertEquals(2220, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2132, 2132, fieldTypeLong0, 2132, 2132, byteArray0, byteOrder0, 2132);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x854)", string0);
      assertEquals(2132, tiffField0.getDirectoryType());
      assertEquals(2132, tiffField0.getSortHint());
      assertEquals(2132, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50937, 50937, fieldTypeShort0, 50937, 50937, byteArray0, byteOrder0, 50937);
      String string0 = tiffField0.getTagName();
      assertEquals(50937, tiffField0.getTag());
      assertEquals("ProfileHueSatMapDims", string0);
      assertEquals(50937, tiffField0.getDirectoryType());
      assertEquals(50937, tiffField0.getSortHint());
      assertEquals(50937, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "US-ASCII");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65108, 0, fieldTypeFloat0, 2802L, (-1793L), byteArray0, byteOrder0, 49);
      tiffField0.dump();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2802L, tiffField0.getCount());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals((-1793), tiffField0.getOffset());
      assertEquals(65108, tiffField0.getTag());
      assertEquals(11208, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1462L, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1462, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1462L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[193];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65520, 65520, fieldTypeDouble0, 65520, 65520, byteArray0, byteOrder0, 65520);
      tiffField0.dump();
      assertEquals(524160, tiffField0.getBytesLength());
      assertEquals(65520L, tiffField0.getCount());
      assertEquals(65520, tiffField0.getDirectoryType());
      assertEquals(65520, tiffField0.getSortHint());
      assertEquals(65520, tiffField0.getTag());
      assertEquals(65520, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(11, (-1447), fieldTypeDouble0.SLONG, 8528L, (-1447), byteArray0, byteOrder0, 11);
      tiffField0.dump();
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals((-1447), tiffField0.getOffset());
      assertEquals(34112, tiffField0.getBytesLength());
      assertEquals(8528L, tiffField0.getCount());
      assertEquals((-1447), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1329), 3529, fieldTypeShort0, 3529, 3529, byteArray0, byteOrder0, (-1329));
      String string0 = tiffField0.toString();
      assertEquals(3529, tiffField0.getOffset());
      assertEquals(7058, tiffField0.getBytesLength());
      assertEquals((-1329), tiffField0.getSortHint());
      assertEquals("-1329 (0xfffffacf: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (100) (3529 Short)", string0);
      assertEquals(3529, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[85];
      CharBuffer charBuffer0 = CharBuffer.allocate(1051);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1051, "!fJYT&\"O##&T1Of");
      TiffField tiffField0 = new TiffField(1051, 1051, fieldTypeAscii0, 1051, 1051, byteArray0, byteOrder0, 2633);
      tiffField0.dump();
      assertEquals(1051, tiffField0.getDirectoryType());
      assertEquals(2633, tiffField0.getSortHint());
      assertEquals(1051, tiffField0.getTag());
      assertEquals(1051L, tiffField0.getCount());
      assertEquals(1051, tiffField0.getBytesLength());
      assertEquals(1051, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[103];
      TiffField tiffField0 = new TiffField(118, 118, fieldTypeLong0, 118, 118, byteArray0, byteOrder0, 118);
      tiffField0.dump();
      assertEquals(118, tiffField0.getOffset());
      assertEquals(118, tiffField0.getTag());
      assertEquals(472, tiffField0.getBytesLength());
      assertEquals(118, tiffField0.getSortHint());
      assertEquals(118L, tiffField0.getCount());
      assertEquals(118, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41995, 1338, fieldTypeRational0.ASCII, 41995, 255L, byteArray0, byteOrder0, 1338);
      tiffField0.toString();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1338, tiffField0.getDirectoryType());
      assertEquals(1338, tiffField0.getSortHint());
      assertEquals(41995, tiffField0.getBytesLength());
      assertEquals(41995, tiffField0.getTag());
      assertEquals(41995L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(479, 50, fieldTypeFloat0, 0L, 50, byteArray0, byteOrder0, (byte)37);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)8, 65535);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(50, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(479, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(362, 362, fieldTypeShort0, 362, 362, byteArray0, byteOrder0, 362);
      tiffField0.getFieldTypeName();
      assertEquals(362, tiffField0.getDirectoryType());
      assertEquals(362, tiffField0.getSortHint());
      assertEquals(362, tiffField0.getTag());
      assertEquals(362, tiffField0.getOffset());
      assertEquals(362L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1036, 1036, fieldTypeShort0, 1036, 1036, byteArray0, byteOrder0, 1036);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1036, tiffField0.getTag());
      assertEquals(1036L, tiffElement0.offset);
      assertEquals(1036, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(1036, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1036, 1036, fieldTypeRational0, 1036, 1036, byteArray0, byteOrder0, 1036);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1036, tiffField0.getOffset());
      assertEquals(1036, tiffField0.getTag());
      assertEquals(1036, tiffField0.getSortHint());
      assertEquals(1036, int0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146772796, 2146772796, fieldTypeShort0, 8528L, 8528L, byteArray0, byteOrder0, (-3619));
      int int0 = tiffField0.getSortHint();
      assertEquals(2146772796, tiffField0.getTag());
      assertEquals(8528, tiffField0.getOffset());
      assertEquals(2146772796, tiffField0.getDirectoryType());
      assertEquals(8528L, tiffField0.getCount());
      assertEquals((-3619), int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(388, 388, fieldTypeShort0, 388, 388, byteArray0, byteOrder0, 388);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(388, tiffField0.getDirectoryType());
      assertEquals("388 (0x184: Unknown Tag): ", string0);
      assertEquals(388L, tiffField0.getCount());
      assertEquals(388, tiffField0.getSortHint());
      assertEquals(388, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4117, 4117, fieldTypeByte0, 4117, 4117, (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(1012, 1012, fieldTypeRational0, 1012, 1012, byteArray0, (ByteOrder) null, 1012);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }
}
