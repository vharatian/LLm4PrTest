/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 02:27:32 GMT 2025
 */

package org.apache.commons.imaging.formats.png.chunks;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.commons.imaging.formats.png.GammaCorrection;
import org.apache.commons.imaging.formats.png.chunks.PngChunkPlte;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PngChunkPlte_ESTest extends PngChunkPlte_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(0, 0, 0, byteArray0);
      try { 
        pngChunkPlte0.getRGB(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PNG: unknown Palette reference: 0
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-56);
      PngChunkPlte pngChunkPlte0 = null;
      try {
        pngChunkPlte0 = new PngChunkPlte(255, 0, (-643), byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Not a Valid Png File: PLTE Corrupt
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-87);
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(3, 3, 3, byteArray0);
      assertEquals(3, pngChunkPlte0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      PngChunkPlte pngChunkPlte0 = null;
      try {
        pngChunkPlte0 = new PngChunkPlte(2627, 2, (-16777216), byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // PLTE: wrong length: 2627
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(0, 0, 3, byteArray0);
      int[] intArray0 = pngChunkPlte0.getRgb();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(3, 3, 3, byteArray0);
      // Undeclared exception!
      try { 
        pngChunkPlte0.correct((GammaCorrection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PngChunkPlte pngChunkPlte0 = null;
      try {
        pngChunkPlte0 = new PngChunkPlte(0, 0, 0, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      PngChunkPlte pngChunkPlte0 = null;
      try {
        pngChunkPlte0 = new PngChunkPlte((-315), (-315), (-315), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(3, 3, 3, byteArray0);
      GammaCorrection gammaCorrection0 = new GammaCorrection(3, 0.0);
      pngChunkPlte0.correct(gammaCorrection0);
      assertEquals(3, pngChunkPlte0.crc);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(3, 3, 3, byteArray0);
      try { 
        pngChunkPlte0.getRGB(3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PNG: unknown Palette reference: 3
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(3, 3, 3, byteArray0);
      int int0 = pngChunkPlte0.getRGB((byte)0);
      assertEquals((-16777216), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(3, 3, 3, byteArray0);
      try { 
        pngChunkPlte0.getRGB((byte) (-87));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PNG: unknown Palette reference: -87
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      PngChunkPlte pngChunkPlte0 = null;
      try {
        pngChunkPlte0 = new PngChunkPlte((-1036), (-1036), (-1036), byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // PLTE: wrong length: -1036
         //
         verifyException("org.apache.commons.imaging.formats.png.chunks.PngChunkPlte", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      PngChunkPlte pngChunkPlte0 = new PngChunkPlte(3, 3, 3, byteArray0);
      int[] intArray0 = pngChunkPlte0.getRgb();
      assertArrayEquals(new int[] {(-16777216)}, intArray0);
  }
}
