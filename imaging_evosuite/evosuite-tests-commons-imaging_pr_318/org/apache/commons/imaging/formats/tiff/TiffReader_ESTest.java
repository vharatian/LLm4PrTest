/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:11:51 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.NoSuchFileException;
import org.apache.commons.imaging.FormatCompliance;
import org.apache.commons.imaging.bytesource.ByteSource;
import org.apache.commons.imaging.formats.tiff.TiffImagingParameters;
import org.apache.commons.imaging.formats.tiff.TiffReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffReader_ESTest extends TiffReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      byteArray0[3] = (byte) (-19);
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        tiffReader0.readDirectories(byteSource0, true, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unknown TIFF Version: 237
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)31;
      ByteSource byteSource0 = ByteSource.array(byteArray0, "");
      FormatCompliance formatCompliance0 = new FormatCompliance("sPfqD(c.[%53Ul");
      try { 
        tiffReader0.readDirectories(byteSource0, true, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Byte Order bytes don't match (0, 31).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      try { 
        tiffReader0.readFirstDirectory(byteSource0, false, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      // Undeclared exception!
      try { 
        tiffReader0.readFirstDirectory((ByteSource) null, true, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      try { 
        tiffReader0.readFirstDirectory(byteSource0, false, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      MockFile mockFile0 = new MockFile("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        tiffReader0.readDirectories(byteSource0, true, formatCompliance0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      // Undeclared exception!
      try { 
        tiffReader0.readDirectories((ByteSource) null, true, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-101), 2089);
      ByteSource byteSource0 = ByteSource.inputStream(byteArrayInputStream0, "(D}E=-Osm4M!{N\"F{V");
      FormatCompliance formatCompliance0 = new FormatCompliance("+' 075{}/po0", true);
      // Undeclared exception!
      try { 
        tiffReader0.readDirectories(byteSource0, true, formatCompliance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      try { 
        tiffReader0.readDirectories(byteSource0, false, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      // Undeclared exception!
      try { 
        tiffReader0.readContents((ByteSource) null, tiffImagingParameters0, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSource byteSource0 = ByteSource.inputStream(dataInputStream0, (String) null);
      // Undeclared exception!
      try { 
        tiffReader0.readContents(byteSource0, tiffImagingParameters0, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        tiffReader0.readContents(byteSource0, tiffImagingParameters0, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[7];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        tiffReader0.read(byteSource0, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      MockFile mockFile0 = new MockFile("Can't find tile length field.");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        tiffReader0.read(byteSource0, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(true);
      // Undeclared exception!
      try { 
        tiffReader0.read((ByteSource) null, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        tiffReader0.read(byteSource0, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        tiffReader0.readDirectories(byteSource0, true, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Byte Order bytes don't match (77, 0).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)88;
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      try { 
        tiffReader0.readContents(byteSource0, tiffImagingParameters0, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid TIFF byte order 88
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        tiffReader0.readDirectories(byteSource0, false, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unknown TIFF Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      MockFile mockFile0 = new MockFile("D{$bL>#[9I^1j[SJdJ");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      FormatCompliance formatCompliance0 = new FormatCompliance("D{$bL>#[9I^1j[SJdJ");
      try { 
        tiffReader0.readFirstDirectory(byteSource0, true, formatCompliance0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      MockFile mockFile0 = new MockFile("{[.4*luI$S.", "{[.4*luI$S.");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        tiffReader0.readContents(byteSource0, tiffImagingParameters0, formatCompliance0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }
}
