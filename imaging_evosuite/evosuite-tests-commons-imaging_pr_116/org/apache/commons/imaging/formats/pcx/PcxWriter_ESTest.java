/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 23:30:38 GMT 2025
 */

package org.apache.commons.imaging.formats.pcx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.RescaleOp;
import java.io.IOException;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.HashMap;
import javax.swing.DebugGraphics;
import org.apache.commons.imaging.PixelDensity;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.apache.commons.imaging.formats.pcx.PcxImagingParameters;
import org.apache.commons.imaging.formats.pcx.PcxWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PcxWriter_ESTest extends PcxWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(46, 46, false);
      PrintStream printStream0 = DebugGraphics.logStream();
      pcxImagingParameters0.setBitDepth(46);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(46, bufferedImage0.getTileHeight());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setCompression((-247));
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      BufferedImage bufferedImage0 = new BufferedImage(4, 3590, 4);
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      // Undeclared exception!
      pcxWriter0.writeImage(bufferedImage0, printStream0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      // Undeclared exception!
      try { 
        pcxWriter0.writeImage((BufferedImage) null, printStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(43, 43, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pcxWriter0.writeImage(bufferedImage0, pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(37, 37, 5);
      bufferedImage0.setRGB(8, 0, (-381));
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RescaleOp rescaleOp0 = new RescaleOp(11, 11, renderingHints0);
      rescaleOp0.filter(bufferedImage0, bufferedImage0);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(37, bufferedImage0.getHeight());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(31, 31, 5);
      bufferedImage0.setRGB(5, 11, 5);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(0, bufferedImage0.getMinTileX());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(49, 49, false);
      PrintStream printStream0 = DebugGraphics.logStream();
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 1751.0F, (RenderingHints) null);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      pcxWriter0.writeImage(bufferedImage1, printStream0);
      assertEquals(0, bufferedImage1.getMinX());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      pcxImagingParameters0.setBitDepth(2);
      pcxImagingParameters0.setPlanes(2);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(1, bufferedImage0.getNumXTiles());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      pcxImagingParameters0.setBitDepth(2);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(0, bufferedImage0.getTileGridYOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(37, 37, 5);
      bufferedImage0.setRGB(5, 30, 5);
      bufferedImage0.setRGB(8, 8, 37);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(37, bufferedImage0.getTileWidth());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      pcxImagingParameters0.setBitDepth(3);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(3, 3, 3);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(0, bufferedImage0.getTileGridXOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(1, 1, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setBitDepth(4);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(1, 172, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      pcxImagingParameters0.setBitDepth(8);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(1, bufferedImage0.getNumYTiles());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PrintStream printStream0 = DebugGraphics.logStream();
      pcxImagingParameters0.setBitDepth(32);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(4, 32, 4);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(0, bufferedImage0.getMinTileY());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setBitDepth(24);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
      BufferedImage bufferedImage0 = new BufferedImage(24, 24, 1);
      pcxWriter0.writeImage(bufferedImage0, printStream0);
      assertEquals(0, bufferedImage0.getMinX());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      PixelDensity pixelDensity0 = PixelDensity.createFromPixelsPerMetre((-229.2666370324986), (-229.2666370324986));
      pcxImagingParameters0.setPixelDensity(pixelDensity0);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImagingParameters0.setCompression(870);
      PcxWriter pcxWriter0 = new PcxWriter(pcxImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PcxWriter pcxWriter0 = new PcxWriter((PcxImagingParameters) null);
  }
}
