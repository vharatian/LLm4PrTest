/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:54:51 GMT 2025
 */

package org.apache.commons.imaging.palette;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.imaging.palette.ColorCount;
import org.apache.commons.imaging.palette.ColorGroup;
import org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MostPopulatedBoxesMedianCut_ESTest extends MostPopulatedBoxesMedianCut_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      ColorCount colorCount0 = new ColorCount(2718);
      colorCount0.count = 4;
      LinkedList<ColorCount> linkedList0 = new LinkedList<ColorCount>();
      linkedList0.push(colorCount0);
      ColorCount colorCount1 = new ColorCount(3840);
      colorCount1.count = 3840;
      linkedList0.add(colorCount1);
      linkedList0.add(colorCount1);
      linkedList0.add(colorCount1);
      ColorGroup colorGroup0 = new ColorGroup(linkedList0, true);
      LinkedList<ColorGroup> linkedList1 = new LinkedList<ColorGroup>();
      linkedList1.add(colorGroup0);
      linkedList1.add(colorGroup0);
      mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList1, false);
      boolean boolean0 = mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList1, true);
      assertFalse(linkedList1.contains(colorGroup0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      // Undeclared exception!
      try { 
        mostPopulatedBoxesMedianCut0.performNextMedianCut((List<ColorGroup>) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.MostPopulatedBoxesMedianCut", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      ColorCount colorCount0 = new ColorCount(2718);
      colorCount0.count = 4;
      LinkedList<ColorCount> linkedList0 = new LinkedList<ColorCount>();
      linkedList0.push(colorCount0);
      colorCount0.count = 1;
      ColorCount colorCount1 = new ColorCount(3840);
      colorCount1.count = 3840;
      linkedList0.add(colorCount1);
      linkedList0.add(colorCount1);
      linkedList0.add(colorCount1);
      ColorGroup colorGroup0 = new ColorGroup(linkedList0, true);
      LinkedList<ColorGroup> linkedList1 = new LinkedList<ColorGroup>();
      linkedList1.add(colorGroup0);
      boolean boolean0 = mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList1, false);
      assertFalse(linkedList1.contains(colorGroup0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<ColorGroup> linkedList0 = new LinkedList<ColorGroup>();
      LinkedList<ColorCount> linkedList1 = new LinkedList<ColorCount>();
      ColorCount colorCount0 = new ColorCount(1520);
      linkedList1.push(colorCount0);
      ColorCount colorCount1 = new ColorCount((-1));
      linkedList1.add(colorCount1);
      colorCount0.count = 1520;
      ColorGroup colorGroup0 = new ColorGroup(linkedList1, true);
      boolean boolean0 = linkedList0.add(colorGroup0);
      linkedList1.removeLast();
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      boolean boolean1 = mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList0, true);
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<ColorGroup> linkedList0 = new LinkedList<ColorGroup>();
      LinkedList<ColorCount> linkedList1 = new LinkedList<ColorCount>();
      ColorCount colorCount0 = new ColorCount(1);
      linkedList1.push(colorCount0);
      ColorCount colorCount1 = new ColorCount((-1));
      linkedList1.add(colorCount1);
      colorCount1.count = 1;
      ColorGroup colorGroup0 = new ColorGroup(linkedList1, true);
      colorCount1.count = (-1);
      linkedList0.add(colorGroup0);
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      // Undeclared exception!
      try { 
        mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 3
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<ColorGroup> linkedList0 = new LinkedList<ColorGroup>();
      LinkedList<ColorCount> linkedList1 = new LinkedList<ColorCount>();
      ColorCount colorCount0 = new ColorCount(1);
      linkedList1.push(colorCount0);
      ColorCount colorCount1 = new ColorCount(0);
      linkedList1.add(colorCount1);
      colorCount1.count = 1;
      ColorGroup colorGroup0 = new ColorGroup(linkedList1, true);
      linkedList0.add(colorGroup0);
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      boolean boolean0 = mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList0, true);
      assertFalse(linkedList0.contains(colorGroup0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<ColorGroup> linkedList0 = new LinkedList<ColorGroup>();
      LinkedList<ColorCount> linkedList1 = new LinkedList<ColorCount>();
      ColorCount colorCount0 = new ColorCount(1);
      linkedList1.push(colorCount0);
      ColorCount colorCount1 = new ColorCount(0);
      linkedList1.add(colorCount1);
      ColorGroup colorGroup0 = new ColorGroup(linkedList1, true);
      linkedList0.add(colorGroup0);
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      boolean boolean0 = mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList0, true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MostPopulatedBoxesMedianCut mostPopulatedBoxesMedianCut0 = new MostPopulatedBoxesMedianCut();
      ColorCount colorCount0 = new ColorCount(2718);
      colorCount0.count = 2718;
      LinkedList<ColorCount> linkedList0 = new LinkedList<ColorCount>();
      linkedList0.push(colorCount0);
      ColorCount colorCount1 = new ColorCount(3840);
      colorCount1.count = 3840;
      linkedList0.add(colorCount1);
      linkedList0.add(colorCount0);
      ColorGroup colorGroup0 = new ColorGroup(linkedList0, true);
      LinkedList<ColorGroup> linkedList1 = new LinkedList<ColorGroup>();
      linkedList1.add(colorGroup0);
      boolean boolean0 = mostPopulatedBoxesMedianCut0.performNextMedianCut(linkedList1, true);
      assertFalse(linkedList1.contains(colorGroup0));
      assertTrue(boolean0);
  }
}
