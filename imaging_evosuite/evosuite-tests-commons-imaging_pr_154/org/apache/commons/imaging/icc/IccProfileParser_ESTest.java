/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:11:12 GMT 2025
 */

package org.apache.commons.imaging.icc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.color.ICC_Profile;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.icc.IccProfileInfo;
import org.apache.commons.imaging.icc.IccProfileParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IccProfileParser_ESTest extends IccProfileParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("2T1");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      MockFile mockFile0 = new MockFile("2T1");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      IccProfileInfo iccProfileInfo0 = iccProfileParser0.getICCProfileInfo((ByteSource) byteSourceFile0);
      assertNull(iccProfileInfo0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      byte[] byteArray0 = new byte[58];
      boolean boolean0 = iccProfileParser0.issRGB(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      // Undeclared exception!
      try { 
        iccProfileParser0.issRGB((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      // Undeclared exception!
      try { 
        iccProfileParser0.issRGB((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.icc.IccProfileParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "F]RYQBX ");
      // Undeclared exception!
      try { 
        iccProfileParser0.issRGB((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      MockFile mockFile0 = new MockFile("COLORANT_ORDER_TAG");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        iccProfileParser0.issRGB((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      // Undeclared exception!
      try { 
        iccProfileParser0.issRGB((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("2T1");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      MockFile mockFile0 = new MockFile("2T1");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      boolean boolean0 = iccProfileParser0.issRGB((ByteSource) byteSourceFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("2T1");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      MockFile mockFile0 = new MockFile("2T1");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        iccProfileParser0.issRGB((ByteSource) byteSourceFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid ICC Profile
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      MockFile mockFile0 = new MockFile("7aWd@'R{3x~##`e[H");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      IccProfileInfo iccProfileInfo0 = iccProfileParser0.getICCProfileInfo((ByteSource) byteSourceFile0);
      assertNull(iccProfileInfo0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("2T1");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      MockFile mockFile0 = new MockFile("2T1");
      boolean boolean0 = iccProfileParser0.issRGB((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("2T1");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      MockFile mockFile0 = new MockFile("2T1");
      try { 
        iccProfileParser0.issRGB((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid ICC Profile
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      IccProfileInfo iccProfileInfo0 = iccProfileParser0.getICCProfileInfo((File) null);
      assertNull(iccProfileInfo0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      IccProfileInfo iccProfileInfo0 = iccProfileParser0.getICCProfileInfo((byte[]) null);
      assertNull(iccProfileInfo0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      byte[] byteArray0 = new byte[0];
      IccProfileInfo iccProfileInfo0 = iccProfileParser0.getICCProfileInfo(byteArray0);
      assertNull(iccProfileInfo0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      IccProfileInfo iccProfileInfo0 = iccProfileParser0.getICCProfileInfo((ICC_Profile) null);
      assertNull(iccProfileInfo0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      byte[] byteArray0 = new byte[1];
      try { 
        iccProfileParser0.issRGB(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid ICC Profile
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      // Undeclared exception!
      try { 
        iccProfileParser0.issRGB((ICC_Profile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.icc.IccProfileParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IccProfileParser iccProfileParser0 = new IccProfileParser();
      MockFile mockFile0 = new MockFile("2T1");
      try { 
        iccProfileParser0.issRGB((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
