/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:06:31 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.datareaders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.awt.image.RasterFormatException;
import java.nio.ByteOrder;
import java.util.LinkedList;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.formats.tiff.JpegImageData;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffImageData;
import org.apache.commons.imaging.formats.tiff.TiffRasterData;
import org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration;
import org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DataReaderStrips_ESTest extends DataReaderStrips_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, (-649L), 0, byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 7, 3680);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, 3680);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 2539, intArray0, 0, 0, (-16777216), 7, 2375, 0, tiffPlanarConfiguration0, byteOrder0, 127, tiffImageData_Strips0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(3033, 2375, 69, 0.0F);
      Rectangle rectangle0 = rectangle2D_Float0.getBounds();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-343L), byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(0, intArray0, (-2002), 0, (-2002));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 0, intArray0, 0, 1263, 1012, 0, 1, (-1030), tiffPlanarConfiguration0, (ByteOrder) null, (-2), tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(0, (-967));
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(0, intArray0, (-2002), 0, (-2002));
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 537);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 0, intArray0, 0, 0, 2122, 988, 7, 2122, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-3212.4F), (-967), 2122, 716.0586F);
      Rectangle rectangle0 = rectangle2D_Float0.getBounds();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -161
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(40070, linkedList0, 40070, 40070, byteOrder0);
      int[] intArray0 = new int[22];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(200, intArray0, (-1443), 40070, 200);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[1];
      JpegImageData jpegImageData0 = new JpegImageData((-1501L), 40070, byteArray0);
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) jpegImageData0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-1443));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 6, intArray0, 7, (byte)95, (-7), 4345, 7, (-7), tiffPlanarConfiguration0, byteOrder0, 4345, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Tiff: unknown/unsupported compression: -7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      int[] intArray0 = new int[21];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(0, intArray0, (-2002), 6, (-2002));
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 104, intArray0, 0, 2122, (-2002), 2122, 0, (-942), tiffPlanarConfiguration0, byteOrder0, (-37), tiffImageData_Strips0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-942), (-2135.2349F), 0.0F, 6);
      Rectangle rectangle0 = rectangle2D_Float0.getBounds();
      rectangle0.setFrameFromCenter((double) 6, (double) 0L, (double) 0.0F, (-1886.5909797267));
      TiffRasterData tiffRasterData0 = dataReaderStrips0.readRasterData(rectangle0);
      assertEquals(3774, tiffRasterData0.getHeight());
      assertEquals(12, tiffRasterData0.getWidth());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(40070, linkedList0, 40070, 40070, byteOrder0);
      int[] intArray0 = new int[22];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(255, intArray0, 6, 255, 255);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      byte[] byteArray0 = new byte[4];
      TiffImageData.Data tiffImageData_Data0 = new TiffImageData.Data((-1994), 40070, byteArray0);
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) tiffImageData_Data0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte)76);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 40070, intArray0, (-1994), 40070, 181, 1681, 40070, 181, tiffPlanarConfiguration0, byteOrder0, 16, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Tiff: unknown/unsupported compression: 181
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1558), linkedList0, (-1558), (-1558), byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr((-1558), intArray0, (-1558), 0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 0, intArray0, 0, 0, 0, (-1558), 6, 0, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(40115, linkedList0, 40115, 40115, byteOrder0);
      int[] intArray0 = new int[0];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(40115, intArray0, 40115, 40115, 6);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      MockFile mockFile0 = new MockFile("O'~^fxtX__.s", "O'~^fxtX__.s");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      TiffImageData.ByteSourceData tiffImageData_ByteSourceData0 = new TiffImageData.ByteSourceData(1348L, 568, byteSourceFile0);
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) tiffImageData_ByteSourceData0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 19, intArray0, 40115, 251, 568, 6, 351, (-1040), tiffPlanarConfiguration0, byteOrder0, 2146, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Tiff: unknown/unsupported compression: -1040
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(40095, linkedList0, 40095, 40095, byteOrder0);
      int[] intArray0 = new int[21];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(40095, intArray0, 40095, 6, 40095);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 40095);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 40095, intArray0, 40095, 0, 2313, 6, 0, 2313, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(40095, 40095, 6, 40095);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(40095, linkedList0, 40095, 40095, byteOrder0);
      int[] intArray0 = new int[22];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(40095, intArray0, 40095, 6, 40095);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 40095);
      DataReaderStrips dataReaderStrips0 = null;
      try {
        dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 478, (int[]) null, 0, 478, (-841), 0, 40095, 27, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-60), linkedList0, (-60), (-60), byteOrder0);
      int[] intArray0 = new int[23];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr((-60), intArray0, (-60), (-60), 0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[23];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-60));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = null;
      try {
        dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-60), intArray0, (-60), (-60), (-60), (-60), (-37), 8, tiffPlanarConfiguration0, byteOrder0, 3423, tiffImageData_Strips0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1558), linkedList0, (-1558), (-1558), byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr((-1558), intArray0, (-1558), 6, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 6, intArray0, 6, 6, 6, (-1558), 6, 6, tiffPlanarConfiguration0, byteOrder0, 6, (TiffImageData.Strips) null);
      Rectangle rectangle0 = new Rectangle();
      rectangle0.y = 6;
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Raster dimensions less than or equal to zero are not supported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffRasterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1558), linkedList0, (-1558), (-1558), byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr((-1558), intArray0, (-1558), 0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 0, intArray0, 0, 0, 0, (-1558), 6, 0, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5225, linkedList0, 5225, 5225, byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(5225, intArray0, 5225, 0, 6);
      Rectangle rectangle0 = new Rectangle(5225, 34853, 34853, 34853);
      rectangle0.setFrameFromCenter((double) 5225, (double) 5225L, 0.0, 0.0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, (-2453));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 5225, intArray0, 36, 532, 6, 10450, 5225, 10450, tiffPlanarConfiguration0, byteOrder0, (-1876), tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (y+height) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-60), linkedList0, (-60), (-60), byteOrder0);
      int[] intArray0 = new int[15];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr((-60), intArray0, 0, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[7];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-60));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-60), intArray0, (-60), 6, 0, 6, (-60), (-60), tiffPlanarConfiguration0, byteOrder0, (-60), tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle((-60), (-60));
      rectangle0.setFrameFromCenter((double) 0, (double) (-60L), (double) 0.0F, (-1886.5909797267));
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage width
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-40), linkedList0, (-40), (-40), byteOrder0);
      int[] intArray0 = new int[15];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr((-40), intArray0, 0, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[7];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-40));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-40), intArray0, (-40), 6, 0, 6, (-40), (-40), tiffPlanarConfiguration0, byteOrder0, (-37), tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle((-40), (-37));
      rectangle0.setFrameFromCenter((double) 0, (double) (-40L), (double) 0.0F, (-1886.5909797267));
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage width
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(40115, linkedList0, 40115, 40115, byteOrder0);
      int[] intArray0 = new int[0];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(40115, intArray0, 40115, 40115, 6);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 19, intArray0, 40115, 251, 568, 6, 351, (-1040), tiffPlanarConfiguration0, byteOrder0, 2146, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5225, linkedList0, 5225, 5225, byteOrder0);
      int[] intArray0 = new int[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(5225, intArray0, 5225, 0, 6);
      Rectangle rectangle0 = new Rectangle(5225, 34853, 34853, 34853);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, (-2453));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 5225, intArray0, 36, 532, 6, 10450, 5225, 10450, tiffPlanarConfiguration0, byteOrder0, (-1876), tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (x+width) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1526), linkedList0, (-1526), (-1526), byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr((-1526), intArray0, (-1526), 0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 0, intArray0, 0, 0, 0, (-1526), 6, 0, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData((Rectangle) null, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }
}
