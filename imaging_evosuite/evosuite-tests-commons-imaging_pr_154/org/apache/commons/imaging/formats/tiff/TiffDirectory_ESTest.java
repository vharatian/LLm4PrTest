/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:00:37 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteOrder;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.apache.commons.imaging.formats.tiff.JpegImageData;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffImageData;
import org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffDirectory_ESTest extends TiffDirectory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(628, linkedList0, 628, 628, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString("IFD2", 628, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoXpString0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"IFD2\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-434), 786, fieldTypeDouble0, (-434), 786, (byte[]) null, byteOrder0, (-3630));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-434), linkedList0, (-434), (-3630), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("_~OHfk\"p", (-434), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"_~OHfk\"p\" has wrong count -434
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-461), linkedList0, (-461), (-461), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("NV(", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"NV(\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-12), linkedList0, (-12), (-2451L), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)32, (-4427), fieldTypeLong0, (-19L), 1L, byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("BpUeJ!4Q&G\"iZ", (-428), (-12), tiffDirectoryType0);
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("Bad Type", (byte)32, tagInfoRationals0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"Bad Type\" has wrong count -19
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(102, linkedList0, 102, 102, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("XH 0)o1P;,,>.Q7Wk", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"XH 0)o1P;,,>.Q7Wk\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-950), linkedList0, (-950), (-950), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", (-950), (-950), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(628, linkedList0, 628, 628, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRational tagInfoRational0 = new TagInfoRational("", 628, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(325, linkedList0, 325, 325, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("RVW !;_cWm@-7", 6, 325, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"RVW !;_cWm@-7\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-447), linkedList0, (-447), (-447), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1673), (-851), fieldTypeLong0, (-1673), (-851), byteArray0, byteOrder0, (byte)96);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoLong tagInfoLong0 = new TagInfoLong("xR^43 c", (-1673), tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"xR^43 c\" has wrong count -1673
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2828, linkedList0, 2828, 2828, byteOrder0);
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", 6, fieldTypeShort0, 2828, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-8), linkedList0, (-8), (-8), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeLong0, (-8), (-8), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoLong tagInfoLong0 = new TagInfoLong("Bad Type", (-8), tiffDirectoryType0, true);
      TagInfoByte tagInfoByte0 = new TagInfoByte("Bad Type", (-8), fieldTypeLong0.LONG_OR_IFD, tagInfoLong0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"Bad Type\" has wrong count -8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(591, 3145, (FieldType) null, 3145, (-1374L), (byte[]) null, byteOrder0, (-1));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(400, linkedList0, (-1), 1L, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasJpegImageData();
      assertFalse(boolean0);
      assertEquals(1L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(400, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)100;
      TiffField tiffField0 = new TiffField(6, (-360), fieldTypeLong0, 6, 729L, byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("4.sG^>v.[T5ES]i7k", 6, 6, tiffDirectoryType0);
      tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 2L, 2147483647L, byteArray0, byteOrder0, 2);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("CFALayout", 6, 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, false);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(601, linkedList0, 601, 601, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeLong0, 601L, 601, byteArray0, byteOrder0, (byte)32);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("V7?bKKz}jdE<Gf47^Z\"", (byte)32, (byte)32, tiffDirectoryType0);
      int[] intArray0 = tiffDirectory0.getFieldValue(tagInfoSLongs0, false);
      assertEquals(601, tiffDirectory0.type);
      assertNotNull(intArray0);
      assertEquals(601L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-447), linkedList0, (-447), (-447), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)96, 6, fieldTypeLong0, (byte)96, 6, byteArray0, byteOrder0, (-447));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("*G>t=I66+'3K", (byte)96, 325, tiffDirectoryType0, false);
      tiffDirectory0.getFieldValue(tagInfoLongs0, true);
      assertEquals((-447L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-447), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeByte0, 48, 2062L, byteArray0, byteOrder0, (byte)119);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(48, linkedList0, 3724L, 3724L, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText("", 48, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoGpsText0, false);
      assertEquals(3724L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(48, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(591, linkedList0, 591, 591, byteOrder0);
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)32, "ProfileEmbedPolicy");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeLong0, 591L, 591, byteArray0, byteOrder0, (byte)32);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("e[tM|dXKJe", 32, fieldTypeLong0, 3427, tiffDirectoryType0);
      byte[] byteArray1 = tiffDirectory0.getFieldValue(tagInfoBytes0, false);
      assertEquals(591L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(591, tiffDirectory0.type);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffField tiffField0 = linkedList0.poll();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-462), linkedList0, 0, 0L, byteOrder0);
      linkedList0.add(tiffField0);
      tiffDirectory0.getDirectoryEntries();
      assertEquals((-462), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("i,QNU. ;<1!<w", 6, (-1681), tiffDirectoryType0, true);
      tiffDirectory0.findField((TagInfo) tagInfoLongs0, true);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, (-1711), fieldTypeByte0, 2816L, 2816L, byteArray0, byteOrder0, (byte) (-2));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 12L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", 12, 18, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoRationals0, true);
      assertEquals(2, tiffDirectory0.type);
      assertEquals(12L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-4687), linkedList0, 2050, (-4687), byteOrder0);
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(6, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-4687), (-4687), fieldTypeLong0, (-4687), 711L, byteArray0, byteOrder0, 979);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("", (-4687), tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoSShort0, true);
      assertEquals((-4687), tiffDirectory0.type);
      assertEquals((-4687L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(6, 514, fieldTypeLong0, 514, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TagInfo tagInfo0 = new TagInfo("\" is missing", 6, fieldTypeLong0, (-873));
      tiffDirectory0.findField(tagInfo0);
      assertEquals(6, tiffDirectory0.type);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(113, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2050, 2050, fieldTypeFloat0, 0L, 1477L, byteArray0, byteOrder0, 2050);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("", 2050, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2050, linkedList0, 0L, 1477L, byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoSByte0);
      assertEquals(1477L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(2050, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2554, (-767), fieldTypeAscii0, 5117L, 0L, (byte[]) null, byteOrder0, (-767));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TiffDirectory tiffDirectory0 = new TiffDirectory(150, linkedList0, 5117L, 2554, byteOrder0);
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("", 2554, 150, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoDoubles0);
      assertEquals(2554L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(150, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-411), (-1138), fieldTypeDouble0, (-1138), (-1138), (byte[]) null, byteOrder0, (-411));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", (-411), 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, (-1), byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoSLongs0);
      assertEquals(273, tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.offerFirst((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(597, linkedList0, 597, 597, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2690, linkedList0, 2690, 2690, (ByteOrder) null);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffImageData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(257, linkedList0, 257, 257, byteOrder0);
      linkedList0.push((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffFloatingPointRasterData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-494), linkedList0, (-494), (-494), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasJpegImageData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-39), linkedList0, (-39), (-39), byteOrder0);
      linkedList0.push((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-434), linkedList0, (-434), (-434), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue((TagInfoShortOrLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(50828, linkedList0, 50828, 50828, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue((TagInfoAscii) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory(634, linkedList0, 634, 634, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getJpegRawImageDataElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.offerFirst((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-2945L), 4294967295L, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFloatingPointRasterData(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShorts) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(615, linkedList0, 615, 615, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShortOrLong) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShort) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSShorts) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-236), linkedList0, (-236), (-236), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals((String) null, (-236), (-236), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"null\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-236), linkedList0, (-236), (-236), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSRational) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-434), linkedList0, (-434), (-434), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSLongs) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-447), linkedList0, (-447), (-447), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-3797), (-3797), fieldTypeLong0, (-1353L), 0L, byteArray0, byteOrder0, (byte)32);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("V7?bKKU}jdE<Gf47^Z\"", (-3797), (-447), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(628, linkedList0, 628, 628, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSByte) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-447), linkedList0, (-447), (-447), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-4271), 7, fieldTypeLong0, (-447L), (-447L), byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("I&QbQ#&]x", (-4271), (-2507), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2150, linkedList0, 2150, 2150, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoGpsText) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoFloats) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-453), linkedList0, (-453), (-453), byteOrder0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-453), 2530, fieldTypeRational0, (-453L), (-627L), byteArray0, byteOrder0, 33447);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", (-453), fieldTypeRational0, (-453), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-236), linkedList0, (-236), (-236), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoByte) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-950), linkedList0, (-950), (-950), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoAscii) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-434), (-1138), fieldTypeDouble0, (-2147483660L), (-1138), (byte[]) null, byteOrder0, (-3613));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("l3", (-434), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-434), linkedList0, (-2147483660L), (-3613), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfo) tagInfoSByte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)3, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(341, 48, fieldTypeDouble0, (-420L), 2L, byteArray0, byteOrder0, 273);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", 341, (byte)3, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1943, linkedList0, (-378L), (byte)3, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfo) tagInfoSLongs0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getElementDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-447), linkedList0, (-447), (-447), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-447), 50218, fieldTypeLong0, (-2678L), (-447L), byteArray0, byteOrder0, (-447));
      linkedList0.push(tiffField0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getElementDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-12), linkedList0, 709L, (-2451L), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)32, (-4427), fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getElementDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.findField((TagInfo) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2074, 786, fieldTypeDouble0, 2074, 786, (byte[]) null, byteOrder0, 786);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2074, linkedList0, 2074, 786, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.findField((TagInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-123), linkedList0, (-123), 2L, byteOrder0);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-462), linkedList0, 0, 0L, byteOrder0);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-462), fieldTypeRational0, (-2113), 0L, byteArray0, byteOrder0, (-1456));
      linkedList0.add(tiffField0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = null;
      try {
        tiffDirectory0 = new TiffDirectory(594, (List<TiffField>) null, 1761L, 594, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("CFALayout", 6, 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
      assertEquals(6, tiffDirectory0.type);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(591, linkedList0, 591, 591, byteOrder0);
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)32, "ProfileEmbedPolicy");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeLong0, 591L, 591, byteArray0, byteOrder0, (byte)32);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("BpUeJ!4Q&G\"iZ", (byte)32, 591, tiffDirectoryType0);
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("e[tM|dXKJe", (byte)32, 6, tagInfoRationals0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"e[tM|dXKJe\" has incorrect type ProfileEmbedPolicy
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-453), linkedList0, (-453), (-453), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(326, (-453), fieldTypeLong0, (-453L), (-453), byteArray0, byteOrder0, 1755);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong((String) null, 326, (-637), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(257, linkedList0, 257, 257, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("6UX!;VCZwFh)s~:", 6, 257, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"6UX!;VCZwFh)s~:\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 1480L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("YfjckN(", 0, 270, tiffDirectoryType0);
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("YfjckN(", 1158, 1, tagInfoSLongs0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoShorts0, false);
      assertEquals(0, tiffDirectory0.type);
      assertEquals(1480L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("?|%+pqcLXP]S;qK'M", 5174, 5174, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"?|%+pqcLXP]S;qK'M\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(681, 273, fieldTypeDouble0, 3119L, (-434), byteArray0, byteOrder0, (byte) (-80));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble(".v~b", 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-92), linkedList0, 0L, 0L, byteOrder0);
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii(".v~b", 681, (-4687), tagInfoDouble0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoAscii0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \".v~b\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-39), linkedList0, (-39), (-39), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("y$(", 6, 6, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoAscii0, false);
      assertEquals((-39), tiffDirectory0.type);
      assertEquals((-39L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-461), (-877), fieldTypeShort0, (-1524L), (-1524L), byteArray0, byteOrder0, 1158);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-461), linkedList0, (-461), (-461), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("org.apache.commons.io.filefilter.SizeFileFilter", (byte)13, tiffDirectoryType0);
      try { 
        tiffDirectory0.findField((TagInfo) tagInfoDouble0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing expected field: 13 (0xd: org.apache.commons.io.filefilter.SizeFileFilter): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)3, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(341, 48, fieldTypeDouble0, (-420L), (-15L), byteArray0, byteOrder0, 273);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", 341, (byte)3, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1943, linkedList0, (-378L), (byte)3, byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoSLongs0, false);
      assertEquals(1943, tiffDirectory0.type);
      assertEquals(3L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-778), linkedList0, (-778), (-778), byteOrder0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      tiffDirectory0.getTiffImage(byteOrder0, (Map<String, Object>) hashMap0);
      assertEquals((-778), tiffDirectory0.type);
      assertEquals((-778L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 1L, 4162L, (byte[]) null, byteOrder0, (-1921));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-230), linkedList0, (-434), 0L, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffImageData();
      assertEquals(0L, tiffDirectory0.nextDirectoryOffset);
      assertTrue(boolean0);
      assertEquals((-230), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2084), linkedList0, 2697L, 1915L, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffImageData();
      assertEquals(1915L, tiffDirectory0.nextDirectoryOffset);
      assertFalse(boolean0);
      assertEquals((-2084), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = TiffDirectory.description((-2));
      assertEquals("Exif", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = TiffDirectory.description(606);
      assertEquals("Bad Type", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-123), linkedList0, (-123), 2L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("'tZ:1r58pP3l&eT", 6, (-628), tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoSLongs0);
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
      assertEquals((-123), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(594, linkedList0, 594, 594, byteOrder0);
      try { 
        tiffDirectory0.getJpegRawImageDataElement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(636, linkedList0, (-1851L), 1544L, byteOrder0);
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(361, linkedList0, 361, 361, byteOrder0);
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoXpString) null, false);
      assertEquals(2820, tiffDirectory0.type);
      assertEquals(2820L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(628, linkedList0, 628, 628, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoXpString) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-434), (-1138), fieldTypeDouble0, (-2147483648L), (-1138), (byte[]) null, byteOrder0, (-3613));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", (-434), 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(124, linkedList0, (-3613), (-237L), byteOrder0);
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString("zy2@^>HIzViJv{L}", (-434), tagInfoSLongs0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoXpString0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-472), linkedList0, (-472), (-472), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText("", 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoGpsText0, false);
      assertEquals((-472), tiffDirectory0.type);
      assertEquals((-472L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(628, linkedList0, 628, 628, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText("_Q{ddM!=`N#", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoGpsText0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"_Q{ddM!=`N#\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("iS", 6, 18, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDoubles0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"iS\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-447), linkedList0, (-447), (-447), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)96, 6, fieldTypeLong0, (byte)96, 6, byteArray0, byteOrder0, (-447));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles(" i!-[]7vL#b", (byte)96, (byte)96, tiffDirectoryType0);
      double[] doubleArray0 = tiffDirectory0.getFieldValue(tagInfoDoubles0, false);
      assertEquals((-447L), tiffDirectory0.nextDirectoryOffset);
      assertNull(doubleArray0);
      assertEquals((-447), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("v<;QX%7n(XF~>]", 606, 606, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDoubles0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"v<;QX%7n(XF~>]\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoDoubles) null, false);
      assertEquals(606L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(606, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("=E#yM)ecDy=4", 273, 273, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoDoubles0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(545, 40960, fieldTypeDouble0, 1L, 545, (byte[]) null, byteOrder0, 40960);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(40960, linkedList0, 40960, 40960, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("x_~OHk\"p", 545, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1460, 786, fieldTypeDouble0, 1460, 786, (byte[]) null, byteOrder0, (-3630));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1460, linkedList0, 1460, (-3630), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("_~OHfk\"p", 1460, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"_~OHfk\"p\" has wrong count 1460
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(6, (byte) (-1), (FieldType) null, 2L, 0, byteArray0, byteOrder0, (byte) (-1));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble(".v~b", 6, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, ")");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-589), fieldTypeAscii0, 0L, 653L, byteArray0, byteOrder0, (byte)96);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("h~R!mrZHn", 6, 0, tiffDirectoryType0, true);
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("h~R!mrZHn", 0, (byte)67, tagInfoLongs0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"h~R!mrZHn\" has incorrect type )
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("boFI+45i({:1hC5hG0", 606, 606, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"boFI+45i({:1hC5hG0\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2369), linkedList0, (-2369), (-2369), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("", (byte)96, (byte)27, tiffDirectoryType0, true);
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("K", 3, (byte)96, tagInfoLongs0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoFloats0, false);
      assertEquals((-2369), tiffDirectory0.type);
      assertEquals((-2369L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, ")");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-589), fieldTypeAscii0, 0L, 653L, byteArray0, byteOrder0, (byte)96);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("h~R!mrZHn", 6, 0, tiffDirectoryType0, true);
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("h~R!mrZHn", 0, (byte)67, tagInfoLongs0.directoryType);
      float[] floatArray0 = tiffDirectory0.getFieldValue(tagInfoFloats0, false);
      assertNull(floatArray0);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-950), linkedList0, (-950), (-950), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoFloat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat(" w1V{Wp", 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, (-1), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \" w1V{Wp\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("lk", 273, 273, tiffDirectoryType0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("lk", 273, (-1444), tagInfoDoubles0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoSRationals0, false);
      assertEquals(273L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(273, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSRationals) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoSRationals) null, false);
      assertEquals(606, tiffDirectory0.type);
      assertEquals(606L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(6, (byte) (-1), (FieldType) null, 2L, 0, byteArray0, byteOrder0, (byte) (-1));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("", 6, (byte) (-1), tiffDirectoryType0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 6, 8, tagInfoSBytes0.directoryType);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-434), (-1138), fieldTypeDouble0, (-2147483648L), (-1138), (byte[]) null, byteOrder0, (-3613));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", (-434), 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-3613), linkedList0, 1L, (-237L), byteOrder0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational", (-434), tagInfoSLongs0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeDouble0, 0L, (-1L), byteArray0, byteOrder0, 132);
      linkedList0.push(tiffField0);
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("A[D^]Ij;", 6, 34675, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-1871L), 6, (ByteOrder) null);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"A[D^]Ij;\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(601, linkedList0, 601, 601, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeLong0, 601L, 601, byteArray0, byteOrder0, (byte)0);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("V7?bKKz}dE<Gf47Z\"", (byte)32, (byte)32, tiffDirectoryType0);
      int[] intArray0 = tiffDirectory0.getFieldValue(tagInfoSLongs0, false);
      assertEquals(601, tiffDirectory0.type);
      assertEquals(601L, tiffDirectory0.nextDirectoryOffset);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(594, linkedList0, 594, 594, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", 6, 594, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs((String) null, (-467), (byte)4, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-655), linkedList0, (byte)3, 2L, (ByteOrder) null);
      tiffDirectory0.getFieldValue(tagInfoSLongs0, false);
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
      assertEquals((-655), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeDouble0, 0L, (-1L), byteArray0, byteOrder0, 132);
      linkedList0.push(tiffField0);
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("A[D^]Ij;", 6, 34675, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-1871L), 6, (ByteOrder) null);
      int[] intArray0 = tiffDirectory0.getFieldValue(tagInfoSLongs0, false);
      assertEquals(6, tiffDirectory0.type);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-12), linkedList0, (-12), (-2451L), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)32, (-4427), fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("BpUeJ!4Q&G\"iZ", (-428), (-12), tiffDirectoryType0);
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("Bad Type", (byte)32, tagInfoRationals0.directoryType);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2559, linkedList0, 2559, 2559, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)38, (byte)38, fieldTypeLong0, 2559L, 2559, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("Bad Type", 38, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"Bad Type\" has wrong count 2559
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("Bad Type", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"Bad Type\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong(":Nr!_7", 273, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \":Nr!_7\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("CFAPattern2", 273, 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, (-428L), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"CFAPattern2\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoSShorts) null, false);
      assertEquals(2820L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(2820, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-236), linkedList0, (-236), (-236), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("+DrxtRCV[gUetX%]_`", (-236), (-236), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"+DrxtRCV[gUetX%]_`\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-434), (-1138), fieldTypeDouble0, (-2147483648L), (-1138), (byte[]) null, byteOrder0, (-3613));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", (-434), 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2127, linkedList0, 2L, (-1L), byteOrder0);
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("Y1&de6|]b&cB*qGfGA", (-434), (-326), tagInfoSLongs0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoSShorts0, false);
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(2127, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(617, linkedList0, 617, 617, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSShort) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-434), (-1169), fieldTypeDouble0, (-1169), (-1169), (byte[]) null, byteOrder0, (-434));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", (-434), 273, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, (-1), (-434), byteOrder0);
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("", (-434), tagInfoSLongs0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(591, 3145, (FieldType) null, 3145, (-1374L), (byte[]) null, byteOrder0, (-1));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("'618<I l", 591, (-1), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(400, linkedList0, (-1), 1L, byteOrder0);
      tiffDirectory0.getFieldValue(tagInfoSBytes0, false);
      assertEquals(400, tiffDirectory0.type);
      assertEquals(1L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-477), linkedList0, (-477), (-477), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("", (-477), 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSBytes0, false);
      assertEquals((-477L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-477), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-251), linkedList0, (-251), (-251), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("", (-251), (-251), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSBytes0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-251), linkedList0, (-251), (-251), byteOrder0);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-251), (-251), (FieldType) null, (-650L), (-251L), byteArray0, byteOrder0, 1);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("", (-251), (-251), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoSBytes0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte(")", 606, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \")\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-434), (-1138), fieldTypeDouble0, (-2147483648L), (-1138), (byte[]) null, byteOrder0, (-3613));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("l3", (-434), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-434), linkedList0, (-2147483648L), (-3613), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"l3\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(606, (String) null);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-3192), 470, fieldTypeLong0, (-374), 0L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("pUeJ{4Q&G\"iZ", 4233, (byte) (-25), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2528, linkedList0, (-1), (-1130L), byteOrder0);
      TagInfoRationals tagInfoRationals1 = new TagInfoRationals("pUeJ{4Q&G\"iZ", (-3192), (-3930), tagInfoRationals0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoRationals1, false);
      assertEquals(2528, tiffDirectory0.type);
      assertEquals((-1130L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoRationals) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(325, linkedList0, 325, 325, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("offsets.length(", 325, 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoRationals0, false);
      assertEquals(325, tiffDirectory0.type);
      assertEquals(325L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(41986, "PX{hyd}'~:<,f3dBp9");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(606, (-1111), fieldTypeRational0, (-849L), (-2744L), byteArray0, byteOrder0, (-1994));
      linkedList0.add(tiffField0);
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("y.UGyfsj$e$fw5A", 606, 606, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"y.UGyfsj$e$fw5A\" has incorrect type PX{hyd}'~:<,f3dBp9
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, linkedList0, 3, 3, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoRational) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(587, 587, fieldTypeDouble0, 587, 587, (byte[]) null, byteOrder0, 587);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(587, linkedList0, 587, 587, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoRational tagInfoRational0 = new TagInfoRational("_~OHf", 587, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"_~OHf\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("\" has incorrect type ", 273, 273, tiffDirectoryType0);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type \" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("0s#!;:>", 273, 273, tiffDirectoryType0, false);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, false);
      assertEquals(273L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(273, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("^", 2820, 6, tiffDirectoryType0, false);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, false);
      assertEquals(2820L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(2820, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1216), (-1216), fieldTypeDouble0, (-1216), (-1216), (byte[]) null, byteOrder0, (-1216));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1216), linkedList0, (-1216), (-1216), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs(">U", (-1216), (-1216), tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoLongs0, false);
      assertEquals((-1216), tiffDirectory0.type);
      assertEquals((-1216L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("org.apache.commons.imaging.formats.tiff.TiffDirectory$ImageDataElement", 6, 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoLongs0, true);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(483, linkedList0, 483, 483, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoLongs) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("h~R!mrZHn", 6, 0, tiffDirectoryType0, true);
      tiffDirectory0.getFieldValue(tagInfoLongs0, false);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2369), linkedList0, (-2369), (-2369), byteOrder0);
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)96, (byte)96, fieldTypeFloat0, 944L, (-2369), byteArray0, byteOrder0, 643);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("", (byte)96, (byte)27, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", 6, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"\" has wrong count 6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-236), linkedList0, (-236), (-236), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", (-1243), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, ")");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-589), fieldTypeAscii0, 0L, 653L, byteArray0, byteOrder0, (byte)96);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoLong tagInfoLong0 = new TagInfoLong("h~R!mrZHn", 0, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"h~R!mrZHn\" has incorrect type )
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("~", 6, (byte)0, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"~\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(277, 277, fieldTypeDouble0, 277, 277, (byte[]) null, byteOrder0, 277);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TiffDirectory tiffDirectory0 = new TiffDirectory(277, linkedList0, 277, 277, byteOrder0);
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("lk", 277, 277, tiffDirectoryType0);
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("lk", 277, (-1330), tagInfoDoubles0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoShorts0, false);
      assertEquals(277L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(277, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(606, linkedList0, 606, 606, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoShort tagInfoShort0 = new TagInfoShort("Bad Type", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"Bad Type\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoShort tagInfoShort0 = new TagInfoShort("", 273, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-447), linkedList0, (-447), (-447), byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)96, 6, fieldTypeLong0, (byte)96, 6, byteArray0, byteOrder0, (-447));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("xR^43 c", (byte)96, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"xR^43 c\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(634, linkedList0, 634, 634, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoAscii) null, false);
      assertEquals(634, tiffDirectory0.type);
      assertEquals(634L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1201, linkedList0, 1201, 1201, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", 513, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoAscii0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("wb^40WH'", 273, 273, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoAscii0, false);
      assertEquals(273L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(273, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("0T:Ar", 273, 273, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoBytes0, false);
      assertEquals(273, tiffDirectory0.type);
      assertEquals(273L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", 273, fieldTypeDouble0, 273, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, (-1), 2777, byteOrder0);
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("YfjckN(", 2777, (-1), tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoBytes0, false);
      assertEquals((-1), tiffDirectory0.type);
      assertEquals(2777L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("CFALayout", 6, 949, tiffDirectoryType0);
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("ProfileName", 6, (-1311), tagInfoShortOrLong0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"ProfileName\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoByte tagInfoByte0 = new TagInfoByte("Exif", 273, fieldTypeDouble0, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"Exif\" has wrong count 273
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-236), linkedList0, (-236), (-236), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoByte tagInfoByte0 = new TagInfoByte(".ru3+;z`l", (-236), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \".ru3+;z`l\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-433), (-433), fieldTypeDouble0, (-433), (-433), (byte[]) null, byteOrder0, (-433));
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2095, linkedList0, (-433), (-433), byteOrder0);
      TagInfoByte tagInfoByte0 = new TagInfoByte("", (-433), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Double
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("CFALayout", 6, 949, tiffDirectoryType0);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"CFALayout\" has incorrect length 2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, 6, 6, byteOrder0);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(6, (-360), fieldTypeLong0, 6, 729L, byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("4.sG^>v.[T5ES]i7k", 6, 6, tiffDirectoryType0);
      tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("YfjckN(", 2777, 2777, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, (-1), 2777, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfo) tagInfoSLongs0);
      assertEquals(2777L, tiffDirectory0.nextDirectoryOffset);
      assertEquals((-1), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeDouble0, 0L, (-1L), byteArray0, byteOrder0, 132);
      linkedList0.push(tiffField0);
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("A[D^]Ij;", 6, 34675, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-1871L), 6, (ByteOrder) null);
      Object object0 = tiffDirectory0.getFieldValue((TagInfo) tagInfoSLongs0);
      assertNotNull(object0);
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-950), linkedList0, (-950), (-950), byteOrder0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[4];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-4466), 37399);
      tiffDirectory0.setTiffImageData(tiffImageData_Tiles0);
      try { 
        tiffDirectory0.getTiffImage(byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"ImageWidth\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(628, linkedList0, 628, 628, byteOrder0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      tiffDirectory0.getTiffImage((Map<String, Object>) hashMap0);
      assertEquals(628L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(628, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-950), linkedList0, (-950), (-950), byteOrder0);
      tiffDirectory0.getTiffImage();
      assertEquals((-950), tiffDirectory0.type);
      assertEquals((-950L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2454), linkedList0, 0L, (byte)0, byteOrder0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-2454), 3404);
      tiffDirectory0.setTiffImageData(tiffImageData_Tiles0);
      try { 
        tiffDirectory0.getTiffImage();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"ImageWidth\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeDouble0, 273, 273, (byte[]) null, byteOrder0, 273);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffFloatingPointRasterData();
      assertEquals(273L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(273, tiffDirectory0.type);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(429, linkedList0, 2552L, 2580, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffFloatingPointRasterData();
      assertEquals(2580L, tiffDirectory0.nextDirectoryOffset);
      assertFalse(boolean0);
      assertEquals(429, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(513, 2559, fieldTypeDouble0, 513, (-1L), (byte[]) null, byteOrder0, 6);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 793L, 2798L, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasJpegImageData();
      assertEquals(2798L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(1, tiffDirectory0.type);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-54), (String) null);
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)4, 1, fieldTypeLong0, (byte)4, (byte)12, byteArray0, byteOrder0, (byte)5);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-655), linkedList0, (byte)3, 2L, (ByteOrder) null);
      tiffDirectory0.dump();
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
      assertEquals((-655), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String string0 = TiffDirectory.description(2);
      assertEquals("Thumbnail", string0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      String string0 = TiffDirectory.description(1);
      assertEquals("Sub", string0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String string0 = TiffDirectory.description(0);
      assertEquals("Root", string0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      String string0 = TiffDirectory.description((-1));
      assertEquals("Unknown", string0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2), linkedList0, 2862L, (-4824L), byteOrder0);
      String string0 = tiffDirectory0.description();
      assertEquals((-4824L), tiffDirectory0.nextDirectoryOffset);
      assertEquals("Exif", string0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      String string0 = TiffDirectory.description((-3));
      assertEquals("Gps", string0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      String string0 = TiffDirectory.description((-4));
      assertEquals("Interoperability", string0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, ")");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-589), fieldTypeAscii0, 0L, 653L, byteArray0, byteOrder0, (byte)96);
      linkedList0.add(tiffField0);
      tiffDirectory0.getElementDescription();
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      tiffDirectory0.getElementDescription();
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      TiffDirectory.ImageDataElement tiffDirectory_ImageDataElement0 = new TiffDirectory.ImageDataElement(48, 48);
      String string0 = tiffDirectory_ImageDataElement0.getElementDescription();
      assertEquals("ImageDataElement", string0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2820, linkedList0, 2820, 2820, byteOrder0);
      tiffDirectory0.getTiffImage(byteOrder0);
      assertEquals(2820, tiffDirectory0.type);
      assertEquals(2820L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1216), linkedList0, (-1216), (-1216), byteOrder0);
      tiffDirectory0.getJpegImageData();
      assertEquals((-1216L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-1216), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(522, linkedList0, 522, 522, byteOrder0);
      tiffDirectory0.setJpegImageData((JpegImageData) null);
      assertEquals(522, tiffDirectory0.type);
      assertEquals(522L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-756), linkedList0, (-756), (-756), byteOrder0);
      tiffDirectory0.getTiffImageData();
      assertEquals((-756), tiffDirectory0.type);
      assertEquals((-756L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, linkedList0, 3, 3, byteOrder0);
      tiffDirectory0.getDirectoryEntries();
      assertEquals(3, tiffDirectory0.type);
      assertEquals(3L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2580, linkedList0, 2580, 2580, byteOrder0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        tiffDirectory0.getFloatingPointRasterData(hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"SampleFormat\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }
}
