/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:04:02 GMT 2025
 */

package org.apache.commons.imaging.formats.webp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.SequenceInputStream;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import javax.swing.DebugGraphics;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.bytesource.ByteSource;
import org.apache.commons.imaging.common.XmpImagingParameters;
import org.apache.commons.imaging.formats.webp.WebPImageParser;
import org.apache.commons.imaging.formats.webp.WebPImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WebPImageParser_ESTest extends WebPImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      ImageFormat[] imageFormatArray0 = webPImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      XmpImagingParameters<WebPImagingParameters> xmpImagingParameters0 = new XmpImagingParameters<WebPImagingParameters>();
      try { 
        webPImageParser0.getXmpXml(byteSource0, xmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      File file0 = MockFile.createTempFile("Png-Custom", "Png-Custom");
      ByteSource byteSource0 = ByteSource.file(file0);
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getXmpXml(byteSource0, webPImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getXmpXml((ByteSource) null, webPImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser$ChunksReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-91), (byte)54);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ByteSource byteSource0 = ByteSource.inputStream(sequenceInputStream0, "");
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getXmpXml(byteSource0, webPImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      XmpImagingParameters<WebPImagingParameters> xmpImagingParameters0 = new XmpImagingParameters<WebPImagingParameters>();
      MockFile mockFile0 = new MockFile("");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        webPImageParser0.getXmpXml(byteSource0, xmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "WebP-Custom");
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getMetadata(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      File file0 = MockFile.createTempFile("PNG: no chunks", "PNG: no chunks");
      Path path0 = file0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getMetadata(byteSource0, webPImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getMetadata((ByteSource) null, webPImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser$ChunksReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("", "");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      try { 
        webPImageParser0.getMetadata(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("Chunk Payload");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      try { 
        webPImageParser0.getImageSize(byteSource0, webPImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getImageSize((ByteSource) null, webPImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser$ChunksReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getImageSize(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("webp", "webp");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getImageInfo(byteSource0, webPImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getImageInfo((ByteSource) null, webPImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser$ChunksReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      ByteSource byteSource0 = ByteSource.path(path0);
      try { 
        webPImageParser0.getImageInfo(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      WebPImageParser webPImageParser0 = new WebPImageParser();
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getIccProfileBytes(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      File file0 = MockFile.createTempFile("e!x0LtiM*L<|R\"~", "e!x0LtiM*L<|R\"~");
      ByteSource byteSource0 = ByteSource.file(file0);
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getIccProfileBytes(byteSource0, webPImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getIccProfileBytes((ByteSource) null, webPImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser$ChunksReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-875), 638);
      ByteSource byteSource0 = ByteSource.inputStream(byteArrayInputStream0, "jz@VJWZb7DLfK,HQ6}8");
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getIccProfileBytes(byteSource0, webPImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      try { 
        webPImageParser0.getIccProfileBytes(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[4];
      PrintStream printStream0 = DebugGraphics.logStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, true);
      ByteSource byteSource0 = ByteSource.array(byteArray0, "");
      try { 
        webPImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("h'qwpQj7cqpnS@E=nTk", "h'qwpQj7cqpnS@E=nTk");
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h'qwpQj7cqpnS@E=nTk");
      try { 
        webPImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      // Undeclared exception!
      try { 
        webPImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.webp.chunks.WebPChunkXyzw");
      try { 
        webPImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0, (String) null);
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      try { 
        webPImageParser0.getImageSize(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      String string0 = webPImageParser0.getDefaultExtension();
      assertEquals("webp", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      try { 
        webPImageParser0.getBufferedImage((ByteSource) null, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Reading WebP files is currently not supported
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      String string0 = webPImageParser0.getName();
      assertEquals("WebP-Custom", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      String[] stringArray0 = webPImageParser0.getAcceptedExtensions();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      WebPImageParser webPImageParser0 = new WebPImageParser();
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      try { 
        webPImageParser0.getImageInfo(byteSource0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }
}
