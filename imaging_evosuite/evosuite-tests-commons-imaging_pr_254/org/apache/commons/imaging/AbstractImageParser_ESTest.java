/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:49:26 GMT 2025
 */

package org.apache.commons.imaging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.SequenceInputStream;
import java.net.URI;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.util.Enumeration;
import java.util.List;
import org.apache.commons.imaging.AbstractImageParser;
import org.apache.commons.imaging.FormatCompliance;
import org.apache.commons.imaging.ImageFormats;
import org.apache.commons.imaging.ImageInfo;
import org.apache.commons.imaging.bytesource.ByteSource;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.formats.bmp.BmpImageParser;
import org.apache.commons.imaging.formats.bmp.BmpImagingParameters;
import org.apache.commons.imaging.formats.dcx.DcxImageParser;
import org.apache.commons.imaging.formats.gif.GifImageParser;
import org.apache.commons.imaging.formats.gif.GifImagingParameters;
import org.apache.commons.imaging.formats.ico.IcoImageParser;
import org.apache.commons.imaging.formats.ico.IcoImagingParameters;
import org.apache.commons.imaging.formats.jpeg.JpegImageParser;
import org.apache.commons.imaging.formats.jpeg.JpegImagingParameters;
import org.apache.commons.imaging.formats.pcx.PcxImageParser;
import org.apache.commons.imaging.formats.pcx.PcxImagingParameters;
import org.apache.commons.imaging.formats.png.PngImageParser;
import org.apache.commons.imaging.formats.png.PngImagingParameters;
import org.apache.commons.imaging.formats.pnm.PnmImageParser;
import org.apache.commons.imaging.formats.pnm.PnmImagingParameters;
import org.apache.commons.imaging.formats.psd.PsdImageParser;
import org.apache.commons.imaging.formats.psd.PsdImagingParameters;
import org.apache.commons.imaging.formats.rgbe.RgbeImageParser;
import org.apache.commons.imaging.formats.rgbe.RgbeImagingParameters;
import org.apache.commons.imaging.formats.tiff.TiffImageParser;
import org.apache.commons.imaging.formats.wbmp.WbmpImageParser;
import org.apache.commons.imaging.formats.wbmp.WbmpImagingParameters;
import org.apache.commons.imaging.formats.webp.WebPImageParser;
import org.apache.commons.imaging.formats.webp.WebPImagingParameters;
import org.apache.commons.imaging.formats.xbm.XbmImageParser;
import org.apache.commons.imaging.formats.xbm.XbmImagingParameters;
import org.apache.commons.imaging.formats.xpm.XpmImageParser;
import org.apache.commons.imaging.formats.xpm.XpmImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AbstractImageParser_ESTest extends AbstractImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      String string0 = wbmpImageParser0.getName();
      assertEquals("Wireless Application Protocol Bitmap Format", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      ImageMetadata imageMetadata0 = wbmpImageParser0.getMetadata(byteArray0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Unexpected separate value item.", "Unexpected separate value item.");
      IcoImageParser icoImageParser0 = new IcoImageParser();
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      IcoImagingParameters icoImagingParameters0 = new IcoImagingParameters();
      ImageMetadata imageMetadata0 = icoImageParser0.getMetadata(byteSource0, icoImagingParameters0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      IcoImageParser icoImageParser0 = new IcoImageParser();
      byte[] byteArray0 = new byte[6];
      IcoImagingParameters icoImagingParameters0 = new IcoImagingParameters();
      Dimension dimension0 = icoImageParser0.getImageSize(byteArray0, icoImagingParameters0);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[9];
      Dimension dimension0 = dcxImageParser0.getImageSize(byteArray0);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[8];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "PNG: no cuns");
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      Dimension dimension0 = dcxImageParser0.getImageSize(byteSource0, pcxImagingParameters0);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[8];
      PcxImagingParameters pcxImagingParameters0 = dcxImageParser0.getDefaultParameters();
      ImageInfo imageInfo0 = dcxImageParser0.getImageInfo(byteArray0, pcxImagingParameters0);
      assertNull(imageInfo0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      IcoImageParser icoImageParser0 = new IcoImageParser();
      byte[] byteArray0 = new byte[6];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      ImageInfo imageInfo0 = icoImageParser0.getImageInfo(byteSource0);
      assertNull(imageInfo0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[5];
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      byte[] byteArray1 = wbmpImageParser0.getIccProfileBytes(byteArray0, wbmpImagingParameters0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RgbeImageParser rgbeImageParser0 = new RgbeImageParser();
      byte[] byteArray0 = new byte[7];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "@BB!nndC*g");
      RgbeImagingParameters rgbeImagingParameters0 = rgbeImageParser0.getDefaultParameters();
      byte[] byteArray1 = rgbeImageParser0.getIccProfileBytes(byteSource0, rgbeImagingParameters0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      assertFalse(wbmpImagingParameters0.isStrict());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      String string0 = gifImageParser0.getDefaultExtension();
      assertEquals("gif", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".j1*", ".j1*");
      RgbeImageParser rgbeImageParser0 = new RgbeImageParser();
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      String string0 = rgbeImageParser0.dumpImageFile(byteSource0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile(".j1*", ".j1*");
      boolean boolean0 = wbmpImageParser0.canAcceptExtension((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(11);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.writeImage((BufferedImage) null, pipedOutputStream0, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[2];
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      try { 
        jpegImageParser0.getMetadata(byteArray0, jpegImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getMetadata((byte[]) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getMetadata(byteArray0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      byte[] byteArray0 = new byte[3];
      try { 
        pngImageParser0.getMetadata(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PNG Segment: Incorrect Signature
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[9];
      try { 
        gifImageParser0.getMetadata(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RgbeImageParser rgbeImageParser0 = new RgbeImageParser();
      RgbeImagingParameters rgbeImagingParameters0 = rgbeImageParser0.getDefaultParameters();
      byte[] byteArray0 = new byte[3];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        rgbeImageParser0.getMetadata(byteSource0, rgbeImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getMetadata(byteSource0, jpegImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        webPImageParser0.getMetadata(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      MockFile mockFile0 = new MockFile("+l;:p<pod%qd", "+l;:p<pod%qd");
      WebPImageParser webPImageParser0 = new WebPImageParser();
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      try { 
        webPImageParser0.getMetadata(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.getMetadata((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getMetadata((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      byte[] byteArray0 = new byte[1];
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      try { 
        xpmImageParser0.getImageSize(byteArray0, xpmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Parsing XPM file failed, signature isn't '/* XPM *_/'
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      try { 
        wbmpImageParser0.getImageSize(byteArray0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      try { 
        wbmpImageParser0.getImageSize(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid/unsupported WBMP type 2
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageSize((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      try { 
        xbmImageParser0.getImageSize(byteSource0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      MockFile mockFile0 = new MockFile("pic", "pic");
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      try { 
        xpmImageParser0.getImageSize(byteSource0, xpmImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        xpmImageParser0.getImageSize((ByteSource) null, xpmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSource byteSource0 = ByteSource.inputStream(pipedInputStream0, "@^G^}y");
      try { 
        jpegImageParser0.getImageSize(byteSource0, (JpegImagingParameters) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((File) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)46;
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      try { 
        wbmpImageParser0.getImageInfo(byteArray0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid/unsupported WBMP type 46
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      try { 
        wbmpImageParser0.getImageInfo(byteArray0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "j1*0not a valid ico file");
      XbmImagingParameters xbmImagingParameters0 = xbmImageParser0.getDefaultParameters();
      try { 
        xbmImageParser0.getImageInfo(byteSource0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Unexpected separate value item.", "Unexpected separate value item.");
      BmpImageParser bmpImageParser0 = new BmpImageParser();
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      BmpImagingParameters bmpImagingParameters0 = new BmpImagingParameters();
      try { 
        bmpImageParser0.getImageInfo(byteSource0, bmpImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getImageInfo((ByteSource) null, webPImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser$ChunksReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      PnmImageParser pnmImageParser0 = new PnmImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "2*Qzc{Hp2XOB}q");
      PnmImagingParameters pnmImagingParameters0 = pnmImageParser0.getDefaultParameters();
      try { 
        pnmImageParser0.getImageInfo(byteSource0, pnmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PNM File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      RgbeImageParser rgbeImageParser0 = new RgbeImageParser();
      ByteSource byteSource0 = ByteSource.array(byteArray0, "_5fbswmq2|mivcaa+");
      try { 
        rgbeImageParser0.getImageInfo(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      MockFile mockFile0 = new MockFile("This image format (");
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        xpmImageParser0.getImageInfo(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        wbmpImageParser0.getImageInfo(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        webPImageParser0.getImageInfo((File) null, webPImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[1];
      WebPImagingParameters webPImagingParameters0 = new WebPImagingParameters();
      try { 
        webPImageParser0.getIccProfileBytes(byteArray0, webPImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PsdImageParser psdImageParser0 = new PsdImageParser();
      byte[] byteArray0 = new byte[3];
      PsdImagingParameters psdImagingParameters0 = new PsdImagingParameters();
      try { 
        psdImageParser0.getIccProfileBytes(byteArray0, psdImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PSD File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[2];
      try { 
        webPImageParser0.getIccProfileBytes(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getIccProfileBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TiffImageParser tiffImageParser0 = new TiffImageParser();
      byte[] byteArray0 = new byte[1];
      try { 
        tiffImageParser0.getIccProfileBytes(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      MockFile mockFile0 = new MockFile("+l;:p<pod%qd", "+l;:p<pod%qd");
      PngImageParser pngImageParser0 = new PngImageParser();
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      PngImagingParameters pngImagingParameters0 = pngImageParser0.getDefaultParameters();
      try { 
        pngImageParser0.getIccProfileBytes(byteSource0, pngImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      PngImageParser pngImageParser0 = new PngImageParser();
      PngImagingParameters pngImagingParameters0 = new PngImagingParameters();
      // Undeclared exception!
      try { 
        pngImageParser0.getIccProfileBytes((ByteSource) null, pngImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.png.PngImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RgbeImageParser rgbeImageParser0 = new RgbeImageParser();
      RgbeImagingParameters rgbeImagingParameters0 = new RgbeImagingParameters();
      // Undeclared exception!
      try { 
        rgbeImageParser0.getIccProfileBytes((File) null, rgbeImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getIccProfileBytes((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      TiffImageParser tiffImageParser0 = new TiffImageParser();
      byte[] byteArray0 = new byte[8];
      try { 
        tiffImageParser0.getFormatCompliance(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getFormatCompliance((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[1];
      try { 
        gifImageParser0.getFormatCompliance(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getFormatCompliance((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[0];
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      try { 
        xbmImageParser0.getBufferedImage(byteArray0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      try { 
        wbmpImageParser0.getBufferedImage(byteArray0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      try { 
        xbmImageParser0.getBufferedImage(byteSource0, xbmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      IcoImageParser icoImageParser0 = new IcoImageParser();
      MockFile mockFile0 = new MockFile((File) null, "||y3SNIicnb M");
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      IcoImagingParameters icoImagingParameters0 = new IcoImagingParameters();
      try { 
        icoImageParser0.getBufferedImage(byteSource0, icoImagingParameters0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      PsdImageParser psdImageParser0 = new PsdImageParser();
      PsdImagingParameters psdImagingParameters0 = psdImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        psdImageParser0.getBufferedImage((ByteSource) null, psdImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.psd.PsdImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "icnsimageparser");
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      try { 
        pcxImageParser0.getBufferedImage(byteSource0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File, name: PcxHeader, length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getBufferedImage((File) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)10;
      try { 
        wbmpImageParser0.getAllBufferedImages(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid/unsupported WBMP FixHeaderField 0xa
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getAllBufferedImages((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[11];
      // Undeclared exception!
      try { 
        wbmpImageParser0.getAllBufferedImages(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-38);
      ByteSource byteSource0 = ByteSource.array(byteArray0, "Invalid/unsupported BMP file");
      try { 
        wbmpImageParser0.getAllBufferedImages(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid/unsupported WBMP type 11520
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      MockFile mockFile0 = new MockFile("pic", "pic");
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        wbmpImageParser0.getAllBufferedImages(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1258), 513);
      ByteSource byteSource0 = ByteSource.inputStream(byteArrayInputStream0, "xbm");
      // Undeclared exception!
      try { 
        wbmpImageParser0.getAllBufferedImages(byteSource0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BmpImageParser bmpImageParser0 = new BmpImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1992);
      ByteSource byteSource0 = ByteSource.inputStream(pipedInputStream0, "i,%fe+la");
      try { 
        bmpImageParser0.getAllBufferedImages(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PnmImageParser pnmImageParser0 = new PnmImageParser();
      // Undeclared exception!
      try { 
        pnmImageParser0.getAllBufferedImages((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[1];
      try { 
        jpegImageParser0.dumpImageFile(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PnmImageParser pnmImageParser0 = new PnmImageParser();
      // Undeclared exception!
      try { 
        pnmImageParser0.dumpImageFile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      try { 
        wbmpImageParser0.dumpImageFile(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      WebPImageParser webPImageParser0 = new WebPImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        webPImageParser0.dumpImageFile(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a valid WebP file
         //
         verifyException("org.apache.commons.imaging.formats.webp.WebPImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MockFile mockFile0 = new MockFile("pic", "pic");
      PnmImageParser pnmImageParser0 = new PnmImageParser();
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      try { 
        pnmImageParser0.dumpImageFile(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      TiffImageParser tiffImageParser0 = new TiffImageParser();
      // Undeclared exception!
      try { 
        tiffImageParser0.dumpImageFile((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      try { 
        pcxImageParser0.dumpImageFile(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File, name: PcxHeader, length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      byte[] byteArray0 = new byte[7];
      ByteSource byteSource0 = ByteSource.array(byteArray0, ": ");
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile("psd", "psd");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("pic");
      // Undeclared exception!
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      MockFile mockFile0 = new MockFile("PNG: no cuns");
      TiffImageParser tiffImageParser0 = new TiffImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteSource byteSource0 = ByteSource.inputStream(sequenceInputStream0, (String) null);
      try { 
        tiffImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PnmImageParser pnmImageParser0 = new PnmImageParser();
      // Undeclared exception!
      try { 
        pnmImageParser0.dumpImageFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile(") cannot be written.", "$miCyr:y,mFD;r*(");
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      ImageMetadata imageMetadata0 = wbmpImageParser0.getMetadata((File) mockFile0, wbmpImagingParameters0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getMetadata((File) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      MockFile mockFile0 = new MockFile("Ou'b>pb");
      Dimension dimension0 = wbmpImageParser0.getImageSize((File) mockFile0, wbmpImagingParameters0);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      MockFile mockFile0 = new MockFile("&7;EU0b!@cQtTJ2Lm", "WxHtTpJ");
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      XbmImagingParameters xbmImagingParameters0 = new XbmImagingParameters();
      byte[] byteArray0 = xbmImageParser0.getIccProfileBytes((File) mockFile0, xbmImagingParameters0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      IcoImageParser icoImageParser0 = new IcoImageParser();
      boolean boolean0 = icoImageParser0.canAcceptExtension("Unexpected separate value item.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      boolean boolean0 = jpegImageParser0.canAcceptExtension("Channels: ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.canAcceptExtension((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.canAcceptExtension((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((byte[]) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      byte[] byteArray0 = new byte[9];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      FormatCompliance formatCompliance0 = xpmImageParser0.getFormatCompliance(byteSource0);
      assertNull(formatCompliance0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getIccProfileBytes((byte[]) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getAllBufferedImages((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      // Undeclared exception!
      try { 
        pcxImageParser0.dumpImageFile((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BmpImageParser bmpImageParser0 = new BmpImageParser();
      byte[] byteArray0 = new byte[0];
      BmpImagingParameters bmpImagingParameters0 = bmpImageParser0.getDefaultParameters();
      ImageMetadata imageMetadata0 = bmpImageParser0.getMetadata(byteArray0, bmpImagingParameters0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile("pic", "pic");
      Dimension dimension0 = wbmpImageParser0.getImageSize((File) mockFile0);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      MockFile mockFile0 = new MockFile("`)%+.+l;:P<pOD%Qd", "`)%+.+l;:P<pOD%Qd");
      WebPImageParser webPImageParser0 = new WebPImageParser();
      WebPImagingParameters webPImagingParameters0 = webPImageParser0.getDefaultParameters();
      ImageInfo imageInfo0 = webPImageParser0.getImageInfo((File) mockFile0, webPImagingParameters0);
      assertNull(imageInfo0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MockFile mockFile0 = new MockFile("dumpimagefile");
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      FormatCompliance formatCompliance0 = wbmpImageParser0.getFormatCompliance((File) mockFile0);
      assertNull(formatCompliance0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MockFile mockFile0 = new MockFile("+l;:p<pod%qd", "+l;:p<pod%qd");
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      BufferedImage bufferedImage0 = jpegImageParser0.getBufferedImage((File) mockFile0, jpegImagingParameters0);
      assertNull(bufferedImage0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MockFile mockFile0 = new MockFile("+l;:p<pod%qd", "+l;:p<pod%qd");
      PnmImageParser pnmImageParser0 = new PnmImageParser();
      List<BufferedImage> list0 = pnmImageParser0.getAllBufferedImages((File) mockFile0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      boolean boolean0 = wbmpImageParser0.canAcceptType(imageFormats0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ImageFormats imageFormats0 = ImageFormats.ICO;
      boolean boolean0 = wbmpImageParser0.canAcceptType(imageFormats0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      MockFile mockFile0 = new MockFile("`)%+.+l;:P<pOD%Qd");
      PnmImageParser pnmImageParser0 = new PnmImageParser();
      String string0 = pnmImageParser0.dumpImageFile((File) mockFile0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      IcoImageParser icoImageParser0 = new IcoImageParser();
      // Undeclared exception!
      try { 
        icoImageParser0.getImageInfo((byte[]) null, (IcoImagingParameters) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      try { 
        wbmpImageParser0.getAllBufferedImages(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile("x", "?9");
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      ImageMetadata imageMetadata0 = wbmpImageParser0.getMetadata(byteSource0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      try { 
        wbmpImageParser0.getImageSize(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      MockFile mockFile0 = new MockFile("PNG: no cuns");
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = wbmpImageParser0.getIccProfileBytes((File) mockFile0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      MockFile mockFile0 = new MockFile("f_X};I^~0xre^o(");
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ImageMetadata imageMetadata0 = wbmpImageParser0.getMetadata((File) mockFile0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      List<AbstractImageParser<?>> list0 = AbstractImageParser.getAllImageParsers();
      assertEquals(16, list0.size());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      FormatCompliance formatCompliance0 = wbmpImageParser0.getFormatCompliance(byteArray0);
      assertNull(formatCompliance0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.getMetadata((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RgbeImageParser rgbeImageParser0 = new RgbeImageParser();
      byte[] byteArray0 = new byte[3];
      String string0 = rgbeImageParser0.dumpImageFile(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RgbeImageParser rgbeImageParser0 = new RgbeImageParser();
      // Undeclared exception!
      try { 
        rgbeImageParser0.getImageInfo((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.rgbe.RgbeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getBufferedImage((byte[]) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = wbmpImageParser0.getIccProfileBytes(byteArray0);
      assertNull(byteArray1);
  }
}
