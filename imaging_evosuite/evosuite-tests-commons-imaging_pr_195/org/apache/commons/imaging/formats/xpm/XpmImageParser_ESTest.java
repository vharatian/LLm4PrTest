/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:05:05 GMT 2025
 */

package org.apache.commons.imaging.formats.xpm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import javax.swing.DebugGraphics;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.RgbBufferedImageFactory;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.xpm.XpmImageParser;
import org.apache.commons.imaging.formats.xpm.XpmImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class XpmImageParser_ESTest extends XpmImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      ImageMetadata imageMetadata0 = xpmImageParser0.getMetadata((ByteSource) null, xpmImagingParameters0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      byte[] byteArray0 = xpmImageParser0.getICCProfileBytes((ByteSource) null, xpmImagingParameters0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      String[] stringArray0 = xpmImageParser0.getAcceptedExtensions();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(2659, 2659, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      // Undeclared exception!
      xpmImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, xpmImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      // Undeclared exception!
      try { 
        xpmImageParser0.writeImage((BufferedImage) null, (OutputStream) null, xpmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.PaletteFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(89, 1, false);
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      try { 
        xpmImageParser0.writeImage(bufferedImage0, (OutputStream) pipedOutputStream0, xpmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      // Undeclared exception!
      try { 
        xpmImageParser0.getImageSize((ByteSource) null, xpmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-43), (byte)2);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "org.apache.commons.imaging.formats.xpm.XpmImageParser");
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      // Undeclared exception!
      try { 
        xpmImageParser0.getImageSize((ByteSource) byteSourceInputStream0, xpmImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "J`[N%Q");
      try { 
        xpmImageParser0.getImageSize((ByteSource) byteSourceInputStream0, xpmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      MockFile mockFile0 = new MockFile("XPM");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        xpmImageParser0.getImageSize((ByteSource) byteSourceFile0, xpmImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      byte[] byteArray0 = new byte[9];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      try { 
        xpmImageParser0.getImageInfo((ByteSource) byteSourceArray0, xpmImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing XPM file failed, signature isn't '/* XPM *_/'
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        xpmImageParser0.getImageInfo((ByteSource) null, xpmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "<,YRn@aUYw@27aU}+F");
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      try { 
        xpmImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, xpmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      MockFile mockFile0 = new MockFile("#", "#");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        xpmImageParser0.getImageInfo((ByteSource) byteSourceFile0, xpmImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        xpmImageParser0.getBufferedImage((ByteSource) null, xpmImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      MockFile mockFile0 = new MockFile("BMP", "BMP");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        xpmImageParser0.getBufferedImage((ByteSource) byteSourceFile0, xpmImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      try { 
        xpmImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing XPM file failed, signature isn't '/* XPM *_/'
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      // Undeclared exception!
      try { 
        xpmImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "q:MD&ly");
      PrintStream printStream0 = DebugGraphics.logStream();
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(printStream0, charset0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0, false);
      try { 
        xpmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      MockFile mockFile0 = new MockFile("K| _E~y3-Y");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        xpmImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(24, 24, true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      xpmImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, xpmImagingParameters0);
      assertEquals("/* XPM */\nstatic char *a000010400820003000[] = {\n\"24 24 2 1\",\n\"  c #000000\",\n\". c None\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\",\n\"........................\"\n};\n", byteArrayOutputStream0.toString());
      assertEquals(763, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(12, 12, 12);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      xpmImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, xpmImagingParameters0);
      assertEquals(271, byteArrayOutputStream0.size());
      assertEquals("/* XPM */\nstatic char *a000010400820003000[] = {\n\"12 12 1 1\",\n\"  c #000000\",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \",\n\"            \"\n};\n", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      String string0 = xpmImageParser0.getDefaultExtension();
      assertEquals("xpm", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      XpmImagingParameters xpmImagingParameters0 = xpmImageParser0.getDefaultParameters();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      try { 
        xpmImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, xpmImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      String string0 = xpmImageParser0.getName();
      assertEquals("X PixMap", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      byte[] byteArray0 = new byte[6];
      XpmImagingParameters xpmImagingParameters0 = new XpmImagingParameters();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        xpmImageParser0.getBufferedImage((ByteSource) byteSourceArray0, xpmImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing XPM file failed, signature isn't '/* XPM *_/'
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      byte[] byteArray0 = new byte[6];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        xpmImageParser0.getImageSize((ByteSource) byteSourceArray0, (XpmImagingParameters) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing XPM file failed, signature isn't '/* XPM *_/'
         //
         verifyException("org.apache.commons.imaging.formats.xpm.XpmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XpmImageParser xpmImageParser0 = new XpmImageParser();
      ImageFormat[] imageFormatArray0 = xpmImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }
}
