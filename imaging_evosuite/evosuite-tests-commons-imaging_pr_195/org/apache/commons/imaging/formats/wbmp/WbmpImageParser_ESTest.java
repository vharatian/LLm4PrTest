/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:59:05 GMT 2025
 */

package org.apache.commons.imaging.formats.wbmp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.RescaleOp;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import javax.swing.DebugGraphics;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.RgbBufferedImageFactory;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.wbmp.WbmpImageParser;
import org.apache.commons.imaging.formats.wbmp.WbmpImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WbmpImageParser_ESTest extends WbmpImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(32, 32, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, wbmpImageParser0);
      RescaleOp rescaleOp0 = new RescaleOp(0.0F, 71, renderingHints0);
      rescaleOp0.filter(bufferedImage0, bufferedImage0);
      wbmpImageParser0.writeImage(bufferedImage0, (OutputStream) printStream0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(32, 32, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      float[] floatArray0 = new float[4];
      floatArray0[2] = (float) 71;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      rescaleOp0.filter(bufferedImage0, bufferedImage0);
      wbmpImageParser0.writeImage(bufferedImage0, (OutputStream) printStream0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(32, 32, true);
      PrintStream printStream0 = DebugGraphics.logStream();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 32;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      rescaleOp0.filter(bufferedImage0, bufferedImage0);
      wbmpImageParser0.writeImage(bufferedImage0, (OutputStream) printStream0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WbmpImageParser.WbmpHeader wbmpImageParser_WbmpHeader0 = new WbmpImageParser.WbmpHeader((byte) (-128), (byte) (-128), (-1701), 144);
      PrintStream printStream0 = DebugGraphics.logStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(printStream0, true);
      wbmpImageParser_WbmpHeader0.dump(mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      wbmpImageParser0.getImageSize((ByteSource) byteSourceArray0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-89);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("qmQ;&=XrR9/Vn%lz%/W", byteArray0);
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-68);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("qmQ;&=XrR9/Vn%lz%/W", byteArray0);
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      wbmpImageParser0.getAcceptedExtensions();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      File file0 = MockFile.createTempFile(":1i&C*", ".6IheGRaTLDt U[6");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      wbmpImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("y<~|{x|K");
      // Undeclared exception!
      try { 
        wbmpImageParser0.writeImage((BufferedImage) null, (OutputStream) mockFileOutputStream0, (WbmpImagingParameters) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      BufferedImage bufferedImage0 = new BufferedImage(8, 8, 8);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        wbmpImageParser0.writeImage(bufferedImage0, (OutputStream) pipedOutputStream0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)99;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceArray0, wbmpImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported WBMP type 99
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-84), 31);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "#jkQQPTYJHipY");
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceInputStream0, wbmpImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "");
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceInputStream0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile("qmQ;&=XrR9/Vn%lz%/W", "qmQ;&=XrR9/Vn%lz%/W");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceFile0, wbmpImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)88;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((String) null, byteArray0);
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, wbmpImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported WBMP type 88
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      MockFile mockFile0 = new MockFile("org.apache.commons.io.file.CountingPathVisitor");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) byteSourceFile0, wbmpImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "");
      // Undeclared exception!
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, wbmpImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid WBMP File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      MockFile mockFile0 = new MockFile("7|y)8@\"?&+-il%U%");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceFile0, wbmpImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-110);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((String) null, byteArray0);
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported WBMP FixHeaderField 0x92
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qm;&=XrR9/Vn%lz%/W");
      MockFile mockFile0 = new MockFile("qm;&=XrR9/Vn%lz%/W");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qmQ;&=XrR9/Vn%lz%/W");
      MockFile mockFile0 = new MockFile("qmQ;&=XrR9/Vn%lz%/W", "qmQ;&=XrR9/Vn%lz%/W");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(79, 1299, false);
      PrintStream printStream0 = DebugGraphics.logStream();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, bufferedImage0);
      RescaleOp rescaleOp0 = new RescaleOp(79, 1299, renderingHints0);
      BufferedImage bufferedImage1 = rescaleOp0.filter(bufferedImage0, bufferedImage0);
      // Undeclared exception!
      wbmpImageParser0.writeImage(bufferedImage1, (OutputStream) printStream0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)7;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, wbmpImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported WBMP FixHeaderField 0x7
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      PrintStream printStream0 = DebugGraphics.logStream();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(8, 32844, false);
      // Undeclared exception!
      wbmpImageParser0.writeImage(bufferedImage0, (OutputStream) printStream0, wbmpImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte) (-128);
      try { 
        wbmpImageParser0.getImageInfo(byteArray0, wbmpImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Overflow reading WBMP multi-byte field
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[17];
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      // Undeclared exception!
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, wbmpImagingParameters0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ImageFormat[] imageFormatArray0 = wbmpImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      ImageMetadata imageMetadata0 = wbmpImageParser0.getMetadata((ByteSource) byteSourceArray0, wbmpImagingParameters0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      String string0 = wbmpImageParser0.getDefaultExtension();
      assertEquals("wbmp", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[11];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      // Undeclared exception!
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[18];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      WbmpImagingParameters wbmpImagingParameters0 = wbmpImageParser0.getDefaultParameters();
      byte[] byteArray1 = wbmpImageParser0.getICCProfileBytes((ByteSource) byteSourceArray0, wbmpImagingParameters0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      WbmpImagingParameters wbmpImagingParameters0 = new WbmpImagingParameters();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((ByteSource) null, wbmpImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      String string0 = wbmpImageParser0.getName();
      assertEquals("Wireless Application Protocol Bitmap Format", string0);
  }
}
