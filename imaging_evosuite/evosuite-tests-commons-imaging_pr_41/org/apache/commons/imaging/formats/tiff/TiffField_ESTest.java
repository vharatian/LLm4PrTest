/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 05:04:13 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)95;
      byteArray0[4] = (byte)21;
      TiffField tiffField0 = new TiffField((-3652), 1620, fieldTypeRational0, 204L, 1236L, byteArray0, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte)33;
      TiffField tiffField0 = new TiffField(50, (byte)1, fieldTypeLong0.SRATIONAL, 50, (-79L), byteArray0, (ByteOrder) null, 45);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals((-79), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2209, 2209, fieldTypeAscii0, 4L, (-2147483648L), byteArray0, byteOrder0, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(2209, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(2209, tiffField0.getTag());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3194, "org.apache.commons.io.filefilter.PrefixFileFilter");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(3194, 3194, fieldTypeByte0, 3194, 0L, byteArray0, (ByteOrder) null, 137);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.io.filefilter.PrefixFileFilter");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(137, tiffField0.getSortHint());
      assertEquals(3194, tiffField0.getBytesLength());
      assertEquals(3194, tiffField0.getDirectoryType());
      assertEquals(3194, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-821), fieldTypeByte0.RATIONAL, (-2147387386), 3060L, byteArray0, byteOrder0, 286);
      tiffField0.dump();
      assertEquals(286, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(3060, tiffField0.getOffset());
      assertEquals((-821), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2922, 2922, fieldTypeAscii0, 2922, 3555L, byteArray0, byteOrder0, (-1620));
      tiffField0.toString();
      assertEquals(3555, tiffField0.getOffset());
      assertEquals(2922, tiffField0.getTag());
      assertEquals(2922, tiffField0.getBytesLength());
      assertEquals((-1620), tiffField0.getSortHint());
      assertEquals(2922, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, 2397, fieldTypeLong0, 2397, 2397, byteArray0, (ByteOrder) null, (-2146642486));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2146642486), tiffField0.getSortHint());
      assertEquals(2397, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(2397, tiffField0.getDirectoryType());
      assertEquals(9588, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 700L, 0L, byteArray0, byteOrder0, (-1431655764));
      tiffField0.getValue();
      assertEquals((-1431655764), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(700, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "4a");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2450), (-2450), fieldTypeLong0, (-2450), (-2044L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2044), tiffField0.getOffset());
      assertEquals((-2450), tiffField0.getTag());
      assertEquals((-2450), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 8, fieldTypeByte0, (-6680L), (byte) (-33), byteArray0, byteOrder0, (byte)56);
      int int0 = tiffField0.getTag();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-33), tiffField0.getOffset());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2684), (-2684), fieldTypeByte0, 1690L, (-2684), byteArray0, byteOrder0, (byte)115);
      int int0 = tiffField0.getTag();
      assertEquals((-2684), int0);
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-2684), tiffField0.getOffset());
      assertEquals((-2684), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-54);
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)12;
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147450877, 2393, fieldTypeAscii0, 2393, 625L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2393, tiffField0.getDirectoryType());
      assertEquals(2393, tiffField0.getBytesLength());
      assertEquals(2147450877, tiffField0.getTag());
      assertEquals(625, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146210687, (byte) (-127), fieldTypeShort0.DOUBLE, 7216L, (byte) (-127), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-127), tiffField0.getDirectoryType());
      assertEquals((-127), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2146210687, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-567), (-1544), fieldTypeAscii0, (-1544), (-567), byteArray0, byteOrder0, (-755));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1544), tiffField0.getDirectoryType());
      assertEquals((-755), int0);
      assertEquals((-567), tiffField0.getOffset());
      assertEquals((-567), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2374), "vnnfgVC^ixY*cP");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)86, 43, fieldTypeRational0, 1300L, (byte)86, byteArray0, byteOrder0, (-3652));
      int int0 = tiffField0.getOffset();
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, int0);
      assertEquals((-3652), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(2608);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1431655764), (-1926), fieldTypeAscii0, 34020, (-1357L), byteArray0, byteOrder0, (byte)21);
      int int0 = tiffField0.getOffset();
      assertEquals((-1357), int0);
      assertEquals((-1926), tiffField0.getDirectoryType());
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(4, (byte)33, fieldTypeLong0, 1356L, (byte)33, byteArray0, (ByteOrder) null, (-2146642486));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2146642486), tiffField0.getSortHint());
      assertEquals(33, tiffField0.getOffset());
      assertEquals(5424, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-75);
      TiffField tiffField0 = new TiffField(158, 902, fieldTypeShort0, (byte)4, 1668, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-19200), int0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1668, tiffField0.getOffset());
      assertEquals(158, tiffField0.getTag());
      assertEquals(902, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3314), (-1717986917), fieldTypeByte0, 1L, 82, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-3314), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((byte)33, (-1929), fieldTypeLong0, 1L, 50, byteArray0, (ByteOrder) null, (-2146642486));
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(33, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2146642486), tiffField0.getSortHint());
      assertEquals((-1929), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "Unknown value: ");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-7);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 34735, fieldTypeShort0, 1, 4L, byteArray0, byteOrder0, 34735);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(34735, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(34735, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(966, (String) null);
      TiffField tiffField0 = new TiffField(966, 966, fieldTypeAscii0, 3875L, 3875L, byteArray0, byteOrder0, (-849));
      tiffField0.getFieldTypeName();
      assertEquals(966, tiffField0.getTag());
      assertEquals(966, tiffField0.getDirectoryType());
      assertEquals((-849), tiffField0.getSortHint());
      assertEquals(3875, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(958, 958, fieldTypeRational0, 958, 958, byteArray0, byteOrder0, 958);
      tiffField0.getFieldTypeName();
      assertEquals(958, tiffField0.getDirectoryType());
      assertEquals(958, tiffField0.getOffset());
      assertEquals(958, tiffField0.getSortHint());
      assertEquals(958, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3074, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(9, (byte)60, fieldTypeFloat0, (byte)69, (-719L), byteArray0, byteOrder0, 12);
      tiffField0.getFieldTypeName();
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals((-719), tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)33, 50, (FieldType) null, 3858L, 747L, byteArray0, (ByteOrder) null, (byte)33);
      tiffField0.getFieldType();
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(747, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "ga0D|i#o1rBb?Nof/");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "ga0D|i#o1rBb?Nof/");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(130, 279, fieldTypeDouble0, 130, 76L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(279, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getOffset());
      assertEquals(130, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2374), "vnnfgVC^ixY*cP");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)86, 43, fieldTypeRational0, 33450, 1300L, byteArray0, byteOrder0, (byte)86);
      tiffField0.getFieldType();
      assertEquals(1300, tiffField0.getOffset());
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2146642486), (byte)1, fieldTypeByte0, (byte)1, 1690L, byteArray0, (ByteOrder) null, 34736);
      tiffField0.getDoubleValue();
      assertEquals(34736, tiffField0.getSortHint());
      assertEquals(1690, tiffField0.getOffset());
      assertEquals((-2146642486), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)33;
      TiffField tiffField0 = new TiffField((byte)33, 65535, fieldTypeLong0, (byte)1, 65535, byteArray0, (ByteOrder) null, (-1));
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-127);
      TiffField tiffField0 = new TiffField(1, 792, fieldTypeShort0, 1, 1668, byteArray0, byteOrder0, (byte) (-127));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(792, tiffField0.getDirectoryType());
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1668, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 303L, (-352L), byteArray0, byteOrder0, (byte)122);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-352), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(122, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3194, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2354), 3194, fieldTypeRational0, 4L, 0, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2354), tiffField0.getTag());
      assertEquals(3194, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-625), 31, fieldTypeByte0, 0L, 31, byteArray0, (ByteOrder) null, (byte) (-11));
      tiffField0.getCount();
      assertEquals((-625), tiffField0.getTag());
      assertEquals(31, tiffField0.getOffset());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(31, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3874, 3874, fieldTypeDouble0, 3874, 3874, byteArray0, byteOrder0, (byte)95);
      long long0 = tiffField0.getCount();
      assertEquals(3874, tiffField0.getTag());
      assertEquals(3874, tiffField0.getDirectoryType());
      assertEquals(3874, tiffField0.getOffset());
      assertEquals(3874L, long0);
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (-1847L), 3L, byteArray0, (ByteOrder) null, (-1187));
      long long0 = tiffField0.getCount();
      assertEquals((-1187), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1847L), long0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)85, (-1431655764), fieldTypeByte0, (byte)0, (-1L), byteArray0, (ByteOrder) null, (byte)105);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(85, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(105, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2580, "Expected String value(");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2580, 482, fieldTypeByte0, (-1674L), (byte)85, byteArray0, (ByteOrder) null, (byte)85);
      int int0 = tiffField0.getBytesLength();
      assertEquals(85, tiffField0.getOffset());
      assertEquals(482, tiffField0.getDirectoryType());
      assertEquals((-1674), int0);
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(2580, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2146642486), (-2146642486), fieldTypeFloat0, (-539L), (-458L), byteArray0, (ByteOrder) null, (byte)15);
      tiffField0.getByteOrder();
      assertEquals(15, tiffField0.getSortHint());
      assertEquals((-2146642486), tiffField0.getTag());
      assertEquals((-2146642486), tiffField0.getDirectoryType());
      assertEquals((-458), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2374), "vnnfgVC^ixY*cP");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)86, 43, fieldTypeRational0, 1300L, (byte)86, byteArray0, byteOrder0, (-3652));
      tiffField0.getByteOrder();
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, tiffField0.getOffset());
      assertEquals((-3652), tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 17, fieldTypeByte0, 4L, 14, byteArray0, byteOrder0, 113);
      tiffField0.getByteArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1312, (byte) (-75), fieldTypeShort0, 0L, 2244L, byteArray0, byteOrder0, 1312);
      tiffField0.getByteArrayValue();
      assertEquals((-75), tiffField0.getDirectoryType());
      assertEquals(1312, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1312, tiffField0.getSortHint());
      assertEquals(2244, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3401), (-3401), fieldTypeRational0, (-3401), (-3401), byteArray0, byteOrder0, (-3401));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(2608);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34020, 65535, (FieldType) null, 65535, 34020, byteArray0, byteOrder0, (byte)21);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(919, 919, fieldTypeRational0, 919, 919, (byte[]) null, byteOrder0, 919);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-137), (FieldType) null, 28, (-137), byteArray0, byteOrder0, (byte)87);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((-1055), (-1055), fieldTypeRational0, (-1055), (-1055), byteArray0, byteOrder0, (-1055));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, (-1520), fieldTypeRational0, 1, 2919L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(954, 954, fieldTypeRational0, 954, 954, (byte[]) null, byteOrder0, 954);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3401), (-3401), fieldTypeRational0, (-3401), (-3401), byteArray0, byteOrder0, (-3401));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(998, 998, fieldTypeRational0, 998, 998, (byte[]) null, byteOrder0, 998);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(954, 954, fieldTypeRational0, 954, 954, (byte[]) null, byteOrder0, 954);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2045222511, 2045222511, fieldTypeDouble0, 2045222511, 2045222511, byteArray0, byteOrder0, 2045222511);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2788), (-2788), fieldTypeShort0, (-2788), (-2788), (byte[]) null, byteOrder0, (-2788));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-459), (-459), fieldTypeLong0, (-459), (-459), byteArray0, byteOrder0, (-459));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(954, 954, fieldTypeRational0, 1L, 954, byteArray0, byteOrder0, 954);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[158];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37392, 37392, fieldTypeRational0, 1L, 1024L, byteArray0, byteOrder0, 37392);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeShort0, (byte)28, (byte)28, (byte[]) null, byteOrder0, (byte)28);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-459), (-459), fieldTypeLong0, (-459), (-459), byteArray0, byteOrder0, (-459));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(28, (-4060), fieldTypeRational0, (-4060), 28, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(995, 995, fieldTypeRational0, 995, 995, (byte[]) null, byteOrder0, 995);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(995, 995, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 995);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-651), (-651), fieldTypeShort0, (-651), (-651), byteArray0, byteOrder0, (-651));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)21, (-2838), (FieldType) null, (byte)21, (-2838), byteArray0, byteOrder0, (-2838));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((-1187), (-1187), fieldTypeShort0, (-1187), 287L, byteArray0, byteOrder0, (-1187));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[193];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(54, 54, fieldTypeLong0.SHORT, (-1804L), 2147483688L, byteArray0, byteOrder0, 54);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("InteroperabilityVersion");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "InteroperabilityVersion");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-11), (byte) (-11), fieldTypeRational0, 1L, (byte) (-11), byteArray0, byteOrder0, (byte) (-11));
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[178];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(16, (-1703), fieldTypeLong0, (-1703), (-1L), byteArray0, byteOrder0, (-1703));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2933, 2933, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 1599);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(50708);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-692), (-692), fieldTypeShort0, (-692), (-692), byteArray0, byteOrder0, (-692));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, 15, fieldTypeLong0, 50, 4L, byteArray0, (ByteOrder) null, (-3483));
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals("50 (0x32: Unknown Tag): 0, 0 (50 Long)\n", stringWriter0.toString());
      assertEquals((-3483), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(4215);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1901, 1, fieldTypeAscii0, 1, (-3638), byteArray0, byteOrder0, 65535);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1901, tiffField0.getTag());
      assertEquals((-3638), tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 65535, (-3027L), byteArray0, byteOrder0, (-892));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-892), tiffField0.getSortHint());
      assertEquals((-3027), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(925, 925, fieldTypeRational0, 925, 925, (byte[]) null, byteOrder0, 925);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2146642486), (byte)1, fieldTypeByte0, (byte)1, 1690L, byteArray0, (ByteOrder) null, 34736);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1690, tiffField0.getOffset());
      assertEquals((-2146642486), tiffField0.getTag());
      assertEquals(34736, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1114), (-1114), fieldTypeRational0, (-1L), (-1L), byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1114), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1114), int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(780, 780, (FieldType) null, 780, 780, byteArray0, byteOrder0, 780);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeRational0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4215);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4215, 0, fieldTypeAscii0, (-1L), 0L, byteArray0, byteOrder0, 4215);
      int int0 = tiffField0.getOffset();
      assertEquals(4215, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4215, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeByte0, 513, 1934L, (byte[]) null, byteOrder0, 13);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1934, tiffField0.getOffset());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getDirectoryType());
      assertTrue(tagInfo0.isOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4215);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)4, 65109, fieldTypeAscii0, 0, (byte)4, byteArray0, byteOrder0, 33450);
      int int0 = tiffField0.getTag();
      assertEquals(4, int0);
      assertEquals(33450, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(65109, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)85, 1, fieldTypeByte0, 4L, (byte)105, byteArray0, (ByteOrder) null, (byte)105);
      int int0 = tiffField0.getBytesLength();
      assertEquals(85, tiffField0.getTag());
      assertEquals(4, int0);
      assertEquals(105, tiffField0.getSortHint());
      assertEquals(105, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeRational0, 991, 991, byteArray0, byteOrder0, 991);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(991, tiffField0.getSortHint());
      assertEquals(991, tiffField0.getDirectoryType());
      assertEquals("991 (0x3df: Unknown Tag): ", string0);
      assertEquals(991, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(995, 995, fieldTypeRational0, 995, 995, byteArray0, byteOrder0, 995);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2919, 2919, fieldTypeAscii0, 2919, 2919, byteArray0, byteOrder0, 2919);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeFloat0, 34028, 34028, byteArray0, byteOrder0, 34028);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3f4f3246 for: 34028 (0x84ec: TransparencyIndicator): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[142];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(890, 890, fieldTypeDouble0, 890, 890, byteArray0, byteOrder0, 890);
      tiffField0.getDoubleArrayValue();
      assertEquals(7120, tiffField0.getBytesLength());
      assertEquals(890, tiffField0.getTag());
      assertEquals(890, tiffField0.getOffset());
      assertEquals(890, tiffField0.getSortHint());
      assertEquals(890, tiffField0.getDirectoryType());
      assertEquals(890L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2834, 2834, fieldTypeAscii0, 2834, 2834, byteArray0, byteOrder0, 2834);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@777da47d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[178];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(411, 411, fieldTypeLong0, 411, 411, byteArray0, byteOrder0, 411);
      tiffField0.getDoubleArrayValue();
      assertEquals(411L, tiffField0.getCount());
      assertEquals(411, tiffField0.getOffset());
      assertEquals(411, tiffField0.getSortHint());
      assertEquals(411, tiffField0.getTag());
      assertEquals(411, tiffField0.getDirectoryType());
      assertEquals(1644, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeFloat0, 34028, 34028, byteArray0, byteOrder0, 34028);
      tiffField0.getDoubleArrayValue();
      assertEquals(136112, tiffField0.getBytesLength());
      assertEquals(34028, tiffField0.getSortHint());
      assertEquals(34028, tiffField0.getOffset());
      assertEquals(34028L, tiffField0.getCount());
      assertEquals(34028, tiffField0.getTag());
      assertEquals(34028, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(995, 995, fieldTypeRational0, 995, 995, byteArray0, byteOrder0, 995);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(7960, tiffField0.getBytesLength());
      assertEquals(995L, tiffField0.getCount());
      assertEquals(995, tiffField0.getDirectoryType());
      assertEquals(995, tiffField0.getTag());
      assertEquals(995, tiffField0.getOffset());
      assertEquals(995, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 12, 12, byteArray0, byteOrder0, 12);
      tiffField0.getDoubleArrayValue();
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12L, tiffField0.getCount());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(96, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)29, (byte)29, fieldTypeShort0, (byte)29, (byte)29, byteArray0, byteOrder0, (byte)29);
      tiffField0.getDoubleArrayValue();
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(58, tiffField0.getBytesLength());
      assertEquals(29L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[165];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)51, (byte)51, fieldTypeLong0, (byte)51, (byte)51, byteArray0, byteOrder0, (byte)51);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(51, tiffField0.getTag());
      assertEquals(51, tiffField0.getDirectoryType());
      assertEquals(41, intArray0.length);
      assertEquals(51, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getOffset());
      assertEquals(51L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeFloat0, 34028, 34028, byteArray0, byteOrder0, 34028);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@314fbf19 for: 34028 (0x84ec: TransparencyIndicator): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 12, 12, byteArray0, byteOrder0, 12);
      tiffField0.getIntArrayValue();
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(96, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 12, 12, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)29, (byte)29, fieldTypeShort0, (byte)29, (byte)29, byteArray0, byteOrder0, (byte)29);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getBytesLength());
      assertEquals(29L, tiffField0.getCount());
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2922, 2922, fieldTypeAscii0, 2922, 3555L, byteArray0, byteOrder0, (-1620));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1620), tiffField0.getSortHint());
      assertEquals(2922, tiffField0.getDirectoryType());
      assertEquals(3555, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2922, tiffField0.getTag());
      assertEquals(2922, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 12, 12, byteArray0, byteOrder0, 12);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@1b51cda7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2919, 2919, fieldTypeAscii0, 2919, 2919, byteArray0, (ByteOrder) null, 2919);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xb67)", string0);
      assertEquals(2919, tiffField0.getDirectoryType());
      assertEquals(2919, tiffField0.getOffset());
      assertEquals(2919, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeFloat0, 34028, 34028, byteArray0, byteOrder0, 34028);
      String string0 = tiffField0.getTagName();
      assertEquals(34028, tiffField0.getSortHint());
      assertEquals(34028, tiffField0.getDirectoryType());
      assertEquals(34028, tiffField0.getTag());
      assertEquals("TransparencyIndicator", string0);
      assertEquals(34028, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "GPSSatellites");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(411, 411, fieldTypeLong0.FLOAT, 411, 411, byteArray0, byteOrder0, 411);
      tiffField0.dump();
      assertEquals(411, tiffField0.getOffset());
      assertEquals(411, tiffField0.getDirectoryType());
      assertEquals(411, tiffField0.getSortHint());
      assertEquals(1644, tiffField0.getBytesLength());
      assertEquals(411, tiffField0.getTag());
      assertEquals(411L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[115];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(997, 34954, fieldTypeByte0, 34954, 34954, byteArray0, byteOrder0, 997);
      tiffField0.dump();
      assertEquals(34954L, tiffField0.getCount());
      assertEquals(997, tiffField0.getTag());
      assertEquals(997, tiffField0.getSortHint());
      assertEquals(34954, tiffField0.getOffset());
      assertEquals(34954, tiffField0.getDirectoryType());
      assertEquals(34954, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[142];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(890, 890, fieldTypeDouble0, 890, 890, byteArray0, byteOrder0, 890);
      tiffField0.dump();
      assertEquals(890, tiffField0.getTag());
      assertEquals(890L, tiffField0.getCount());
      assertEquals(890, tiffField0.getDirectoryType());
      assertEquals(890, tiffField0.getSortHint());
      assertEquals(890, tiffField0.getOffset());
      assertEquals(7120, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3142), 324, fieldTypeLong0, 324, 287L, byteArray0, byteOrder0, (-4));
      tiffField0.dump();
      assertEquals(1296, tiffField0.getBytesLength());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(324, tiffField0.getDirectoryType());
      assertEquals(287, tiffField0.getOffset());
      assertEquals((-3142), tiffField0.getTag());
      assertEquals(324L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[142];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-630), "Alias Layer Metadata");
      TiffField tiffField0 = new TiffField((-30), (-30), fieldTypeShort0, 148L, (-630), byteArray0, byteOrder0, (-630));
      tiffField0.dump();
      assertEquals(148L, tiffField0.getCount());
      assertEquals((-630), tiffField0.getOffset());
      assertEquals((-30), tiffField0.getTag());
      assertEquals((-30), tiffField0.getDirectoryType());
      assertEquals((-630), tiffField0.getSortHint());
      assertEquals(296, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeFloat0, 34028, 34028, byteArray0, byteOrder0, 34028);
      tiffField0.dump();
      assertEquals(34028L, tiffField0.getCount());
      assertEquals(136112, tiffField0.getBytesLength());
      assertEquals(34028, tiffField0.getDirectoryType());
      assertEquals(34028, tiffField0.getSortHint());
      assertEquals(34028, tiffField0.getTag());
      assertEquals(34028, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[140];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(33, 1434, fieldTypeAscii0, 505, 1434, byteArray0, byteOrder0, 2147106962);
      tiffField0.dump();
      assertEquals(505L, tiffField0.getCount());
      assertEquals(1434, tiffField0.getOffset());
      assertEquals(505, tiffField0.getBytesLength());
      assertEquals(1434, tiffField0.getDirectoryType());
      assertEquals(2147106962, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)21, (byte)21, fieldTypeShort0, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)21);
      tiffField0.dump();
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getBytesLength());
      assertEquals(21L, tiffField0.getCount());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(21, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-393), (-393), fieldTypeLong0, (-1L), (-1L), byteArray0, byteOrder0, (byte)112);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)112, (-2692));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals((-393), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(112, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SLong", string0);
      assertEquals((-393), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1), (-2038), (FieldType) null, (-2038), 7352L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(995, 995, fieldTypeRational0, 995, 995, byteArray0, byteOrder0, 995);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(995, tiffField0.getTag());
      assertEquals(995L, tiffElement0.offset);
      assertEquals(995, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(995, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4215);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4215, 0, fieldTypeAscii0, (-1L), 0L, byteArray0, byteOrder0, 4215);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getBytesLength());
      assertEquals(4215, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4215, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)28, (-25), fieldTypeShort0, (-25), 1024L, byteArray0, byteOrder0, (-9));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(954, 954, fieldTypeRational0, 954, 954, (byte[]) null, byteOrder0, 954);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((byte)45, 1, fieldTypeShort0, 1, (byte)45, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }
}
