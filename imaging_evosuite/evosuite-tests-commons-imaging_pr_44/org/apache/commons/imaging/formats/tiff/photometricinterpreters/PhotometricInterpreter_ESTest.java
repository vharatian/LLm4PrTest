/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 04:15:03 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.photometricinterpreters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.ImageBuilder;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PhotometricInterpreter_ESTest extends PhotometricInterpreter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[7];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(0, intArray0, 1917, 1, (-3246));
      int int0 = photometricInterpreterLogLuv0.getBitsPerSample(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[2] = 2;
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(0, intArray0, 0, 2, 2);
      int int0 = photometricInterpreterLogLuv0.getBitsPerSample(2);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-1615);
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv((-1615), intArray0, (-1615), (-1615), (-1615));
      int int0 = photometricInterpreterLogLuv0.getBitsPerSample(0);
      assertEquals((-1615), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[1];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv((-1621), intArray0, (-1621), (-1621), (-1621));
      try { 
        photometricInterpreterLogLuv0.interpretPixel((ImageBuilder) null, intArray0, (-1621), (-1621));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid length of bits per sample (expected 3).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[0];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(0, intArray0, 0, 0, 0);
      // Undeclared exception!
      try { 
        photometricInterpreterRgb0.interpretPixel((ImageBuilder) null, intArray0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[1];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv((-1621), intArray0, (-1621), (-1621), (-1621));
      // Undeclared exception!
      try { 
        photometricInterpreterLogLuv0.getBitsPerSample((-1621));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1621
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv((-1622), (int[]) null, (-1622), (-1622), (-1622));
      // Undeclared exception!
      try { 
        photometricInterpreterLogLuv0.getBitsPerSample((-1622));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(0, (int[]) null, 0, 0, 0);
      // Undeclared exception!
      try { 
        photometricInterpreterCmyk0.interpretPixel((ImageBuilder) null, (int[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk", e);
      }
  }
}
