/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:01:03 GMT 2025
 */

package org.apache.commons.imaging.formats.jpeg.exif;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.nio.ByteOrder;
import org.apache.commons.imaging.common.BinaryOutputStream;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ExifRewriter_ESTest extends ExifRewriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      byte[] byteArray0 = new byte[0];
      try { 
        exifRewriter0.updateExifMetadataLossy(byteArray0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("org.apache.commons.imaging.formats.tiff.write.TiffOutputItem$Value", byteArray0);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      try { 
        exifRewriter0.updateExifMetadataLossy((ByteSource) byteSourceArray0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("\"Zt", (byte[]) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossy((ByteSource) byteSourceArray0, (OutputStream) byteArrayOutputStream0, tiffOutputSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      MockFile mockFile0 = new MockFile("hrG1VC4M@+");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      try { 
        exifRewriter0.updateExifMetadataLossy((ByteSource) byteSourceFile0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      try { 
        exifRewriter0.updateExifMetadataLossy((InputStream) byteArrayInputStream0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      ExifRewriter exifRewriter0 = new ExifRewriter();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossy((InputStream) dataInputStream0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-121), (byte)3);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)87);
      MockFile mockFile0 = new MockFile("nR:[rq%t'", "[Qj,AS9H`Ixst");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossy((InputStream) pushbackInputStream0, (OutputStream) mockPrintStream0, tiffOutputSet0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossy((File) null, (OutputStream) null, (TiffOutputSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ExifRewriter exifRewriter0 = new ExifRewriter(byteOrder0);
      MockFile mockFile0 = new MockFile("S>)y4kG)\"-*46^", "' -> '");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      try { 
        exifRewriter0.updateExifMetadataLossy((File) mockFile0, (OutputStream) mockPrintStream0, tiffOutputSet0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      MockFile mockFile0 = new MockFile(">5qs2");
      try { 
        exifRewriter0.updateExifMetadataLossy((File) mockFile0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      byte[] byteArray0 = new byte[0];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet(byteOrder0);
      try { 
        exifRewriter0.updateExifMetadataLossless(byteArray0, (OutputStream) pipedOutputStream0, tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      File file0 = MockFile.createTempFile("wFc#", "wFc#");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(file0);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      try { 
        exifRewriter0.updateExifMetadataLossless((ByteSource) byteSourceFile0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossless((ByteSource) null, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      try { 
        exifRewriter0.updateExifMetadataLossless((ByteSource) byteSourceInputStream0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      MockFile mockFile0 = new MockFile("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment", "org.apache.commons.io.filefilter.CanReadFileFilter");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$JFIFPieceSegment");
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(mockPrintStream0, (ByteOrder) null);
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      try { 
        exifRewriter0.updateExifMetadataLossless((ByteSource) byteSourceFile0, (OutputStream) binaryOutputStream0, tiffOutputSet0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        exifRewriter0.updateExifMetadataLossless((InputStream) byteArrayInputStream0, (OutputStream) null, (TiffOutputSet) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      File file0 = MockFile.createTempFile("S;LQR'O37F=>)", "S;LQR'O37F=>)");
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      try { 
        exifRewriter0.updateExifMetadataLossless(file0, (OutputStream) byteArrayOutputStream0, tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossless((File) null, (OutputStream) byteArrayOutputStream0, (TiffOutputSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      byte[] byteArray0 = new byte[0];
      try { 
        exifRewriter0.removeExifMetadata(byteArray0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      try { 
        exifRewriter0.removeExifMetadata((ByteSource) byteSourceArray0, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("=6p");
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "=6p");
      try { 
        exifRewriter0.removeExifMetadata((ByteSource) byteSourceInputStream0, (OutputStream) mockPrintStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      MockFile mockFile0 = new MockFile(",VIS36-)!f", "r}S=;5b\tn%XA*9Fa");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      try { 
        exifRewriter0.removeExifMetadata((ByteSource) byteSourceFile0, (OutputStream) mockPrintStream0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      ExifRewriter exifRewriter0 = new ExifRewriter(tiffOutputSet0.byteOrder);
      File file0 = MockFile.createTempFile("O.\"~;", "O.\"~;");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      try { 
        exifRewriter0.removeExifMetadata((InputStream) mockFileInputStream0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        exifRewriter0.removeExifMetadata((InputStream) dataInputStream0, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        exifRewriter0.removeExifMetadata((File) null, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      MockFile mockFile0 = new MockFile("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter", "org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      try { 
        exifRewriter0.removeExifMetadata((File) mockFile0, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("/c{Ngnxh>y^u0Uk\"F3e");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      // Undeclared exception!
      try { 
        exifRewriter0.removeExifMetadata((ByteSource) null, (OutputStream) objectOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "2");
      try { 
        exifRewriter0.updateExifMetadataLossy((ByteSource) byteSourceInputStream0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ExifRewriter.ExifOverflowException exifRewriter_ExifOverflowException0 = new ExifRewriter.ExifOverflowException("org.apache.commons.imaging.formats.jpeg.exif.ExifRewriter$ExifOverflowException");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      File file0 = MockFile.createTempFile("$\"1IF>v$]dihM'YRM'{", "$\"1IF>v$]dihM'YRM'{");
      try { 
        exifRewriter0.removeExifMetadata(file0, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      File file0 = MockFile.createTempFile("L iLe^E>J@-QgmkKQx", "L iLe^E>J@-QgmkKQx");
      try { 
        exifRewriter0.updateExifMetadataLossy(file0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossy((byte[]) null, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      try { 
        exifRewriter0.updateExifMetadataLossy((InputStream) null, (OutputStream) byteArrayOutputStream0, (TiffOutputSet) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      // Undeclared exception!
      try { 
        exifRewriter0.removeExifMetadata((byte[]) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      ExifRewriter exifRewriter0 = new ExifRewriter();
      try { 
        exifRewriter0.updateExifMetadataLossless((InputStream) null, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      TiffOutputSet tiffOutputSet0 = new TiffOutputSet();
      MockFile mockFile0 = new MockFile("@qo6&^U%P#<d`n|%");
      try { 
        exifRewriter0.updateExifMetadataLossless((File) mockFile0, (OutputStream) null, tiffOutputSet0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      // Undeclared exception!
      try { 
        exifRewriter0.updateExifMetadataLossless((byte[]) null, (OutputStream) null, (TiffOutputSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ExifRewriter exifRewriter0 = new ExifRewriter();
      try { 
        exifRewriter0.removeExifMetadata((InputStream) null, (OutputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }
}
