/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:08:26 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.util.HashMap;
import org.apache.commons.imaging.FormatCompliance;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.tiff.TiffReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffReader_ESTest extends TiffReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-127);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("4", byteArray0);
      FormatCompliance formatCompliance0 = new FormatCompliance("i',B~~fb8q_'");
      try { 
        tiffReader0.readDirectories(byteSourceArray0, true, formatCompliance0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Byte Order bytes don't match (-127, 0).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)84;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      FormatCompliance formatCompliance0 = new FormatCompliance(",m$", false);
      try { 
        tiffReader0.readDirectories(byteSourceArray0, false, formatCompliance0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid TIFF byte order 84
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      // Undeclared exception!
      try { 
        tiffReader0.readFirstDirectory((ByteSource) null, hashMap0, true, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[12];
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1902), (byte)83);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "-5b*$F]y");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>((byte)0);
      // Undeclared exception!
      try { 
        tiffReader0.readFirstDirectory(byteSourceInputStream0, hashMap0, false, formatCompliance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray0 = new byte[0];
      TiffReader tiffReader0 = new TiffReader(false);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        tiffReader0.readFirstDirectory(byteSourceArray0, hashMap0, false, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(true);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.WildcardFileFilter", "org.apache.commons.io.filefilter.WildcardFileFilter");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        tiffReader0.readFirstDirectory(byteSourceFile0, hashMap0, true, formatCompliance0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      // Undeclared exception!
      try { 
        tiffReader0.readDirectories((ByteSource) null, false, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1241), 281);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "BYTE_ORDER_2");
      // Undeclared exception!
      try { 
        tiffReader0.readDirectories(byteSourceInputStream0, true, formatCompliance0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        tiffReader0.readDirectories(byteSourceArray0, false, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      MockFile mockFile0 = new MockFile("$F");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      FormatCompliance formatCompliance0 = new FormatCompliance("$F");
      try { 
        tiffReader0.readDirectories(byteSourceFile0, false, formatCompliance0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      // Undeclared exception!
      try { 
        tiffReader0.readContents((ByteSource) null, hashMap0, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      TiffReader tiffReader0 = new TiffReader(true);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "yCcKp6O7Cq5~v1PSle");
      FormatCompliance formatCompliance0 = new FormatCompliance("yCcKp6O7Cq5~v1PSle");
      // Undeclared exception!
      try { 
        tiffReader0.readContents(byteSourceInputStream0, hashMap0, formatCompliance0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      TiffReader tiffReader0 = new TiffReader(false);
      try { 
        tiffReader0.readContents(byteSourceArray0, hashMap0, formatCompliance0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        tiffReader0.readContents(byteSourceFile0, hashMap0, formatCompliance0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      TiffReader tiffReader0 = new TiffReader(false);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      try { 
        tiffReader0.read(byteSourceArray0, hashMap0, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        tiffReader0.read((ByteSource) null, hashMap0, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("h92/2$68vy", byteArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        tiffReader0.read(byteSourceArray0, hashMap0, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(true);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      MockFile mockFile0 = new MockFile("!ErnT^");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      FormatCompliance formatCompliance0 = new FormatCompliance("!ErnT^");
      try { 
        tiffReader0.read(byteSourceFile0, hashMap0, formatCompliance0, (TiffReader.Listener) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TiffReader tiffReader0 = new TiffReader(false);
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)83;
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        tiffReader0.readDirectories(byteSourceArray0, false, formatCompliance0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Byte Order bytes don't match (83, 0).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      TiffReader tiffReader0 = new TiffReader(false);
      try { 
        tiffReader0.readContents(byteSourceArray0, hashMap0, formatCompliance0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      TiffReader tiffReader0 = new TiffReader(true);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        tiffReader0.readFirstDirectory(byteSourceArray0, hashMap0, true, formatCompliance0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }
}
