/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:20:22 GMT 2025
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorCieLab;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ColorCieLab_ESTest extends ColorCieLab_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(123.5954509574937, 123.5954509574937, 123.5954509574937);
      colorCieLab0.hashCode();
      assertEquals(123.5954509574937, colorCieLab0.a, 0.01);
      assertEquals(123.5954509574937, colorCieLab0.L, 0.01);
      assertEquals(123.5954509574937, colorCieLab0.b, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab((-1.0), (-1.0), (-1.0));
      colorCieLab0.hashCode();
      assertEquals((-1.0), colorCieLab0.L, 0.01);
      assertEquals((-1.0), colorCieLab0.b, 0.01);
      assertEquals((-1.0), colorCieLab0.a, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.GREEN;
      colorCieLab0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 749.8273472267, 749.8273472267);
      colorCieLab0.hashCode();
      assertEquals(0.0, colorCieLab0.L, 0.01);
      assertEquals(749.8273472267, colorCieLab0.b, 0.01);
      assertEquals(749.8273472267, colorCieLab0.a, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.RED;
      ColorCieLab colorCieLab1 = new ColorCieLab(53.0, 53.0, 53.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertFalse(boolean0);
      assertEquals(53.0, colorCieLab1.L, 0.01);
      assertEquals(53.0, colorCieLab1.a, 0.01);
      assertEquals(53.0, colorCieLab1.b, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 0.0, (-108.0));
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      assertFalse(colorCieLab0.equals((Object)colorCieLab1));
      assertFalse(boolean0);
      assertEquals((-108.0), colorCieLab1.b, 0.01);
      assertEquals(0.0, colorCieLab1.a, 0.01);
      assertEquals(0.0, colorCieLab1.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = ColorCieLab.GREEN;
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.GREEN;
      ColorCieLab colorCieLab1 = new ColorCieLab(88.0, (-86.0), (-86.0));
      boolean boolean0 = colorCieLab1.equals(colorCieLab0);
      assertFalse(boolean0);
      assertEquals((-86.0), colorCieLab1.b, 0.01);
      assertEquals((-86.0), colorCieLab1.a, 0.01);
      assertFalse(colorCieLab0.equals((Object)colorCieLab1));
      assertEquals(88.0, colorCieLab1.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorCieLab colorCieLab0 = new ColorCieLab(0.0, 0.0, (-108.0));
      String string0 = colorCieLab0.toString();
      assertEquals("{L: 0.0, a: 0.0, b: -108.0}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 0.0, 0.0);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 749.8273472267, 749.8273472267);
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertEquals(0.0, colorCieLab1.L, 0.01);
      assertFalse(boolean0);
      assertEquals(749.8273472267, colorCieLab1.a, 0.01);
      assertEquals(749.8273472267, colorCieLab1.b, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = ColorCieLab.GREEN;
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      Object object0 = new Object();
      boolean boolean0 = colorCieLab0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.WHITE;
      boolean boolean0 = colorCieLab0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      boolean boolean0 = colorCieLab0.equals(colorCieLab0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      ColorCieLab colorCieLab1 = new ColorCieLab(0.0, 0.0, (-108.0));
      boolean boolean0 = colorCieLab0.equals(colorCieLab1);
      assertFalse(colorCieLab1.equals((Object)colorCieLab0));
      assertFalse(boolean0);
      assertEquals((-108.0), colorCieLab1.b, 0.01);
      assertEquals(0.0, colorCieLab1.L, 0.01);
      assertEquals(0.0, colorCieLab1.a, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColorCieLab colorCieLab0 = ColorCieLab.BLACK;
      String string0 = colorCieLab0.WHITE.toString();
      assertEquals("{L: 100.0, a: 0.0, b: 0.0}", string0);
  }
}
