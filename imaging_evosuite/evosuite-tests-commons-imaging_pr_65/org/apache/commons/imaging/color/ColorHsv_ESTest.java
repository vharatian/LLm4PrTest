/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:33:53 GMT 2025
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorHsv;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ColorHsv_ESTest extends ColorHsv_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv((-1362.283081714832), (-1362.283081714832), (-1362.283081714832));
      colorHsv0.hashCode();
      assertEquals((-1362.283081714832), colorHsv0.S, 0.01);
      assertEquals((-1362.283081714832), colorHsv0.V, 0.01);
      assertEquals((-1362.283081714832), colorHsv0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.BLUE;
      colorHsv0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, (-2540.235504023356));
      colorHsv0.hashCode();
      assertEquals((-2540.235504023356), colorHsv0.V, 0.01);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertEquals(0.0, colorHsv0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.WHITE;
      ColorHsv colorHsv1 = ColorHsv.BLACK;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(boolean0);
      assertFalse(colorHsv1.equals((Object)colorHsv0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.RED;
      ColorHsv colorHsv1 = ColorHsv.WHITE;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(colorHsv1.equals((Object)colorHsv0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.BLUE;
      ColorHsv colorHsv1 = new ColorHsv(0.0, 0.0, (-1.0));
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(boolean0);
      assertEquals(0.0, colorHsv1.H, 0.01);
      assertEquals((-1.0), colorHsv1.V, 0.01);
      assertEquals(0.0, colorHsv1.S, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(1.0, 0.0, 0.0);
      assertEquals(1.0, colorHsv0.H, 0.01);
      assertEquals(0.0, colorHsv0.V, 0.01);
      assertEquals(0.0, colorHsv0.S, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.RED;
      ColorHsv colorHsv1 = new ColorHsv(0.0, 100.0, 100.0);
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, (-2540.235504023356));
      ColorHsv colorHsv1 = ColorHsv.WHITE;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertEquals(0.0, colorHsv0.H, 0.01);
      assertEquals((-2540.235504023356), colorHsv0.V, 0.01);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertFalse(boolean0);
      assertFalse(colorHsv1.equals((Object)colorHsv0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.RED;
      ColorHsv colorHsv1 = ColorHsv.BLUE;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(boolean0);
      assertFalse(colorHsv1.equals((Object)colorHsv0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, (-2540.235504023356));
      boolean boolean0 = colorHsv0.equals("{H: 0.0, S: 100.0, V: 100.0}");
      assertEquals(0.0, colorHsv0.H, 0.01);
      assertFalse(boolean0);
      assertEquals((-2540.235504023356), colorHsv0.V, 0.01);
      assertEquals(0.0, colorHsv0.S, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.BLACK;
      boolean boolean0 = colorHsv0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorHsv colorHsv0 = ColorHsv.BLACK;
      boolean boolean0 = colorHsv0.equals(colorHsv0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, (-2540.235504023356));
      ColorHsv colorHsv1 = ColorHsv.RED;
      boolean boolean0 = colorHsv0.equals(colorHsv1);
      assertFalse(boolean0);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertEquals((-2540.235504023356), colorHsv0.V, 0.01);
      assertEquals(0.0, colorHsv0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColorHsv colorHsv0 = new ColorHsv(0.0, 0.0, (-2540.235504023356));
      String string0 = colorHsv0.RED.toString();
      assertEquals("{H: 0.0, S: 100.0, V: 100.0}", string0);
      assertEquals(0.0, colorHsv0.S, 0.01);
      assertEquals(0.0, colorHsv0.H, 0.01);
      assertEquals((-2540.235504023356), colorHsv0.V, 0.01);
  }
}
