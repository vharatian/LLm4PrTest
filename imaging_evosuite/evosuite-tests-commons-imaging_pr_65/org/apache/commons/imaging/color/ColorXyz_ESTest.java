/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:38:22 GMT 2025
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorXyz;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ColorXyz_ESTest extends ColorXyz_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz((-2591.6426438979), 100.0, (-2496.973010781461));
      colorXyz0.hashCode();
      assertEquals((-2591.6426438979), colorXyz0.X, 0.01);
      assertEquals((-2496.973010781461), colorXyz0.Z, 0.01);
      assertEquals(100.0, colorXyz0.Y, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz((-1832.63931243), (-1832.63931243), 1213.637978);
      colorXyz0.hashCode();
      assertEquals(1213.637978, colorXyz0.Z, 0.01);
      assertEquals((-1832.63931243), colorXyz0.Y, 0.01);
      assertEquals((-1832.63931243), colorXyz0.X, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.WHITE;
      ColorXyz colorXyz1 = new ColorXyz(95.05, 100.0, 95.05);
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertEquals(95.05, colorXyz1.Z, 0.01);
      assertEquals(100.0, colorXyz1.Y, 0.01);
      assertFalse(colorXyz1.equals((Object)colorXyz0));
      assertFalse(boolean0);
      assertEquals(95.05, colorXyz1.X, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.GREEN;
      ColorXyz colorXyz1 = new ColorXyz(35.76, 71.52, 35.76);
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertEquals(35.76, colorXyz1.X, 0.01);
      assertEquals(71.52, colorXyz1.Y, 0.01);
      assertFalse(colorXyz1.equals((Object)colorXyz0));
      assertEquals(35.76, colorXyz1.Z, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.WHITE;
      ColorXyz colorXyz1 = new ColorXyz(95.05, 3217.9048974, 95.05);
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertEquals(3217.9048974, colorXyz1.Y, 0.01);
      assertEquals(95.05, colorXyz1.X, 0.01);
      assertFalse(boolean0);
      assertEquals(95.05, colorXyz1.Z, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(233.2774, 233.2774, 0.0);
      ColorXyz colorXyz1 = ColorXyz.BLACK;
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertEquals(233.2774, colorXyz0.X, 0.01);
      assertEquals(233.2774, colorXyz0.Y, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorXyz0.Z, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorXyz colorXyz0 = new ColorXyz(95.05, 100.0, 95.05);
      ColorXyz colorXyz1 = ColorXyz.WHITE;
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertEquals(95.05, colorXyz0.X, 0.01);
      assertEquals(100.0, colorXyz0.Y, 0.01);
      assertEquals(95.05, colorXyz0.Z, 0.01);
      assertFalse(boolean0);
      assertFalse(colorXyz1.equals((Object)colorXyz0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.WHITE;
      ColorXyz colorXyz1 = new ColorXyz(95.05, 108.9, 108.9);
      boolean boolean0 = colorXyz1.equals(colorXyz0);
      assertFalse(colorXyz0.equals((Object)colorXyz1));
      assertEquals(108.9, colorXyz1.Y, 0.01);
      assertEquals(108.9, colorXyz1.Z, 0.01);
      assertEquals(95.05, colorXyz1.X, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.WHITE;
      ColorXyz colorXyz1 = new ColorXyz(100.0, (-1025.4253384), 95.05);
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertFalse(boolean0);
      assertEquals((-1025.4253384), colorXyz1.Y, 0.01);
      assertEquals(100.0, colorXyz1.X, 0.01);
      assertEquals(95.05, colorXyz1.Z, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.WHITE;
      Object object0 = new Object();
      boolean boolean0 = colorXyz0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.WHITE;
      boolean boolean0 = colorXyz0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.WHITE;
      boolean boolean0 = colorXyz0.equals(colorXyz0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.BLACK;
      ColorXyz colorXyz1 = new ColorXyz(0.0, 0.0, 0.0);
      boolean boolean0 = colorXyz0.equals(colorXyz1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorXyz colorXyz0 = ColorXyz.BLACK;
      String string0 = colorXyz0.GREEN.toString();
      assertEquals("{X: 35.76, Y: 71.52, Z: 11.92}", string0);
  }
}
