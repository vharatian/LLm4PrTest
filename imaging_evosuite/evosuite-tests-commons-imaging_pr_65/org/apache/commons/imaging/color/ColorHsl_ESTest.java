/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:31:39 GMT 2025
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorHsl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ColorHsl_ESTest extends ColorHsl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorHsl colorHsl0 = new ColorHsl(1025.32458, 1025.32458, (-1.0));
      colorHsl0.hashCode();
      assertEquals(1025.32458, colorHsl0.H, 0.01);
      assertEquals((-1.0), colorHsl0.L, 0.01);
      assertEquals(1025.32458, colorHsl0.S, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorHsl colorHsl0 = new ColorHsl((-1.0), (-1.0), 4651.370498702765);
      colorHsl0.hashCode();
      assertEquals(4651.370498702765, colorHsl0.L, 0.01);
      assertEquals((-1.0), colorHsl0.S, 0.01);
      assertEquals((-1.0), colorHsl0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.GREEN;
      colorHsl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      ColorHsl colorHsl1 = ColorHsl.RED;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertFalse(colorHsl1.equals((Object)colorHsl0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.WHITE;
      String string0 = colorHsl0.WHITE.toString();
      assertEquals("{H: 0.0, S: 0.0, L: 100.0}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorHsl colorHsl0 = new ColorHsl(0.0, 3128.1459, 3128.1459);
      ColorHsl colorHsl1 = ColorHsl.WHITE;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertFalse(boolean0);
      assertEquals(3128.1459, colorHsl0.L, 0.01);
      assertEquals(3128.1459, colorHsl0.S, 0.01);
      assertEquals(0.0, colorHsl0.H, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorHsl colorHsl0 = new ColorHsl(1025.32458, 1025.32458, (-1.0));
      ColorHsl colorHsl1 = new ColorHsl((-1664.0), 1025.32458, 0.0);
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertFalse(boolean0);
      assertEquals((-1664.0), colorHsl1.H, 0.01);
      assertEquals(1025.32458, colorHsl1.S, 0.01);
      assertEquals((-1.0), colorHsl0.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      ColorHsl colorHsl1 = ColorHsl.WHITE;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertFalse(colorHsl1.equals((Object)colorHsl0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      ColorHsl colorHsl1 = ColorHsl.WHITE;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertFalse(boolean0);
      assertFalse(colorHsl1.equals((Object)colorHsl0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      ColorHsl colorHsl1 = ColorHsl.GREEN;
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertFalse(colorHsl1.equals((Object)colorHsl0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      boolean boolean0 = colorHsl0.equals("{H: 0.0, S: 0.0, L: 0.0}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.RED;
      boolean boolean0 = colorHsl0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.GREEN;
      boolean boolean0 = colorHsl0.equals(colorHsl0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      ColorHsl colorHsl1 = new ColorHsl(0.0, 0.0, 0.0);
      boolean boolean0 = colorHsl0.equals(colorHsl1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColorHsl colorHsl0 = ColorHsl.BLACK;
      String string0 = colorHsl0.BLUE.toString();
      assertEquals("{H: 240.0, S: 100.0, L: 100.0}", string0);
  }
}
