/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:39:43 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.datareaders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Line2D;
import java.awt.image.RasterFormatException;
import java.nio.ByteOrder;
import java.util.LinkedList;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.formats.tiff.JpegImageData;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffImageData;
import org.apache.commons.imaging.formats.tiff.TiffRasterData;
import org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration;
import org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DataReaderStrips_ESTest extends DataReaderStrips_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1221, linkedList0, 1221, 1221, byteOrder0);
      int[] intArray0 = new int[4];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1221, 1221, 1221);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 13);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 2, intArray0, 2, 1221, 2, (-6), 2, 2, tiffPlanarConfiguration0, byteOrder0, 13, tiffImageData_Strips0);
      Line2D.Float line2D_Float0 = new Line2D.Float((byte)110, 2, 1221, (-42.51F));
      Rectangle rectangle0 = line2D_Float0.getBounds();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1221, linkedList0, 1221, 1221, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1221, 1221, 1221);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 13);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 2, intArray0, 2, 1221, 2, (-34), 2, 2, tiffPlanarConfiguration0, byteOrder0, 13, tiffImageData_Strips0);
      Point point0 = new Point();
      point0.translate(2, 3394);
      Rectangle rectangle0 = new Rectangle(point0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 261
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(637, linkedList0, 637, 637, byteOrder0);
      int[] intArray0 = new int[4];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(637, intArray0, 0, (-3854), (-3854));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterLogLuv0, 0, intArray0, 6, 0, 0, 637, 637, 3342, tiffPlanarConfiguration0, byteOrder0, 961, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(1137, 1467, 1264, 2);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-4364), linkedList0, (-4364), 50949, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(3007, intArray0, 6, 3007, 726);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[3];
      JpegImageData jpegImageData0 = new JpegImageData(2015L, 48135, byteArray0);
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) jpegImageData0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 24);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-703), intArray0, 48135, 48135, 2, 24, 3007, (byte)126, tiffPlanarConfiguration0, byteOrder0, 48135, tiffImageData_Strips0);
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Tiff: unknown/unsupported compression: 126
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1221, linkedList0, 1221, 412L, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, (-1199), 1221, 8);
      byte[] byteArray0 = new byte[10];
      TiffImageData.Data tiffImageData_Data0 = new TiffImageData.Data((byte)0, 2279, byteArray0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) tiffImageData_Data0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 3);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (byte)0, intArray0, 455, 33, 3, (byte)0, 2, (byte)117, tiffPlanarConfiguration0, byteOrder0, 3, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(6, 1221);
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Tiff: unknown/unsupported compression: 117
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(151, linkedList0, 3573L, 3573L, byteOrder0);
      int[] intArray0 = new int[0];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(151, intArray0, 0, 0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[6];
      TiffImageData.Data tiffImageData_Data0 = new TiffImageData.Data(3573L, 455, byteArray0);
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) tiffImageData_Data0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 286);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 0, intArray0, 151, 0, 0, 151, 8, 8, tiffPlanarConfiguration0, byteOrder0, 16, tiffImageData_Strips0);
      Point point0 = new Point((byte)0, (byte)0);
      Rectangle rectangle0 = new Rectangle(point0);
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to decompress image
         //
         verifyException("org.apache.commons.imaging.common.ZlibDeflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(647, linkedList0, 647, 647, byteOrder0);
      int[] intArray0 = new int[4];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(647, intArray0, 0, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterLogLuv0, 7, intArray0, 647, 4, 3, 4, 1589, 0, tiffPlanarConfiguration0, byteOrder0, (-429), (TiffImageData.Strips) null);
      TiffRasterData tiffRasterData0 = dataReaderStrips0.readRasterData((Rectangle) null);
      assertEquals(4, tiffRasterData0.getWidth());
      assertEquals(1589, tiffRasterData0.getHeight());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1221, linkedList0, 1221, 412L, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1221, 1221, 8);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 3);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 411, intArray0, 2, 8, 2, 2, (-2686), 411, tiffPlanarConfiguration0, byteOrder0, 4487, tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1213, linkedList0, 1213, 1213, byteOrder0);
      int[] intArray0 = new int[11];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1213, 1213, 1213);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[15];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 3);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (byte)72, intArray0, 410, (byte)72, 3, (byte)72, (byte)72, (byte)72, tiffPlanarConfiguration0, byteOrder0, 3, tiffImageData_Strips0);
      Point point0 = new Point(3, 1213);
      Rectangle rectangle0 = new Rectangle(point0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 404
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1213, linkedList0, 1213, 1213, byteOrder0);
      int[] intArray0 = new int[10];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1213, 1213, 1213);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[5];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 3);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      Rectangle rectangle0 = new Rectangle();
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 282, intArray0, 282, 9, 2, 3, 9, 1, tiffPlanarConfiguration0, byteOrder0, 0, tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1184, linkedList0, 1184, 1184, byteOrder0);
      int[] intArray0 = new int[18];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1184, 1184, 1184);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      MockFile mockFile0 = new MockFile("x\"X@WZ}9H+", "x\"X@WZ}9H+");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      TiffImageData.ByteSourceData tiffImageData_ByteSourceData0 = new TiffImageData.ByteSourceData(292, 2, byteSourceFile0);
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) tiffImageData_ByteSourceData0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 768);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 3, intArray0, (-1903), 3, 6, 1591, 292, 1184, tiffPlanarConfiguration0, byteOrder0, 162, tiffImageData_Strips0);
      try { 
        dataReaderStrips0.readImageData((Rectangle) null, true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Tiff: unknown/unsupported compression: 1184
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(59932, linkedList0, 59932, 59932, byteOrder0);
      int[] intArray0 = new int[8];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(59932, intArray0, 59932, 59932, 59932);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterLogLuv0, 6, intArray0, 59932, 6, 59932, 59932, 59932, 59932, tiffPlanarConfiguration0, byteOrder0, 59932, (TiffImageData.Strips) null);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData((Rectangle) null, true, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(672, linkedList0, 672, 672, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(672, intArray0, 0, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 6, intArray0, 0, 0, 672, 6, 6, 672, tiffPlanarConfiguration0, byteOrder0, 0, tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData((Rectangle) null, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(50944, linkedList0, 50944, 50944, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 50944, 50944, 50944);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 50944);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = null;
      try {
        dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-1), (int[]) null, 6, 689, (-1), 2, 50944, (-1), tiffPlanarConfiguration0, byteOrder0, 50944, tiffImageData_Strips0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(645, linkedList0, 645, 645, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(645, intArray0, 645, 645, 645);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = null;
      try {
        dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterLogLuv0, 6, intArray0, 645, (-425), (-425), (-546), (-425), (-2819), tiffPlanarConfiguration0, byteOrder0, 645, (TiffImageData.Strips) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1221, linkedList0, 1221, 1221, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1221, 1221, 8);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 31);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 1221, intArray0, 410, 7, 2, 4487, 7, 1221, tiffPlanarConfiguration0, byteOrder0, 1, tiffImageData_Strips0);
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Raster dimensions less than or equal to zero are not supported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffRasterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(50981, linkedList0, 50981, 50981, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 50981, 50981, 50981);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 50981);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 2, intArray0, 2, 50981, 2, 2, 2, 2, tiffPlanarConfiguration0, byteOrder0, 50981, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(645, linkedList0, 645, 645, byteOrder0);
      int[] intArray0 = new int[9];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(645, intArray0, 645, 645, 645);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterLogLuv0, 6, intArray0, 645, 645, 645, 645, 645, 645, tiffPlanarConfiguration0, byteOrder0, 645, (TiffImageData.Strips) null);
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported sample format, value=645
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(645, linkedList0, 645, 645, byteOrder0);
      int[] intArray0 = new int[7];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(558, intArray0, 645, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 1, intArray0, 645, 0, 645, 6, 6, 558, tiffPlanarConfiguration0, byteOrder0, (-1), tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(758, 6);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (x+width) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1221, linkedList0, 1221, 1221, byteOrder0);
      int[] intArray0 = new int[7];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1221, 1221, 1221);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 1221);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 1221, intArray0, (-2), 1221, 6, 1221, 1221, 6, tiffPlanarConfiguration0, byteOrder0, (-2), tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(1221, 6, 1221, 1221);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage x is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(672, linkedList0, 672, 672, byteOrder0);
      int[] intArray0 = new int[7];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(672, intArray0, 0, 0, 0);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[4];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 6, intArray0, 0, 0, 672, 6, 6, 672, tiffPlanarConfiguration0, byteOrder0, (-1), tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData((Rectangle) null, true, true);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (y+height) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1184, linkedList0, 1184, 1184, byteOrder0);
      int[] intArray0 = new int[18];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 1184, 1184, 1184);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 3);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (byte)72, intArray0, 1184, (byte)72, 3, (byte)72, (byte)72, (byte)72, tiffPlanarConfiguration0, byteOrder0, 3, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(1184, 6, 2368, 3);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }
}
