/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 22:57:40 GMT 2025
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.nio.channels.ClosedChannelException;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import org.apache.commons.io.input.BufferedFileChannelInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BufferedFileChannelInputStream_ESTest extends BufferedFileChannelInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 637);
      long long0 = bufferedFileChannelInputStream0.skip(3802L);
      assertEquals(3802L, long0);
      
      long long1 = bufferedFileChannelInputStream0.skip(352L);
      assertEquals(294L, long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 637);
      long long0 = bufferedFileChannelInputStream0.skip(3802L);
      assertEquals(3802L, long0);
      
      long long1 = bufferedFileChannelInputStream0.skip(294L);
      assertEquals(294L, long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 0);
      long long0 = bufferedFileChannelInputStream0.skip(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[0];
      try { 
        bufferedFileChannelInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 637);
      bufferedFileChannelInputStream0.close();
      try { 
        bufferedFileChannelInputStream0.skip(637);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      bufferedFileChannelInputStream0.close();
      byte[] byteArray0 = new byte[1];
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 637);
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read((byte[]) null, 637, 637);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 0);
      // Undeclared exception!
      bufferedFileChannelInputStream0.read();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      try { 
        bufferedFileChannelInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile(",@FW!7P`;Sb@+1_2Jdc");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, (-2140204041));
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((Path) null, 1722);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, (-1402));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -1402
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("#5Fm9dQ9R|8qs,i*");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("1.8");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 637);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((File) null, 2147483645);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, (-1870));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -1870
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("@?_0&", "@?_0&");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 215834723);
      long long0 = bufferedFileChannelInputStream0.skip(215834723);
      assertEquals(36864L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      long long0 = bufferedFileChannelInputStream0.skip((-50L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, 0);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 1217, (int) (byte)111);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 1073741824, 1073741824);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 637);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, (int) (byte)6, (-2367));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[1];
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, (-1983), (-1983));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      bufferedFileChannelInputStream0.close();
      try { 
        bufferedFileChannelInputStream0.read();
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, 0);
      int int0 = bufferedFileChannelInputStream0.available();
      assertEquals(0, int0);
  }
}
