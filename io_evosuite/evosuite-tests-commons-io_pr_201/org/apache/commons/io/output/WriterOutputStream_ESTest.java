/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 23:12:44 GMT 2025
 */

package org.apache.commons.io.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.apache.commons.io.output.WriterOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WriterOutputStream_ESTest extends WriterOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      byte[] byteArray0 = new byte[9];
      writerOutputStream0.write(byteArray0, 1, 1);
      assertEquals("", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      writerOutputStream0.flush();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charsetDecoder0, 0, false);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      writerOutputStream0.write(byteArray0, (int) (byte)0, (int) (byte)1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        writerOutputStream0.write(byteArray0, 2329, 2329);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      byte[] byteArray0 = new byte[1];
      writerOutputStream0.close();
      // Undeclared exception!
      try { 
        writerOutputStream0.write(byteArray0, (int) (byte)0, 1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = CODING_END, new state = CODING
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charsetDecoder0);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-8);
      try { 
        writerOutputStream0.write(byteArray0, (int) (byte)1, (int) (byte)1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected coder result
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charset0, 0, true);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      writerOutputStream0.write(byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      // Undeclared exception!
      try { 
        writerOutputStream0.write((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      byte[] byteArray0 = new byte[1];
      writerOutputStream0.close();
      // Undeclared exception!
      try { 
        writerOutputStream0.write(byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = CODING_END, new state = CODING
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charsetDecoder0);
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte) (-4);
      try { 
        writerOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected coder result
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream((Writer) null, charset0, 10, true);
      // Undeclared exception!
      try { 
        writerOutputStream0.write(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      writerOutputStream0.close();
      // Undeclared exception!
      try { 
        writerOutputStream0.write(752);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = CODING_END, new state = CODING
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WriterOutputStream writerOutputStream0 = new WriterOutputStream((Writer) null);
      // Undeclared exception!
      try { 
        writerOutputStream0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, (CharsetDecoder) null, 1615, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, charsetDecoder0, (-692), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream((Writer) null, (CharsetDecoder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, (Charset) null, 128, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, charset0, (-85), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, "ReportEntry", (-944), false);
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // ReportEntry
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, "HcN+b8-,U>o,\"7h", (-944), false);
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // HcN+b8-,U>o,\"7h
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, "UTF-16", (-668), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, "k_");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // k_
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, "%cXY}L");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // %cXY}L
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null charset name
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charsetDecoder0);
      try { 
        writerOutputStream0.write(128);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected coder result
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charset0, 0, false);
      // Undeclared exception!
      writerOutputStream0.write(0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(2322);
      Charset charset0 = Charset.defaultCharset();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charset0, 2322, true);
      byte[] byteArray0 = new byte[8];
      writerOutputStream0.write(byteArray0, 16, (-3684));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      // Undeclared exception!
      try { 
        writerOutputStream0.write((byte[]) null, 2147483645, 2147483645);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charset0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      writerOutputStream0.write(5);
      writerOutputStream0.close();
      assertEquals("\u0005", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, "UTF-16", (byte)0, true);
      writerOutputStream0.write((int) (byte)0);
      // Undeclared exception!
      writerOutputStream0.close();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, "UTF-16");
      writerOutputStream0.write((int) (byte)0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      WriterOutputStream writerOutputStream0 = new WriterOutputStream((Writer) null);
      // Undeclared exception!
      try { 
        writerOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0, charsetDecoder0);
      writerOutputStream0.write((-305));
      try { 
        writerOutputStream0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected coder result
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = new WriterOutputStream(stringWriter0);
      byte[] byteArray0 = new byte[1];
      writerOutputStream0.write(byteArray0);
      assertEquals("", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      WriterOutputStream writerOutputStream0 = null;
      try {
        writerOutputStream0 = new WriterOutputStream(stringWriter0, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.WriterOutputStream", e);
      }
  }
}
