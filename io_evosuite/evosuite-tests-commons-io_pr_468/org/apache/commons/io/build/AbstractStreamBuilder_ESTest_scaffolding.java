/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Aug 23 18:12:52 GMT 2025
 */

package org.apache.commons.io.build;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class AbstractStreamBuilder_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.io.build.AbstractStreamBuilder"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/azureuser/LLm4PrTest/ io_experiments"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractStreamBuilder_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.io.input.MemoryMappedFileInputStream",
      "org.apache.commons.io.filefilter.IOFileFilter",
      "org.apache.commons.io.input.ObservableInputStream",
      "org.apache.commons.io.input.UnsynchronizedFilterInputStream",
      "org.apache.commons.io.input.UnsynchronizedFilterInputStream$Builder",
      "org.apache.commons.io.build.AbstractSupplier",
      "org.apache.commons.io.output.UncheckedFilterOutputStream",
      "org.apache.commons.io.build.AbstractOrigin$ByteArrayOrigin",
      "org.apache.commons.io.function.Uncheck",
      "org.apache.commons.io.output.XmlStreamWriter$Builder",
      "org.apache.commons.io.build.AbstractOrigin$InputStreamOrigin",
      "org.apache.commons.io.input.MemoryMappedFileInputStream$Builder",
      "org.apache.commons.io.build.AbstractOrigin$OutputStreamOrigin",
      "org.apache.commons.io.input.XmlStreamReader",
      "org.apache.commons.io.input.ObservableInputStream$Observer",
      "org.apache.commons.io.build.AbstractStreamBuilder",
      "org.apache.commons.io.build.AbstractOrigin$FileOrigin",
      "org.apache.commons.io.function.IOSupplier",
      "org.apache.commons.io.output.DeferredFileOutputStream$Builder",
      "org.apache.commons.io.FileExistsException",
      "org.apache.commons.io.output.LockableFileWriter$Builder",
      "org.apache.commons.io.build.AbstractOrigin",
      "org.apache.commons.io.build.AbstractOrigin$URIOrigin",
      "org.apache.commons.io.file.PathFilter",
      "org.apache.commons.io.output.ChunkedOutputStream",
      "org.apache.commons.io.build.AbstractOrigin$PathOrigin",
      "org.apache.commons.io.input.MessageDigestCalculatingInputStream",
      "org.apache.commons.io.output.UncheckedFilterWriter",
      "org.apache.commons.io.input.UnsynchronizedBufferedInputStream",
      "org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver",
      "org.apache.commons.io.input.UnsynchronizedBufferedInputStream$Builder",
      "org.apache.commons.io.input.MessageDigestCalculatingInputStream$Builder",
      "org.apache.commons.io.output.ChunkedOutputStream$Builder",
      "org.apache.commons.io.build.AbstractOrigin$WriterOrigin",
      "org.apache.commons.io.file.DeleteOption",
      "org.apache.commons.io.output.XmlStreamWriter",
      "org.apache.commons.io.Charsets",
      "org.apache.commons.io.output.DeferredFileOutputStream",
      "org.apache.commons.io.FileUtils",
      "org.apache.commons.io.build.AbstractOrigin$CharSequenceOrigin",
      "org.apache.commons.io.input.CharSequenceInputStream",
      "org.apache.commons.io.input.CharSequenceInputStream$Builder",
      "org.apache.commons.io.build.AbstractOriginSupplier",
      "org.apache.commons.io.build.AbstractOrigin$ReaderOrigin",
      "org.apache.commons.io.input.XmlStreamReader$Builder",
      "org.apache.commons.io.output.UncheckedFilterWriter$Builder",
      "org.apache.commons.io.output.LockableFileWriter",
      "org.apache.commons.io.file.PathUtils",
      "org.apache.commons.io.input.ProxyInputStream",
      "org.apache.commons.io.output.ThresholdingOutputStream",
      "org.apache.commons.io.output.UncheckedFilterOutputStream$Builder"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractStreamBuilder_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.io.build.AbstractSupplier",
      "org.apache.commons.io.build.AbstractOriginSupplier",
      "org.apache.commons.io.file.PathUtils",
      "org.apache.commons.io.build.AbstractStreamBuilder",
      "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper",
      "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream$Builder",
      "org.apache.commons.io.build.AbstractOrigin",
      "org.apache.commons.io.build.AbstractOrigin$PathOrigin",
      "org.apache.commons.io.input.QueueInputStream$Builder",
      "org.apache.commons.io.output.WriterOutputStream$Builder",
      "org.apache.commons.io.output.FileWriterWithEncoding$Builder",
      "org.apache.commons.io.build.AbstractOrigin$ByteArrayOrigin",
      "org.apache.commons.io.input.XmlStreamReader$Builder",
      "org.apache.commons.io.input.Tailer$Builder",
      "org.apache.commons.io.Charsets",
      "org.apache.commons.io.input.ReversedLinesFileReader$Builder",
      "org.apache.commons.io.FilenameUtils",
      "org.apache.commons.io.FileSystem",
      "org.apache.commons.io.input.ReversedLinesFileReader",
      "org.apache.commons.io.build.AbstractOrigin$FileOrigin",
      "org.apache.commons.io.StandardLineSeparator",
      "org.apache.commons.io.input.ReversedLinesFileReader$FilePart",
      "org.apache.commons.io.input.UncheckedBufferedReader$Builder",
      "org.apache.commons.io.function.Uncheck",
      "org.apache.commons.io.input.UncheckedBufferedReader",
      "org.apache.commons.io.input.MemoryMappedFileInputStream$Builder",
      "org.apache.commons.io.output.DeferredFileOutputStream$Builder",
      "org.apache.commons.io.output.ThresholdingOutputStream",
      "org.apache.commons.io.output.DeferredFileOutputStream",
      "org.apache.commons.io.input.UncheckedFilterInputStream$Builder",
      "org.apache.commons.io.input.UncheckedFilterInputStream",
      "org.apache.commons.io.ByteOrderMark",
      "org.apache.commons.io.input.BOMInputStream$Builder",
      "org.apache.commons.io.input.MessageDigestCalculatingInputStream$Builder",
      "org.apache.commons.io.input.ProxyInputStream",
      "org.apache.commons.io.input.ObservableInputStream",
      "org.apache.commons.io.input.MessageDigestCalculatingInputStream",
      "org.apache.commons.io.input.AutoCloseInputStream$Builder",
      "org.apache.commons.io.build.AbstractOrigin$WriterOrigin",
      "org.apache.commons.io.input.AutoCloseInputStream",
      "org.apache.commons.io.input.ReadAheadInputStream$Builder",
      "org.apache.commons.io.input.ReadAheadInputStream",
      "org.apache.commons.io.function.IOConsumer",
      "org.apache.commons.io.output.AbstractByteArrayOutputStream",
      "org.apache.commons.io.output.ByteArrayOutputStream",
      "org.apache.commons.io.IOUtils",
      "org.apache.commons.io.output.LockableFileWriter$Builder",
      "org.apache.commons.io.FileUtils",
      "org.apache.commons.io.input.XmlStreamReader",
      "org.apache.commons.io.output.LockableFileWriter",
      "org.apache.commons.io.output.UncheckedFilterOutputStream$Builder",
      "org.apache.commons.io.output.UncheckedFilterOutputStream",
      "org.apache.commons.io.build.AbstractOrigin$URIOrigin",
      "org.apache.commons.io.input.RandomAccessFileInputStream$Builder",
      "org.apache.commons.io.output.ProxyWriter",
      "org.apache.commons.io.output.FileWriterWithEncoding",
      "org.apache.commons.io.input.Tailer",
      "org.apache.commons.io.input.ReaderInputStream$Builder",
      "org.apache.commons.io.input.ReaderInputStream",
      "org.apache.commons.io.input.UncheckedFilterReader$Builder",
      "org.apache.commons.io.input.UnsynchronizedBufferedInputStream$Builder",
      "org.apache.commons.io.input.UnsynchronizedFilterInputStream",
      "org.apache.commons.io.input.UnsynchronizedBufferedInputStream",
      "org.apache.commons.io.input.CharSequenceInputStream$Builder",
      "org.apache.commons.io.input.CharSequenceInputStream",
      "org.apache.commons.io.output.XmlStreamWriter$Builder",
      "org.apache.commons.io.output.XmlStreamWriter",
      "org.apache.commons.io.build.AbstractOrigin$CharSequenceOrigin",
      "org.apache.commons.io.build.AbstractOrigin$ReaderOrigin",
      "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream",
      "org.apache.commons.io.build.AbstractOrigin$InputStreamOrigin",
      "org.apache.commons.io.build.AbstractOrigin$OutputStreamOrigin",
      "org.apache.commons.io.output.UncheckedFilterWriter$Builder",
      "org.apache.commons.io.output.UncheckedFilterWriter",
      "org.apache.commons.io.input.BOMInputStream",
      "org.apache.commons.io.input.BufferedFileChannelInputStream$Builder",
      "org.apache.commons.io.input.BufferedFileChannelInputStream",
      "org.apache.commons.io.charset.CharsetEncoders",
      "org.apache.commons.io.input.UnsynchronizedFilterInputStream$Builder",
      "org.apache.commons.io.input.MemoryMappedFileInputStream",
      "org.apache.commons.io.output.ChunkedOutputStream$Builder",
      "org.apache.commons.io.output.ChunkedOutputStream",
      "org.apache.commons.io.input.UncheckedFilterReader",
      "org.apache.commons.io.input.TailerListenerAdapter",
      "org.apache.commons.io.output.WriterOutputStream",
      "org.apache.commons.io.input.RandomAccessFileInputStream",
      "org.apache.commons.io.RandomAccessFileMode",
      "org.apache.commons.io.input.QueueInputStream",
      "org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream$Builder",
      "org.apache.commons.io.output.UnsynchronizedByteArrayOutputStream",
      "org.apache.commons.io.charset.CharsetDecoders",
      "org.apache.commons.io.input.Tailer$TailablePath",
      "org.apache.commons.io.input.ObservableInputStream$Observer",
      "org.apache.commons.io.input.MessageDigestCalculatingInputStream$MessageDigestMaintainingObserver",
      "org.apache.commons.io.input.XmlStreamReaderException",
      "org.apache.commons.io.output.StringBuilderWriter",
      "com.google.common.hash.BloomFilter",
      "com.google.common.hash.BloomFilterStrategies",
      "com.google.common.base.Preconditions",
      "com.google.common.hash.BloomFilterStrategies$LockFreeBitArray",
      "com.google.common.math.LongMath",
      "com.google.common.math.LongMath$1",
      "com.google.common.primitives.IntsMethodsForWeb",
      "com.google.common.primitives.Ints",
      "com.google.common.hash.Striped64$1",
      "com.google.common.hash.Striped64",
      "com.google.common.hash.LongAdder",
      "com.google.common.hash.LongAddables$1",
      "com.google.common.hash.LongAddables"
    );
  }
}
