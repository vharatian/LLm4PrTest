/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 18:17:07 GMT 2025
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Duration;
import java.time.Instant;
import org.apache.commons.io.input.TimestampedObserver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TimestampedObserver_ESTest extends TimestampedObserver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      timestampedObserver0.closed();
      Duration duration0 = timestampedObserver0.getOpenToCloseDuration();
      assertNotNull(duration0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      timestampedObserver0.closed();
      Instant instant0 = timestampedObserver0.getCloseInstant();
      assertNotNull(instant0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      boolean boolean0 = timestampedObserver0.isClosed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      Instant instant0 = timestampedObserver0.getOpenInstant();
      assertNotNull(instant0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      // Undeclared exception!
      try { 
        timestampedObserver0.getOpenToCloseDuration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      Instant instant0 = timestampedObserver0.getCloseInstant();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      Duration duration0 = timestampedObserver0.getOpenToNowDuration();
      assertNotNull(duration0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      timestampedObserver0.closed();
      boolean boolean0 = timestampedObserver0.isClosed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TimestampedObserver timestampedObserver0 = new TimestampedObserver();
      String string0 = timestampedObserver0.toString();
      assertEquals("TimestampedObserver [openInstant=2014-02-14T20:21:21.320Z, closeInstant=null]", string0);
  }
}
