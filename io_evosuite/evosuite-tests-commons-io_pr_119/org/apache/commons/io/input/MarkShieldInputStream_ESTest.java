/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 01:57:37 GMT 2025
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.apache.commons.io.input.MarkShieldInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MarkShieldInputStream_ESTest extends MarkShieldInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 1073);
      MarkShieldInputStream markShieldInputStream0 = new MarkShieldInputStream(byteArrayInputStream0);
      boolean boolean0 = markShieldInputStream0.markSupported();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      MarkShieldInputStream markShieldInputStream0 = new MarkShieldInputStream(pipedInputStream0);
      markShieldInputStream0.mark(0);
      assertFalse(markShieldInputStream0.markSupported());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MarkShieldInputStream markShieldInputStream0 = new MarkShieldInputStream((InputStream) null);
      try { 
        markShieldInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("org.apache.commons.io.input.MarkShieldInputStream", e);
      }
  }
}
