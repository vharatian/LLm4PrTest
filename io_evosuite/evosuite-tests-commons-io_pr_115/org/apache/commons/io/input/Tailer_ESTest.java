/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 02:15:31 GMT 2025
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.charset.Charset;
import org.apache.commons.io.input.Tailer;
import org.apache.commons.io.input.TailerListener;
import org.apache.commons.io.input.TailerListenerAdapter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Tailer_ESTest extends Tailer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, 0L, true, false);
      assertEquals(0L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, (-1092L));
      tailer0.stop();
      boolean boolean0 = tailer0.getRun();
      assertFalse(boolean0);
      assertEquals((-1092L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "6g ");
      File file0 = MockFile.createTempFile("net.bytebuddy.description.NamedElement", "net.bytebuddy.description.NamedElement", (File) mockFile0);
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(file0, tailerListenerAdapter0, 0L, false, false);
      File file1 = tailer0.getFile();
      assertTrue(file1.canRead());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("$e,gy[XQrO");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 0L, false, false);
      long long0 = tailer0.getDelay();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, (-1092L));
      long long0 = tailer0.getDelay();
      assertEquals((-1092L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("eO'19Ki/<d:J");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 1L, true, false, 9);
      assertEquals(1L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("eO'19Ki/<d:J");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, (-2048L), false, true, 0);
      assertEquals((-2048L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, 2136L, true, true);
      assertEquals(2136L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("eO'19Ki/<d:J");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, (-2048L), true, true);
      assertEquals((-2048L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("$e,gy[XQrO");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 0L, false, 64);
      assertEquals(0L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, (-2952L), false, 3162);
      assertEquals((-2952L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, 0L, true);
      assertEquals(0L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("eO'19Ki/<d:J");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 1000L, false);
      assertEquals(1000L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, 0L);
      assertEquals(0L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A0|Yz", "ExceptionWasThrown");
      Charset charset0 = Charset.defaultCharset();
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, charset0, (TailerListener) tailerListenerAdapter0, 0L, false, false, 0);
      assertEquals(0L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Charset charset0 = Charset.defaultCharset();
      Tailer tailer0 = Tailer.create((File) null, charset0, (TailerListener) tailerListenerAdapter0, 6L, false, false, 0);
      assertEquals(6L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      // Undeclared exception!
      try { 
        Tailer.create((File) null, (TailerListener) tailerListenerAdapter0, 1000L, true, (-446));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("MZlb*y,[bB\",e2\"");
      // Undeclared exception!
      try { 
        Tailer.create((File) mockFile0, (TailerListener) null, 1153L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("|c9N8", "|c9N8");
      // Undeclared exception!
      try { 
        Tailer.create((File) mockFile0, (Charset) null, (TailerListener) null, 903L, true, true, (-4236));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("$n`.|INsaF!w+", "$n`.|INsaF!w+");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = null;
      try {
        tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 2698L, true, true, (-479));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = MockFile.createTempFile("rqoNfp", "rqoNfp");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = null;
      try {
        tailer0 = new Tailer(file0, tailerListenerAdapter0, (-136L), true, (-3845));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("net.bytebuddy.asm.Advice", "' does not exist");
      Tailer tailer0 = null;
      try {
        tailer0 = new Tailer(mockFile0, (TailerListener) null, (-407L), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Charset charset0 = Charset.defaultCharset();
      Tailer tailer0 = Tailer.create((File) null, charset0, (TailerListener) tailerListenerAdapter0, (-1L), false, false, 6);
      assertEquals((-1L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, 1266L, true, 98);
      assertEquals(1266L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, 0L, true, true, 1409);
      tailer0.run();
      assertEquals(0L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer((File) null, tailerListenerAdapter0, (-1L), true, 6);
      tailer0.stop();
      tailer0.run();
      assertEquals((-1L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create((File) null, (TailerListener) tailerListenerAdapter0);
      assertEquals(1000L, tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      File file0 = MockFile.createTempFile("org.junitpioneer.jupiter.DefaultTimeZoneExtension", "org.junitpioneer.jupiter.DefaultTimeZoneExtension", (File) null);
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, (-1L));
      assertEquals((-1L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 1266L);
      long long0 = tailer0.getDelay();
      assertEquals(1266L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tailer tailer0 = null;
      try {
        tailer0 = new Tailer((File) null, (TailerListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      File file0 = MockFile.createTempFile("org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = Tailer.create(file0, (TailerListener) tailerListenerAdapter0, (-2939L), true);
      assertEquals((-2939L), tailer0.getDelay());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "6g ");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 0L, false, false);
      File file0 = tailer0.getFile();
      assertFalse(file0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      MockFile mockFile0 = new MockFile("\"C9Jr");
      // Undeclared exception!
      try { 
        Tailer.create((File) mockFile0, (TailerListener) tailerListenerAdapter0, (long) 1409, true, true, (-2935));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.Tailer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.input.Tailer");
      TailerListenerAdapter tailerListenerAdapter0 = new TailerListenerAdapter();
      Tailer tailer0 = new Tailer(mockFile0, tailerListenerAdapter0, 0L);
      tailer0.run();
      assertEquals(0L, tailer0.getDelay());
  }
}
