/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 02:27:38 GMT 2025
 */

package org.apache.commons.io.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.io.output.FilterCollectionWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FilterCollectionWriter_ESTest extends FilterCollectionWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      linkedList0.add((Writer) filterCollectionWriter0);
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(linkedList0);
      filterCollectionWriter1.flush();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[0] = (Writer) stringWriter1;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write("Duplicate advice for ", 0, 9);
      CharBuffer charBuffer0 = CharBuffer.allocate(687);
      filterCollectionWriter0.append((CharSequence) charBuffer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[3] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write((String) null, 1610, 1444);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[3] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        filterCollectionWriter0.append((CharSequence) charBuffer0, 1218, (-3541));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[0] = (Writer) stringWriter1;
      stringWriter1.append('\"');
      stringWriter1.write(3285);
      StringWriter stringWriter2 = stringWriter1.append('\"');
      stringWriter2.flush();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write("`~V>,`9T");
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      filterCollectionWriter0.write(charArray0);
      filterCollectionWriter0.append('\"');
      filterCollectionWriter0.write("`~V>,`9T");
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write("^6nJ-#Pr", 1613, 208);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[0] = (Writer) stringWriter0;
      StringWriter stringWriter1 = stringWriter0.append('+');
      writerArray0[1] = (Writer) stringWriter1;
      StringWriter stringWriter2 = new StringWriter(3430);
      StringWriter stringWriter3 = stringWriter2.append('+');
      writerArray0[0] = (Writer) stringWriter3;
      stringWriter3.write(0);
      stringWriter3.append('+');
      stringWriter2.flush();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[0];
      filterCollectionWriter0.write("`~V>,`9T");
      filterCollectionWriter0.write(charArray0);
      Writer writer0 = filterCollectionWriter0.append('+');
      assertSame(filterCollectionWriter0, writer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      linkedList0.add((Writer) stringWriter0);
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write("'P6L?IO", (-5047), (-5047));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[0] = (Writer) stringWriter0;
      StringWriter stringWriter1 = stringWriter0.append('+');
      writerArray0[1] = (Writer) stringWriter1;
      StringWriter stringWriter2 = new StringWriter(3430);
      StringWriter stringWriter3 = stringWriter2.append('+');
      writerArray0[2] = (Writer) stringWriter3;
      stringWriter3.write(0);
      stringWriter3.append('+');
      stringWriter2.flush();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[0];
      filterCollectionWriter0.write("`~V>,`9T");
      filterCollectionWriter0.write(charArray0);
      Writer writer0 = filterCollectionWriter0.append('+');
      assertSame(filterCollectionWriter0, writer0);
      
      filterCollectionWriter0.write("`~V>,`9T");
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write("`~V>,`9T", 208, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      linkedList0.addLast(filterCollectionWriter0);
      filterCollectionWriter0.write("", 9, 9);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write("- :b", 8, 8);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'c';
      charArray0[1] = 'i';
      charArray0[2] = 'n';
      charArray0[3] = '1';
      charArray0[4] = '0';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) charBuffer0, (-1257), 2985);
      Writer[] writerArray0 = new Writer[3];
      writerArray0[0] = (Writer) filterCollectionWriter0;
      writerArray0[1] = writer0;
      writerArray0[2] = writer0;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.append((CharSequence) charBuffer0, 0, 0);
      filterCollectionWriter1.close();
      assertNotSame(filterCollectionWriter1, writer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Writer[] writerArray0 = new Writer[2];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[0] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.close();
      filterCollectionWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.close();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Writer[] writerArray0 = new Writer[8];
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) charBuffer0);
      writerArray0[0] = writer0;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(linkedList0);
      writerArray0[1] = (Writer) filterCollectionWriter1;
      FilterCollectionWriter filterCollectionWriter2 = new FilterCollectionWriter(linkedList0);
      writerArray0[2] = (Writer) filterCollectionWriter2;
      FilterCollectionWriter filterCollectionWriter3 = new FilterCollectionWriter(linkedList0);
      filterCollectionWriter3.append((CharSequence) charBuffer0);
      FilterCollectionWriter filterCollectionWriter4 = new FilterCollectionWriter(writerArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(8);
      filterCollectionWriter4.append((CharSequence) charBuffer1, 8, 2147483645);
      FilterCollectionWriter filterCollectionWriter5 = new FilterCollectionWriter(writerArray0);
      Writer writer1 = writer0.append((CharSequence) charBuffer1, 2147483645, 8);
      assertNotSame(writer1, filterCollectionWriter5);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[3] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) null);
      assertSame(filterCollectionWriter0, writer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) "- :b");
      assertSame(writer0, filterCollectionWriter0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[0] = (Writer) stringWriter1;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = 'I';
      charArray0[2] = '0';
      charArray0[3] = 'V';
      charArray0[4] = '0';
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write(charArray0, 0, 4497);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      StringWriter stringWriter0 = new StringWriter();
      linkedList0.add((Writer) stringWriter0);
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write((char[]) null, (-2504), (-2504));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Writer[] writerArray0 = new Writer[8];
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) charBuffer0);
      writerArray0[0] = writer0;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(linkedList0);
      writerArray0[1] = (Writer) filterCollectionWriter1;
      FilterCollectionWriter filterCollectionWriter2 = new FilterCollectionWriter(linkedList0);
      writerArray0[2] = (Writer) filterCollectionWriter2;
      Writer writer1 = filterCollectionWriter2.append((CharSequence) charBuffer0);
      writerArray0[3] = writer1;
      FilterCollectionWriter filterCollectionWriter3 = new FilterCollectionWriter(linkedList0);
      writerArray0[4] = (Writer) filterCollectionWriter3;
      StringWriter stringWriter0 = new StringWriter(8);
      StringWriter stringWriter1 = stringWriter0.append('');
      writerArray0[5] = (Writer) stringWriter1;
      FilterCollectionWriter filterCollectionWriter4 = new FilterCollectionWriter((Collection<Writer>) null);
      writerArray0[6] = (Writer) filterCollectionWriter4;
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      writerArray0[7] = (Writer) stringWriter2;
      FilterCollectionWriter filterCollectionWriter5 = new FilterCollectionWriter(writerArray0);
      // Undeclared exception!
      try { 
        filterCollectionWriter5.write(charArray0, (-1619), (-1619));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Writer[] writerArray0 = new Writer[1];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write((char[]) null, (-1192), (-5026));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      linkedList0.add((Writer) stringWriter0);
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write((char[]) null, 1067, 1067);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Writer[] writerArray0 = new Writer[8];
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) null);
      writerArray0[0] = writer0;
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[1] = (Writer) stringWriter1;
      StringWriter stringWriter2 = new StringWriter(0);
      writerArray0[2] = (Writer) stringWriter2;
      StringWriter stringWriter3 = new StringWriter();
      writerArray0[3] = (Writer) stringWriter3;
      StringWriter stringWriter4 = new StringWriter();
      writerArray0[4] = (Writer) stringWriter4;
      StringWriter stringWriter5 = new StringWriter();
      writerArray0[5] = (Writer) stringWriter5;
      StringWriter stringWriter6 = stringWriter2.append((CharSequence) null);
      writerArray0[6] = (Writer) stringWriter6;
      Writer writer1 = filterCollectionWriter0.append((CharSequence) null);
      writerArray0[7] = writer1;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter1.flush();
      assertNotSame(filterCollectionWriter1, filterCollectionWriter0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Writer[] writerArray0 = new Writer[8];
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      stringWriter0.append((CharSequence) charBuffer0);
      filterCollectionWriter0.flush();
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = new StringWriter();
      stringWriter0.append((CharSequence) stringBuffer0);
      filterCollectionWriter0.append((CharSequence) stringBuffer0);
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter1.flush();
      Writer writer0 = filterCollectionWriter1.append((CharSequence) charBuffer0, 0, 2);
      assertSame(filterCollectionWriter1, writer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[0] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[2] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write((String) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write((-287));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Writer[] writerArray0 = new Writer[2];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[0] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      // Undeclared exception!
      try { 
        filterCollectionWriter0.write((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Writer[] writerArray0 = new Writer[8];
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      CharBuffer.wrap(charArray0);
      StringWriter stringWriter0 = new StringWriter(3430);
      StringWriter stringWriter1 = stringWriter0.append('');
      stringWriter0.write(3430);
      stringWriter1.append('P');
      stringWriter1.flush();
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write("FrEuC");
      filterCollectionWriter1.write(charArray0);
      Writer writer0 = filterCollectionWriter0.append('j');
      assertNotSame(writer0, filterCollectionWriter1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write((char[]) null);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[0] = (Writer) stringWriter0;
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      Writer writer0 = filterCollectionWriter0.append('#');
      writerArray0[1] = writer0;
      Writer writer1 = filterCollectionWriter0.append('#');
      writerArray0[2] = writer1;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[7];
      charArray0[0] = '}';
      charArray0[1] = '#';
      charArray0[2] = '#';
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = '#';
      charArray0[6] = '#';
      filterCollectionWriter1.write(charArray0);
      assertNotSame(filterCollectionWriter1, writer1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.write((String) null);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      filterCollectionWriter0.append((CharSequence) "", 0, 0);
      filterCollectionWriter0.write("", 0, 0);
      filterCollectionWriter0.write(".AQ@6O:`OR6Gvv`");
      filterCollectionWriter0.flush();
      filterCollectionWriter0.append((CharSequence) ".AQ@6O:`OR6Gvv`", (-64), 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'T';
      charArray0[1] = 'B';
      charArray0[2] = 'H';
      charArray0[3] = 'D';
      charArray0[4] = 'G';
      charArray0[5] = 'p';
      charArray0[6] = 'n';
      charArray0[7] = 'J';
      charArray0[8] = '7';
      filterCollectionWriter0.write(charArray0, (-64), 0);
      assertEquals(9, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter((Writer[]) null);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter(0);
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.close();
      filterCollectionWriter0.write("9ji||%&h]0oB[5", 1, 1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'c';
      charArray0[1] = 'i';
      charArray0[2] = 'n';
      charArray0[3] = '1';
      charArray0[4] = '0';
      charArray0[5] = 'I';
      charArray0[6] = 'u';
      filterCollectionWriter0.write(charArray0, 0, 0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) null, (-1197), 1414);
      filterCollectionWriter0.close();
      assertSame(filterCollectionWriter0, writer0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Writer[] writerArray0 = new Writer[0];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.close();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) "", 1159, 1159);
      assertSame(writer0, filterCollectionWriter0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[0] = (Writer) stringWriter1;
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.append((CharSequence) null);
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(linkedList0);
      StringWriter stringWriter2 = new StringWriter(0);
      StringWriter stringWriter3 = stringWriter0.append('M');
      FilterCollectionWriter filterCollectionWriter2 = new FilterCollectionWriter(linkedList0);
      stringWriter3.close();
      stringWriter3.close();
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) null, 0, 0);
      stringWriter4.append((CharSequence) null);
      FilterCollectionWriter filterCollectionWriter3 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'M';
      charArray0[1] = '8';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      filterCollectionWriter2.write(charArray0, 1, 8);
      filterCollectionWriter2.write(0);
      Writer writer0 = filterCollectionWriter0.append('M');
      assertNotSame(writer0, filterCollectionWriter1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Writer[] writerArray0 = new Writer[0];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) "- :b");
      assertSame(filterCollectionWriter0, writer0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Writer[] writerArray0 = new Writer[0];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      String string0 = "5KfG";
      int int0 = 573;
      filterCollectionWriter0.append((CharSequence) "5KfG");
      char[] charArray0 = new char[4];
      charArray0[0] = 'm';
      charArray0[1] = 'G';
      charArray0[2] = 'f';
      charArray0[3] = '}';
      int int1 = 1362;
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 573, 1362);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter((Collection<Writer>) null);
      filterCollectionWriter0.write("net.bytebuddy.build.HashCodeAndEqualsPlugin", 1123, 1123);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[0] = (Writer) stringWriter1;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = 'I';
      charArray0[2] = '0';
      charArray0[3] = 'V';
      charArray0[4] = '0';
      stringWriter0.append('0');
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter1.write((-5041));
      assertNotSame(filterCollectionWriter1, filterCollectionWriter0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = '4';
      charArray0[1] = '.';
      charArray0[2] = '#';
      charArray0[3] = '#';
      charArray0[4] = '.';
      charArray0[5] = '(';
      charArray0[6] = '.';
      charArray0[7] = '.';
      filterCollectionWriter0.write(charArray0, 0, 1);
      filterCollectionWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      filterCollectionWriter0.write(719);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      filterCollectionWriter0.write((char[]) null, 1067, 1067);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Writer[] writerArray0 = new Writer[0];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      char[] charArray0 = new char[7];
      charArray0[0] = '.';
      charArray0[1] = 'H';
      charArray0[2] = '\'';
      charArray0[3] = '+';
      charArray0[4] = '6';
      charArray0[5] = '3';
      charArray0[6] = 'H';
      int int0 = (-3707);
      filterCollectionWriter0.write(charArray0, 0, (-3707));
      int int1 = (-3681);
      filterCollectionWriter0.write((-3681));
      CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[7];
      charArray1[0] = '+';
      charArray1[1] = '.';
      charArray1[2] = ' ';
      charArray1[3] = 'H';
      charArray1[4] = 'H';
      charArray1[5] = 'H';
      charArray1[6] = 'H';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray1, (-3681), (-364));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter((Writer[]) null);
      filterCollectionWriter0.append('>');
      filterCollectionWriter0.write("", 0, (-678));
      filterCollectionWriter0.append('>');
      filterCollectionWriter0.flush();
      Writer writer0 = filterCollectionWriter0.append((CharSequence) "", 4737, 0);
      assertSame(filterCollectionWriter0, writer0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      Writer writer0 = filterCollectionWriter0.append('8');
      assertSame(writer0, filterCollectionWriter0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter((Collection<Writer>) null);
      writerArray0[0] = (Writer) filterCollectionWriter0;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      Writer writer0 = filterCollectionWriter0.append((CharSequence) stringBuffer0, 3138, 3138);
      writerArray0[1] = writer0;
      StringWriter stringWriter1 = stringWriter0.append('E');
      writerArray0[2] = (Writer) stringWriter1;
      Writer writer1 = filterCollectionWriter0.append('E');
      writerArray0[3] = writer1;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      Writer writer2 = filterCollectionWriter1.append('(');
      assertNotSame(writer2, filterCollectionWriter0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Writer[] writerArray0 = new Writer[8];
      StringWriter stringWriter0 = new StringWriter(1745);
      writerArray0[0] = (Writer) stringWriter0;
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[1] = (Writer) stringWriter1;
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      Writer writer0 = filterCollectionWriter0.append('\'');
      writerArray0[2] = writer0;
      StringWriter stringWriter2 = new StringWriter(1745);
      writerArray0[3] = (Writer) stringWriter2;
      StringWriter stringWriter3 = stringWriter2.append('');
      writerArray0[4] = (Writer) stringWriter3;
      StringWriter stringWriter4 = new StringWriter(0);
      writerArray0[5] = (Writer) stringWriter4;
      StringWriter stringWriter5 = stringWriter0.append('');
      writerArray0[6] = (Writer) stringWriter5;
      Writer writer1 = filterCollectionWriter0.append('m');
      writerArray0[7] = writer1;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      // Undeclared exception!
      try { 
        filterCollectionWriter1.append((CharSequence) null, 0, (-3801));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Writer[] writerArray0 = new Writer[3];
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      writerArray0[0] = (Writer) stringWriter1;
      LinkedList<Writer> linkedList0 = new LinkedList<Writer>();
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) null);
      writerArray0[1] = writer0;
      Writer writer1 = filterCollectionWriter0.append((CharSequence) null, 2985, 2985);
      writerArray0[2] = writer1;
      FilterCollectionWriter filterCollectionWriter1 = new FilterCollectionWriter(writerArray0);
      // Undeclared exception!
      try { 
        filterCollectionWriter1.append((CharSequence) null, 2985, (-3892));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      StringWriter stringWriter0 = new StringWriter();
      writerArray0[3] = (Writer) stringWriter0;
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      // Undeclared exception!
      try { 
        filterCollectionWriter0.append((CharSequence) null, 1159, 1159);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      Writer writer0 = filterCollectionWriter0.append((CharSequence) "", 1159, 1159);
      assertSame(writer0, filterCollectionWriter0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Writer[] writerArray0 = new Writer[4];
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(writerArray0);
      filterCollectionWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LinkedList<StringWriter> linkedList0 = new LinkedList<StringWriter>();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('0');
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = '0';
      StringWriter[] stringWriterArray0 = new StringWriter[0];
      linkedList0.toArray(stringWriterArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringWriter0.append((CharSequence) charBuffer0);
      stringWriter1.write(charArray0, 0, 0);
      linkedList0.add(stringWriter1);
      LinkedList<Writer> linkedList1 = new LinkedList<Writer>(linkedList0);
      FilterCollectionWriter filterCollectionWriter0 = new FilterCollectionWriter(linkedList1);
  }
}
