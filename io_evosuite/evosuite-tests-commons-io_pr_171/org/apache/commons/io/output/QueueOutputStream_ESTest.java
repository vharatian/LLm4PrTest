/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 01:19:28 GMT 2025
 */

package org.apache.commons.io.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingDeque;
import org.apache.commons.io.input.QueueInputStream;
import org.apache.commons.io.output.QueueOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class QueueOutputStream_ESTest extends QueueOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedBlockingDeque<Integer> linkedBlockingDeque0 = new LinkedBlockingDeque<Integer>();
      QueueOutputStream queueOutputStream0 = new QueueOutputStream(linkedBlockingDeque0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QueueOutputStream queueOutputStream0 = new QueueOutputStream();
      queueOutputStream0.write(976);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QueueOutputStream queueOutputStream0 = null;
      try {
        queueOutputStream0 = new QueueOutputStream((BlockingQueue<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // queue is required
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QueueOutputStream queueOutputStream0 = new QueueOutputStream();
      QueueInputStream queueInputStream0 = queueOutputStream0.newQueueInputStream();
      assertNotNull(queueInputStream0);
  }
}
