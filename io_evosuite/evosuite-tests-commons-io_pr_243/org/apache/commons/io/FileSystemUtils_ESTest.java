/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 21:49:07 GMT 2025
 */

package org.apache.commons.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.time.Duration;
import org.apache.commons.io.FileSystemUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FileSystemUtils_ESTest extends FileSystemUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.parseBytes("~M", "sFE");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Command line 'df' did not return numeric data as expected for path 'sFE'- check path is valid
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.parseDir("7#k[@db", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Command line 'dir /-c' did not return valid info for path ''
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseDir("G,0", "G,0");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Duration duration0 = Duration.ofDays((-2028L));
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.freeSpaceWindows(" timeout=", duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseBytes("0", "0");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseBytes("7", "7");
      assertEquals(7L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.performCommand((String[]) null, (-789), (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ZERO;
      try { 
        fileSystemUtils0.performCommand((String[]) null, 35, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.parseDir((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      String[] stringArray0 = new String[0];
      try { 
        fileSystemUtils0.openProcess(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceWindows((String) null, (Duration) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceUnix((String) null, true, true, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceUnix("7", true, true, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ZERO;
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceUnix("", true, true, duration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ZERO;
      try { 
        fileSystemUtils0.freeSpaceUnix("/]oR->4", true, true, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS("{", 1, false, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb("q?I9a'}Z3Z5SD", 0L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb("n&Q3)0P,M");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpace("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpaceKb("", 4L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseDir("[p4q .8349D", (String) null);
      assertEquals(8349L, long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.parseDir("a", "a");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Command line 'dir /-c' did not return valid info for path 'a'
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.freeSpaceWindows("\"", duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceWindows("", (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ZERO;
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS(":L+G#*", 1, true, duration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // :L+G#*
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.freeSpaceOS("n&Q3)0P", 1, true, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS("", (-21), false, (Duration) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Exception caught when determining operating system
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.freeSpaceOS("7", 3, true, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS((String) null, 34, false, duration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be null
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpace("a");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpaceKb("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ofMinutes(0);
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS("p_0WGL-X{=tYV129B#", 0, false, duration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unsupported operating system
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb((-308L));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }
}
