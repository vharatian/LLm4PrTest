/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 22:05:07 GMT 2025
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.nio.channels.ClosedChannelException;
import java.nio.file.FileSystemException;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import org.apache.commons.io.input.BufferedFileChannelInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BufferedFileChannelInputStream_ESTest extends BufferedFileChannelInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      long long0 = bufferedFileChannelInputStream0.skip(4096L);
      assertEquals(4096L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      long long0 = bufferedFileChannelInputStream0.skip(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      byte[] byteArray0 = new byte[7];
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, (int) (byte)0, 1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, (int) (byte)111, 255);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 1520);
      bufferedFileChannelInputStream0.close();
      try { 
        bufferedFileChannelInputStream0.skip(1520);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      bufferedFileChannelInputStream0.close();
      byte[] byteArray0 = new byte[0];
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 0, 0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read((byte[]) null, 1053, 1053);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, 0);
      // Undeclared exception!
      bufferedFileChannelInputStream0.read();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      bufferedFileChannelInputStream0.close();
      try { 
        bufferedFileChannelInputStream0.read();
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      try { 
        bufferedFileChannelInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.file.DeletingPathVisitor", "org.apache.commons.io.file.DeletingPathVisitor");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, 872);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((Path) null, 2146562376);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, (-1399));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -1399
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("S)kb");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("7&/[tOWi-\"a");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, (-973));
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      File file0 = MockFile.createTempFile("Range source annotation should not be repeated for @ParameterizedTest. @ParameterizedTest should have exactly one argument source.", "Range source annotation should not be repeated for @ParameterizedTest. @ParameterizedTest should have exactly one argument source.");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(file0, 2);
        fail("Expecting exception: FileSystemException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((File) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, (-959));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -959
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("x<?Ehl");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      long long0 = bufferedFileChannelInputStream0.skip(5413L);
      assertEquals(4096L, long0);
      
      long long1 = bufferedFileChannelInputStream0.skip(5413L);
      assertEquals(0L, long1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      long long0 = bufferedFileChannelInputStream0.skip((-3130L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 1691);
      long long0 = bufferedFileChannelInputStream0.skip(4096L);
      assertEquals(4096L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 2067475462, 2067475462);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 918, (int) (byte) (-34));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read((byte[]) null, (-2145489697), (-2145489697));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      int int0 = bufferedFileChannelInputStream0.available();
      assertEquals(0, int0);
  }
}
