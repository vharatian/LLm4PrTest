/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 21:22:58 GMT 2025
 */

package org.apache.commons.io.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.util.function.Supplier;
import org.apache.commons.io.output.BrokenOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BrokenOutputStream_ESTest extends BrokenOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BrokenOutputStream brokenOutputStream0 = new BrokenOutputStream((Supplier<IOException>) null);
      // Undeclared exception!
      try { 
        brokenOutputStream0.write(1219);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.BrokenOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BrokenOutputStream brokenOutputStream0 = new BrokenOutputStream((Supplier<IOException>) null);
      // Undeclared exception!
      try { 
        brokenOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.BrokenOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BrokenOutputStream brokenOutputStream0 = new BrokenOutputStream();
      try { 
        brokenOutputStream0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Broken output stream
         //
         verifyException("org.apache.commons.io.output.BrokenOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BrokenOutputStream brokenOutputStream0 = new BrokenOutputStream();
      try { 
        brokenOutputStream0.flush();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Broken output stream
         //
         verifyException("org.apache.commons.io.output.BrokenOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BrokenOutputStream brokenOutputStream0 = new BrokenOutputStream();
      try { 
        brokenOutputStream0.write(841);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Broken output stream
         //
         verifyException("org.apache.commons.io.output.BrokenOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BrokenOutputStream brokenOutputStream0 = new BrokenOutputStream((IOException) null);
      // Undeclared exception!
      try { 
        brokenOutputStream0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.output.BrokenOutputStream", e);
      }
  }
}
