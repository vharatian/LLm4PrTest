/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:52:00 GMT 2025
 */

package org.apache.commons.io.filefilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.file.FileVisitResult;
import java.nio.file.Path;
import java.nio.file.attribute.BasicFileAttributes;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.apache.commons.io.IOCase;
import org.apache.commons.io.filefilter.NameFileFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class NameFileFilter_ESTest extends NameFileFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[7];
      NameFileFilter nameFileFilter0 = new NameFileFilter(stringArray0);
      String string0 = nameFileFilter0.toString();
      assertEquals("NameFileFilter(null,null,null,null,null,null,null)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedHashSet0, locale_FilteringMode0);
      IOCase iOCase0 = IOCase.SENSITIVE;
      NameFileFilter nameFileFilter0 = new NameFileFilter(list0, iOCase0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      NameFileFilter nameFileFilter0 = new NameFileFilter("X0Ni5", iOCase0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "W";
      stringArray0[1] = "";
      stringArray0[2] = "dkCsswByBudsud8j(";
      stringArray0[3] = "pYw{lE<E";
      NameFileFilter nameFileFilter0 = new NameFileFilter(stringArray0);
      MockFile mockFile0 = new MockFile("M>rc;:/uf|8<:,N2 ", "pYw{lE<E");
      Path path0 = mockFile0.toPath();
      BasicFileAttributes basicFileAttributes0 = mock(BasicFileAttributes.class, new ViolatedAssumptionAnswer());
      FileVisitResult fileVisitResult0 = nameFileFilter0.accept(path0, basicFileAttributes0);
      assertEquals(FileVisitResult.CONTINUE, fileVisitResult0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "W";
      stringArray0[1] = "";
      stringArray0[2] = "dkCsswByBudsud8j(";
      stringArray0[3] = "pYw{lE<E";
      stringArray0[4] = "";
      stringArray0[5] = "getContext";
      stringArray0[6] = "";
      NameFileFilter nameFileFilter0 = new NameFileFilter(stringArray0);
      MockFile mockFile0 = new MockFile("M>rc;:/uf|8<:,N2 ", "pYw{lE<E");
      boolean boolean0 = nameFileFilter0.accept((File) mockFile0, "@CartesianTest not found.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "W";
      stringArray0[1] = "";
      stringArray0[2] = "dkCsswByBudsud8j(";
      stringArray0[3] = "pYw{lE<E";
      NameFileFilter nameFileFilter0 = new NameFileFilter(stringArray0);
      MockFile mockFile0 = new MockFile("M>rc;:/uf|8<:,N2 ", "pYw{lE<E");
      boolean boolean0 = nameFileFilter0.accept((File) mockFile0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "Qr6u;FS4n";
      stringArray0[2] = "l4-/!Z&nGSVH*osw";
      stringArray0[3] = "zZrCgoF2";
      stringArray0[4] = "ZKG=5";
      stringArray0[5] = "'Yhi)i*nDAt,,k=q^QX";
      stringArray0[6] = "";
      stringArray0[7] = "org.apache.commons.io.file.SimplePathVisitor";
      IOCase iOCase0 = IOCase.SYSTEM;
      NameFileFilter nameFileFilter0 = new NameFileFilter(stringArray0, iOCase0);
      MockFile mockFile0 = new MockFile("Nv1)y'B7M1i", "jLqm_7nQM");
      boolean boolean0 = nameFileFilter0.accept((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[1];
      NameFileFilter nameFileFilter0 = new NameFileFilter(stringArray0);
      MockFile mockFile0 = new MockFile("N0{!>1(u]NU|D<_}");
      // Undeclared exception!
      try { 
        nameFileFilter0.accept((File) mockFile0, "N0{!>1(u]NU|D<_}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // str2
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      NameFileFilter nameFileFilter0 = null;
      try {
        nameFileFilter0 = new NameFileFilter((String[]) null, iOCase0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // names
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      NameFileFilter nameFileFilter0 = null;
      try {
        nameFileFilter0 = new NameFileFilter((List<String>) null, iOCase0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // names
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NameFileFilter nameFileFilter0 = null;
      try {
        nameFileFilter0 = new NameFileFilter((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // names
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      NameFileFilter nameFileFilter0 = null;
      try {
        nameFileFilter0 = new NameFileFilter((String) null, iOCase0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NameFileFilter nameFileFilter0 = null;
      try {
        nameFileFilter0 = new NameFileFilter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      NameFileFilter nameFileFilter0 = new NameFileFilter(linkedList0);
      String string0 = nameFileFilter0.toString();
      assertEquals("NameFileFilter()", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NameFileFilter nameFileFilter0 = new NameFileFilter("@G6IILdjYb8+Ce");
      MockFile mockFile0 = new MockFile("@G6IILdjYb8+Ce");
      boolean boolean0 = nameFileFilter0.accept((File) mockFile0, "@G6IILdjYb8+Ce");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      NameFileFilter nameFileFilter0 = new NameFileFilter(linkedList0);
      // Undeclared exception!
      try { 
        nameFileFilter0.accept((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.filefilter.NameFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      NameFileFilter nameFileFilter0 = new NameFileFilter(linkedList0);
      // Undeclared exception!
      try { 
        nameFileFilter0.accept((Path) null, (BasicFileAttributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.filefilter.NameFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NameFileFilter nameFileFilter0 = null;
      try {
        nameFileFilter0 = new NameFileFilter((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // names
         //
         verifyException("java.util.Objects", e);
      }
  }
}
