/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:56:15 GMT 2025
 */

package org.apache.commons.io.filefilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.nio.file.FileVisitResult;
import java.nio.file.Path;
import java.nio.file.attribute.BasicFileAttributes;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.io.IOCase;
import org.apache.commons.io.filefilter.SuffixFileFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SuffixFileFilter_ESTest extends SuffixFileFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[7];
      IOCase iOCase0 = IOCase.INSENSITIVE;
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(stringArray0, iOCase0);
      String string0 = suffixFileFilter0.toString();
      assertEquals("SuffixFileFilter(null,null,null,null,null,null,null)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter("", iOCase0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter("$$,x@V~l^");
      File file0 = MockFile.createTempFile("Method `", "NQ");
      Path path0 = file0.toPath();
      BasicFileAttributes basicFileAttributes0 = mock(BasicFileAttributes.class, new ViolatedAssumptionAnswer());
      FileVisitResult fileVisitResult0 = suffixFileFilter0.accept(path0, basicFileAttributes0);
      assertEquals(FileVisitResult.TERMINATE, fileVisitResult0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[3] = "";
      IOCase iOCase0 = IOCase.INSENSITIVE;
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(stringArray0, iOCase0);
      MockFile mockFile0 = new MockFile("", "T5B4)G*^) ni$z}");
      boolean boolean0 = suffixFileFilter0.accept((File) mockFile0, "T5B4)G*^) ni$z}");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      IOCase iOCase0 = IOCase.SENSITIVE;
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(linkedList0, iOCase0);
      MockFile mockFile0 = new MockFile("");
      boolean boolean0 = suffixFileFilter0.accept((File) mockFile0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(linkedList0);
      // Undeclared exception!
      try { 
        suffixFileFilter0.accept((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.filefilter.SuffixFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter((String[]) null, iOCase0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // suffixes
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = linkedList0.subList(0, 0);
      IOCase iOCase0 = IOCase.SYSTEM;
      linkedList0.add("");
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter(list0, iOCase0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter((List<String>) null, iOCase0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // suffixes
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = linkedList0.subList(0, 0);
      linkedList0.add("");
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // suffixes
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter((String) null, iOCase0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // suffix
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // suffix
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SuffixFileFilter suffixFileFilter0 = null;
      try {
        suffixFileFilter0 = new SuffixFileFilter((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // suffixes
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(linkedList0);
      File file0 = MockFile.createTempFile("s>uffixes", "s>uffixes");
      boolean boolean0 = suffixFileFilter0.accept(file0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(linkedList0);
      // Undeclared exception!
      try { 
        suffixFileFilter0.accept((Path) null, (BasicFileAttributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.filefilter.SuffixFileFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      SuffixFileFilter suffixFileFilter0 = new SuffixFileFilter(linkedList0);
      boolean boolean0 = suffixFileFilter0.accept((File) null, "&r^?|_$[$'qP;n ?");
      assertFalse(boolean0);
  }
}
