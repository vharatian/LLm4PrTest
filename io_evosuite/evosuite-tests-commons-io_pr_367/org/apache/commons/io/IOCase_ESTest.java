/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:21:27 GMT 2025
 */

package org.apache.commons.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.io.IOCase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IOCase_ESTest extends IOCase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkIndexOf("VMyxAw", (-16), "VMyxAw");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEquals("#e=V,w_F~<*;at", "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith("9fWyo", "HEim_N76<5gmSR(fp");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      IOCase iOCase1 = IOCase.SENSITIVE;
      IOCase iOCase2 = IOCase.value(iOCase1, iOCase0);
      assertEquals(IOCase.SENSITIVE, iOCase2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      IOCase iOCase1 = IOCase.value((IOCase) null, iOCase0);
      assertEquals(IOCase.SYSTEM, iOCase1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOCase[] iOCaseArray0 = IOCase.values();
      assertEquals(3, iOCaseArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOCase iOCase0 = IOCase.valueOf("SYSTEM");
      assertEquals("System", iOCase0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOCase iOCase0 = IOCase.valueOf("INSENSITIVE");
      assertEquals("Insensitive", iOCase0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      IOCase iOCase1 = IOCase.value(iOCase0, iOCase0);
      assertEquals(IOCase.SYSTEM, iOCase1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.isCaseSensitive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOCase iOCase0 = IOCase.forName("Sensitive");
      assertTrue(iOCase0.isCaseSensitive());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOCase iOCase0 = IOCase.forName("Insensitive");
      assertEquals(IOCase.INSENSITIVE, iOCase0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkRegionMatches("", 1219, "str1");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      IOCase iOCase1 = IOCase.value(iOCase0, iOCase0);
      assertEquals(IOCase.INSENSITIVE, iOCase1);
      
      int int0 = iOCase1.checkIndexOf(">~8kv'~K8)Q`XC", 1, "");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      int int0 = iOCase0.checkCompareTo("Mh6", "org.apache.commons.io.IOCase");
      assertEquals((-34), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      // Undeclared exception!
      iOCase0.checkIndexOf("VMyxAw", (-16519105), "VMyxAw");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkIndexOf("Sensitive", 1240, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.IOCase", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkEquals((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // str1
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      // Undeclared exception!
      try { 
        iOCase0.checkCompareTo((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // str1
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkRegionMatches("fp", 0, "fp");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkRegionMatches("{t2P{WW", 0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.isCaseSensitive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      String string0 = iOCase0.getName();
      assertEquals("Sensitive", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkStartsWith("x", "x");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkStartsWith("sbc.~{vmyxaw+s74]&", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkStartsWith("SbCs ~{VMyxAw+S74]&", "Null character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkStartsWith((String) null, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkIndexOf("o$7rG>L1f", 0, "c");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      int int0 = iOCase0.checkIndexOf("LJ0Z'>8(:W%<=NmLw", 0, "LJ0Z'>8(:W%<=NmLw");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      int int0 = iOCase0.checkIndexOf("VMyxAw", 690, "VMyxAw");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkEquals("cha", ",e6m.>y60w_");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEquals("SENSITIVE", "SENSITIVE");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith("SENSITIVE", "SENSITIVE");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith("a}1}\"zc", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith((String) null, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      int int0 = iOCase0.checkCompareTo("ZVKi6", "ZVKi6");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkCompareTo("str2", "str2");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      IOCase iOCase1 = IOCase.value(iOCase0, iOCase0);
      assertEquals(IOCase.INSENSITIVE, iOCase1);
      
      int int0 = iOCase1.checkCompareTo("System", "");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOCase.value((IOCase) null, (IOCase) null);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = IOCase.isCaseSensitive(iOCase0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = IOCase.isCaseSensitive((IOCase) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOCase.forName("2Z(RMI/ny6#B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid IOCase name: 2Z(RMI/ny6#B
         //
         verifyException("org.apache.commons.io.IOCase", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      String string0 = iOCase0.toString();
      assertEquals("System", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = IOCase.isCaseSensitive(iOCase0);
      assertTrue(boolean0);
  }
}
