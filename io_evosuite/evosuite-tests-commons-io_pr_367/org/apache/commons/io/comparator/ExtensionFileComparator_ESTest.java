/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:33:54 GMT 2025
 */

package org.apache.commons.io.comparator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.apache.commons.io.IOCase;
import org.apache.commons.io.comparator.ExtensionFileComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ExtensionFileComparator_ESTest extends ExtensionFileComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      ExtensionFileComparator extensionFileComparator0 = new ExtensionFileComparator(iOCase0);
      MockFile mockFile0 = new MockFile("#;'z#=", "#;'z#=");
      int int0 = extensionFileComparator0.compare((File) mockFile0, (File) mockFile0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      ExtensionFileComparator extensionFileComparator0 = new ExtensionFileComparator(iOCase0);
      MockFile mockFile0 = new MockFile("#;'z#=", "#;'z#=");
      MockFile mockFile1 = new MockFile(mockFile0, ".T&");
      int int0 = extensionFileComparator0.compare((File) mockFile1, (File) mockFile0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      ExtensionFileComparator extensionFileComparator0 = new ExtensionFileComparator(iOCase0);
      MockFile mockFile0 = new MockFile("Y,(tbyzTndhy=3gW'a(", "[ioCase=");
      File file0 = MockFile.createTempFile("Y,(tbyzTndhy=3gW'a(", "k.;LfWbYikV6HN5]8!", (File) mockFile0);
      int int0 = extensionFileComparator0.compare((File) mockFile0, file0);
      assertEquals((-16), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      ExtensionFileComparator extensionFileComparator0 = new ExtensionFileComparator(iOCase0);
      String string0 = extensionFileComparator0.toString();
      assertEquals("ExtensionFileComparator[ioCase=Insensitive]", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExtensionFileComparator extensionFileComparator0 = new ExtensionFileComparator();
      // Undeclared exception!
      try { 
        extensionFileComparator0.compare((File) null, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.comparator.ExtensionFileComparator", e);
      }
  }
}
