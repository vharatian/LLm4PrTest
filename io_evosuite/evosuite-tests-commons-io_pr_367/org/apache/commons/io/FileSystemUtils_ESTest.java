/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:10:20 GMT 2025
 */

package org.apache.commons.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.time.Duration;
import org.apache.commons.io.FileSystemUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FileSystemUtils_ESTest extends FileSystemUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.parseDir("1", "4</VdKutx<");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Command line 'dir /-c' did not return valid info for path '4</VdKutx<'
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseDir("TMRA`0JK,dT/jO%5", "d");
      assertEquals(5L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.parseBytes("clsL/*0", "G%3 ^qYJ{O]HH?");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Command line 'df' did not return numeric data as expected for path 'G%3 ^qYJ{O]HH?'- check path is valid
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ofMinutes(0);
      try { 
        fileSystemUtils0.freeSpaceWindows("!]f^", duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseBytes("0", "0");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseBytes("1", "1");
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.performCommand((String[]) null, 34, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ZERO;
      try { 
        fileSystemUtils0.performCommand((String[]) null, 2339, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.parseDir((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      String[] stringArray0 = new String[0];
      try { 
        fileSystemUtils0.openProcess(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ZERO;
      try { 
        fileSystemUtils0.freeSpaceWindows("' did not return data as expected for path '", duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceUnix((String) null, false, false, duration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceUnix("3YrDS;.8)06", true, true, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceUnix("", true, true, (Duration) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.freeSpaceUnix("B+|.W7", false, false, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ofHours((-2188));
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS((String) null, (-2188), false, duration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpaceKb((String) null, 32L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb("1Tq^?5A", 877L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpaceKb((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpaceKb("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpace((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpace("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileSystemUtils.freeSpaceKb("", 3L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb(6L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseDir("F.,2`s-<H+Zd}*;[%u", "F.,2`s-<H+Zd}*;[%u");
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.parseDir("", "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Command line 'dir /-c' did not return valid info for path ''
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      long long0 = fileSystemUtils0.parseDir("Q,R3HFh,-0 oY-xD", "Q,R3HFh,-0 oY-xD");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceWindows("\"", (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceWindows("", (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Duration duration0 = Duration.ZERO;
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceWindows(":tfAp c", duration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // :tfAp c
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS("", 2, false, (Duration) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Path must not be empty
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Duration duration0 = Duration.ofDays(2045L);
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      try { 
        fileSystemUtils0.freeSpaceOS("9l|", 1, true, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS("", 46, false, (Duration) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Exception caught when determining operating system
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS("Classpath resource [", 3, false, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.ThreadMonitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      Duration duration0 = Duration.ofNanos(2045L);
      try { 
        fileSystemUtils0.freeSpaceOS("]^6=D)WLqQ{vm-]/][u", 1, false, duration0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpace("%`q%v|4");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb("Q,R3HFh,-0 oY-xD");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemUtils fileSystemUtils0 = new FileSystemUtils();
      // Undeclared exception!
      try { 
        fileSystemUtils0.freeSpaceOS(",p]<yk4ONB#`Y!fZ#Z", 0, true, (Duration) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unsupported operating system
         //
         verifyException("org.apache.commons.io.FileSystemUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      try { 
        FileSystemUtils.freeSpaceKb();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot start processes in a unit test
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntime", e);
      }
  }
}
