/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 01:43:20 GMT 2025
 */

package org.apache.commons.io.comparator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.util.Comparator;
import org.apache.commons.io.comparator.SizeFileComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SizeFileComparator_ESTest extends SizeFileComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SizeFileComparator sizeFileComparator0 = new SizeFileComparator();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Tr)");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFile mockFile0 = new MockFile("Tr)");
      int int0 = sizeFileComparator0.compare((File) mockFile0, (File) mockFile0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comparator<File> comparator0 = SizeFileComparator.SIZE_SUMDIR_COMPARATOR;
      MockFile mockFile0 = new MockFile((File) null, "");
      MockFile mockFile1 = new MockFile((File) null, "");
      int int0 = ((SizeFileComparator) comparator0).compare((File) mockFile1, (File) mockFile0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "");
      SizeFileComparator sizeFileComparator0 = new SizeFileComparator();
      // Undeclared exception!
      try { 
        sizeFileComparator0.compare((File) mockFile0, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.comparator.SizeFileComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("SizeFileComparator[sumDirectoryContents=false]/SizeFileComparator[sumDirectoryContents=false]");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SizeFileComparator sizeFileComparator0 = new SizeFileComparator();
      MockFile mockFile0 = new MockFile("SizeFileComparator[sumDirectoryContents=false]", "SizeFileComparator[sumDirectoryContents=false]");
      File file0 = MockFile.createTempFile("SizeFileComparator[sumDirectoryContents=false]", "4");
      int int0 = sizeFileComparator0.compare((File) mockFile0, file0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SizeFileComparator sizeFileComparator0 = new SizeFileComparator();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("SizeFileComparator[sumDirectoryContents=false]/SizeFileComparator[sumDirectoryContents=false]0SizeFileComparator[sumDirectoryContents=false]");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("SizeFileComparator[sumDirectoryContents=false]");
      File file0 = MockFile.createTempFile("SizeFileComparator[sumDirectoryContents=false]", "SizeFileComparator[sumDirectoryContents=false]", (File) mockFile0);
      int int0 = sizeFileComparator0.compare((File) mockFile0, file0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SizeFileComparator sizeFileComparator0 = new SizeFileComparator();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("SizeFileComparator[sumDirectoryContents=false]/SizeFileComparator[sumDirectoryContents=false]0SizeFileComparator[sumDirectoryContents=false]");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("SizeFileComparator[sumDirectoryContents=false]");
      int int0 = sizeFileComparator0.compare((File) mockFile0, (File) mockFile0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SizeFileComparator sizeFileComparator0 = new SizeFileComparator();
      String string0 = sizeFileComparator0.toString();
      assertEquals("SizeFileComparator[sumDirectoryContents=false]", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SizeFileComparator sizeFileComparator0 = new SizeFileComparator(true);
  }
}
