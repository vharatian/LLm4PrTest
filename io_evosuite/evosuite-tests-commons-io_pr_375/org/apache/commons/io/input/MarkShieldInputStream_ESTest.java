/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 18:55:15 GMT 2025
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import org.apache.commons.io.input.MarkShieldInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MarkShieldInputStream_ESTest extends MarkShieldInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MarkShieldInputStream markShieldInputStream0 = new MarkShieldInputStream(byteArrayInputStream0);
      boolean boolean0 = markShieldInputStream0.markSupported();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MarkShieldInputStream markShieldInputStream0 = new MarkShieldInputStream(byteArrayInputStream0);
      markShieldInputStream0.mark(10);
      assertFalse(markShieldInputStream0.markSupported());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MarkShieldInputStream markShieldInputStream0 = new MarkShieldInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        markShieldInputStream0.reset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // mark/reset not supported
         //
         verifyException("org.apache.commons.io.input.UnsupportedOperationExceptions", e);
      }
  }
}
