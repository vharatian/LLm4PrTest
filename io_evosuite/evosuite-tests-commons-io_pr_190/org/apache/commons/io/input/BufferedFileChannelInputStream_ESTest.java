/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 23:50:49 GMT 2025
 */

package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.nio.channels.ClosedChannelException;
import java.nio.file.FileSystemException;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import org.apache.commons.io.input.BufferedFileChannelInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BufferedFileChannelInputStream_ESTest extends BufferedFileChannelInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("/", "/");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      long long0 = bufferedFileChannelInputStream0.skip(4096L);
      assertEquals(4096L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      long long0 = bufferedFileChannelInputStream0.skip(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[17];
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 3, 3);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      byte[] byteArray0 = new byte[8];
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      try { 
        bufferedFileChannelInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, 255);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      bufferedFileChannelInputStream0.close();
      try { 
        bufferedFileChannelInputStream0.skip(93L);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      byte[] byteArray0 = new byte[0];
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 0);
      // Undeclared exception!
      bufferedFileChannelInputStream0.read(byteArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 0);
      // Undeclared exception!
      bufferedFileChannelInputStream0.read();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      bufferedFileChannelInputStream0.close();
      try { 
        bufferedFileChannelInputStream0.read();
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      try { 
        bufferedFileChannelInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("o", "o");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, 2147076387);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((Path) null, (-2058005161));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0, (-1527));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -1527
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("egR@k\u0001KQQ)p!'", "egR@k\u0001KQQ)p!'");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((Path) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // path
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("h~0xC.&");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, 425);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      File file0 = MockFile.createTempFile("@StdIo defined no input, so System.in is still in place and no StdIn parameter can be provided. If you want to define empty input, use `@StdIo(\"\")`.", "@StdIo defined no input, so System.in is still in place and no StdIn parameter can be provided. If you want to define empty input, use `@StdIo(\"\")`.");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(file0, 2642);
        fail("Expecting exception: FileSystemException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((File) null, 425);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0, (-1540361492));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative capacity: -1540361492
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      File file0 = MockFile.createTempFile("net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound$DefaultArgument", "net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$DelegationProcessor$Handler$Unbound$DefaultArgument");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(file0);
        fail("Expecting exception: FileSystemException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = null;
      try {
        bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      long long0 = bufferedFileChannelInputStream0.skip(5744L);
      assertEquals(4096L, long0);
      
      long long1 = bufferedFileChannelInputStream0.skip(3092L);
      assertEquals(0L, long1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      long long0 = bufferedFileChannelInputStream0.skip((-2944L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      long long0 = bufferedFileChannelInputStream0.skip(93L);
      assertEquals(93L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 6, 6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 2034694062, 2034694062);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read((byte[]) null, (-1035), (-1035));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(mockFile0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 1034, (-1807));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.io.input.BufferedFileChannelInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      bufferedFileChannelInputStream0.close();
      byte[] byteArray0 = new byte[0];
      try { 
        bufferedFileChannelInputStream0.read(byteArray0, 0, 0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(ClosedChannelException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Path path0 = mockFile0.toPath();
      BufferedFileChannelInputStream bufferedFileChannelInputStream0 = new BufferedFileChannelInputStream(path0);
      int int0 = bufferedFileChannelInputStream0.available();
      assertEquals(0, int0);
  }
}
