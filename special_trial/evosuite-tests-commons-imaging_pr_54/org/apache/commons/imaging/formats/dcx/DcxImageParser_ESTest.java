/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 02:50:17 GMT 2025
 */

package org.apache.commons.imaging.formats.dcx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.DebugGraphics;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.ImageInfo;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.dcx.DcxImageParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DcxImageParser_ESTest extends DcxImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)60;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        dcxImageParser0.getBufferedImage(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid DCX File: file id incorrect
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(";N#^\"OwCO", byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ImageMetadata imageMetadata0 = dcxImageParser0.getMetadata((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      byte[] byteArray1 = dcxImageParser0.getICCProfileBytes((ByteSource) byteSourceArray0, (Map<String, Object>) hashMap0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      String[] stringArray0 = dcxImageParser0.getAcceptedExtensions();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        dcxImageParser0.writeImage((BufferedImage) null, pipedOutputStream0, hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        dcxImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid DCX File: file id incorrect
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        dcxImageParser0.getBufferedImage((ByteSource) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        dcxImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid DCX File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      MockFile mockFile0 = new MockFile("|Qs>!5X<;!O }dM");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        dcxImageParser0.getBufferedImage((ByteSource) byteSourceFile0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[11];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        dcxImageParser0.getAllBufferedImages((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid DCX File: file id incorrect
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      // Undeclared exception!
      try { 
        dcxImageParser0.getAllBufferedImages((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        dcxImageParser0.getAllBufferedImages((ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid DCX File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        dcxImageParser0.getAllBufferedImages((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Y/Lw[s{=-i!!A", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      // Undeclared exception!
      try { 
        dcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      MockFile mockFile0 = new MockFile("", "None");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-126), 1643);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "org.apache.commons.imaging.formats.dcx.DcxImageParser$DcxHeader");
      // Undeclared exception!
      try { 
        dcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      MockFile mockFile0 = new MockFile("2h/%b qP)&a 7RRu", "=Je4+a/5");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        dcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid DCX File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("J.p_o<D67hv'");
      MockFile mockFile0 = new MockFile("PCX_COMPRESSION", "PCX_COMPRESSION");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        dcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put((String) null, (Object) null);
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      try { 
        dcxImageParser0.writeImage((BufferedImage) null, printStream0, hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown parameter: null
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("PIXEL_DENSITY", "PIXEL_DENSITY");
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      try { 
        dcxImageParser0.writeImage((BufferedImage) null, printStream0, hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid pixel density parameter
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("PIXEL_DENSITY", (Object) null);
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      // Undeclared exception!
      try { 
        dcxImageParser0.writeImage((BufferedImage) null, printStream0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.PaletteFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      hashtable0.put("PCX_COMPRESSION", "PCX_COMPRESSION");
      try { 
        dcxImageParser0.writeImage((BufferedImage) null, printStream0, hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression parameter: PCX_COMPRESSION
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("FORMAT", "FORMAT");
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      // Undeclared exception!
      try { 
        dcxImageParser0.writeImage((BufferedImage) null, printStream0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.PaletteFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      // Undeclared exception!
      try { 
        dcxImageParser0.writeImage((BufferedImage) null, printStream0, (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.PaletteFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte)58;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        dcxImageParser0.getBufferedImage(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid DCX File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      String string0 = dcxImageParser0.getDefaultExtension();
      assertEquals(".dcx", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Dimension dimension0 = dcxImageParser0.getImageSize((ByteSource) byteSourceArray0, (Map<String, Object>) null);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(mockFileInputStream0, " and planes ");
      ImageInfo imageInfo0 = dcxImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, (Map<String, Object>) null);
      assertNull(imageInfo0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      ImageFormat[] imageFormatArray0 = dcxImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      byte[] byteArray0 = new byte[8];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ICNS_16x16_8BIT_IMAGE");
      try { 
        dcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid DCX File: file id incorrect
         //
         verifyException("org.apache.commons.imaging.formats.dcx.DcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DcxImageParser dcxImageParser0 = new DcxImageParser();
      String string0 = dcxImageParser0.getName();
      assertEquals("Dcx-Custom", string0);
  }
}
