/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 03:27:53 GMT 2025
 */

package org.apache.commons.imaging.formats.wbmp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.ImageInfo;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.wbmp.WbmpImageParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WbmpImageParser_ESTest extends WbmpImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-116);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getAllBufferedImages((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (1536) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("b4Yj.oohI");
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)36;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      boolean boolean0 = wbmpImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-116);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      Dimension dimension0 = wbmpImageParser0.getImageSize((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
      assertEquals(1536, dimension0.width);
      assertEquals(0, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte) (-62);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      Dimension dimension0 = wbmpImageParser0.getImageSize((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
      assertEquals(8448, dimension0.height);
      assertEquals(0, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-116);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("PAM header has no DEPTH", byteArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ImageInfo imageInfo0 = wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, (Map<String, Object>) hashMap0);
      assertEquals(1, imageInfo0.getNumberOfImages());
      assertFalse(imageInfo0.usesPalette());
      assertEquals(0, imageInfo0.getPhysicalHeightDpi());
      assertEquals(0, imageInfo0.getWidth());
      assertEquals(0.0F, imageInfo0.getPhysicalHeightInch(), 0.01F);
      assertEquals(1536, imageInfo0.getHeight());
      assertEquals("image/vnd.wap.wbmp", imageInfo0.getMimeType());
      assertEquals("Wireless Application Protocol Bitmap", imageInfo0.getFormatName());
      assertEquals(0.0F, imageInfo0.getPhysicalWidthInch(), 0.01F);
      assertEquals(0, imageInfo0.getPhysicalWidthDpi());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("org.apache.commons.imaging.formats.bmp.BmpImageParser", byteArray0);
      ImageInfo imageInfo0 = wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, (Map<String, Object>) null);
      assertEquals(0.0F, imageInfo0.getPhysicalWidthInch(), 0.01F);
      assertFalse(imageInfo0.isTransparent());
      assertEquals(1, imageInfo0.getNumberOfImages());
      assertFalse(imageInfo0.usesPalette());
      assertEquals(0, imageInfo0.getWidth());
      assertEquals("WBMP", imageInfo0.getFormatDetails());
      assertEquals(0, imageInfo0.getHeight());
      assertEquals(0.0F, imageInfo0.getPhysicalHeightInch(), 0.01F);
      assertEquals("image/vnd.wap.wbmp", imageInfo0.getMimeType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      String[] stringArray0 = wbmpImageParser0.getAcceptedExtensions();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        wbmpImageParser0.writeImage((BufferedImage) null, pipedOutputStream0, hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((ByteSource) null, (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, ".wbmp");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2111), (byte)16);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "A\"kJc&/4}8@kcY{D");
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid WBMP File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile("1x&s Bp@zSK4", "1x&s Bp@zSK4");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceFile0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile("", "");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) byteSourceFile0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid WBMP File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-114);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("fv;*C>y|/AJ'P:1Oyl");
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported WBMP type 1792
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      // Undeclared exception!
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser$WbmpHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LodPN8[2(V %k+");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2110), 2492);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "");
      // Undeclared exception!
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("*c", byteArray0);
      try { 
        wbmpImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WbmpImageParser.WbmpHeader wbmpImageParser_WbmpHeader0 = new WbmpImageParser.WbmpHeader((byte) (-1), (byte)110, (byte) (-1), (byte) (-80));
      MockFileWriter mockFileWriter0 = new MockFileWriter("b|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      wbmpImageParser_WbmpHeader0.dump(mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      BufferedImage bufferedImage0 = new BufferedImage(134, 134, 12);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      wbmpImageParser0.writeImage(bufferedImage0, byteArrayOutputStream0, hashtable0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      hashtable0.put("I.O/).DZo_hAsjOU-", byteArrayOutputStream0);
      try { 
        wbmpImageParser0.writeImage((BufferedImage) null, byteArrayOutputStream0, hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown parameter: I.O/).DZo_hAsjOU-
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      hashtable0.put("FORMAT", "FORMAT");
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.writeImage((BufferedImage) null, byteArrayOutputStream0, hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        wbmpImageParser0.writeImage((BufferedImage) null, byteArrayOutputStream0, (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-116);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported WBMP FixHeaderField 0x8c
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)60;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported WBMP type 60
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      BufferedImage bufferedImage0 = new BufferedImage(8, 130, 8);
      wbmpImageParser0.writeImage(bufferedImage0, byteArrayOutputStream0, hashtable0);
      assertEquals(135, byteArrayOutputStream0.size());
      assertEquals("\u0000\u0000\b\uFFFD\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-116);
      byteArray0[2] = (byte) (-116);
      byteArray0[3] = (byte) (-116);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        wbmpImageParser0.getImageSize((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Overflow reading WBMP multi-byte field
         //
         verifyException("org.apache.commons.imaging.formats.wbmp.WbmpImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      // Undeclared exception!
      try { 
        wbmpImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        wbmpImageParser0.getImageInfo((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error reading WBMP header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      byte[] byteArray0 = wbmpImageParser0.getICCProfileBytes((ByteSource) null, (Map<String, Object>) hashtable0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      ImageFormat[] imageFormatArray0 = wbmpImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      String string0 = wbmpImageParser0.getDefaultExtension();
      assertEquals(".wbmp", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ImageMetadata imageMetadata0 = wbmpImageParser0.getMetadata((ByteSource) null, (Map<String, Object>) hashtable0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      WbmpImageParser wbmpImageParser0 = new WbmpImageParser();
      String string0 = wbmpImageParser0.getName();
      assertEquals("Wireless Application Protocol Bitmap Format", string0);
  }
}
