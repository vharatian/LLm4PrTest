/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 03:30:18 GMT 2025
 */

package org.apache.commons.imaging.formats.xbm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.xbm.XbmImageParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class XbmImageParser_ESTest extends XbmImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      Random.setNextRandom(249);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        xbmImageParser0.writeImage((BufferedImage) null, (OutputStream) null, hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        xbmImageParser0.getImageSize((ByteSource) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "%z#IV[%");
      try { 
        xbmImageParser0.getImageSize((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("", "");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        xbmImageParser0.getImageSize((ByteSource) byteSourceFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        xbmImageParser0.getImageInfo((ByteSource) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1420), 1590);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, (String) null);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PipedInputStream pipedInputStream0 = new PipedInputStream(16);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "_L/zI=pIaf|EZfuF");
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("\"}w2x3|++YHRy", "\"}w2x3|++YHRy");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      // Undeclared exception!
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) null, (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, (Map<String, Object>) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("ZB7Q7oygu[K'");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) byteSourceFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      // Undeclared exception!
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile("o");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(3161);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "o");
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("]jI^w*!B^iTPns~");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      MockFile mockFile0 = new MockFile("F-jQ6;97|");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      MockFile mockFile0 = new MockFile(".xbm");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      hashtable0.put("Gif: No Color Table", "Gif: No Color Table");
      try { 
        xbmImageParser0.writeImage((BufferedImage) null, mockFileOutputStream0, hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown parameter: Gif: No Color Table
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("FORMAT", "FORMAT");
      // Undeclared exception!
      try { 
        xbmImageParser0.writeImage((BufferedImage) null, (OutputStream) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      // Undeclared exception!
      try { 
        xbmImageParser0.writeImage((BufferedImage) null, (OutputStream) null, (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        xbmImageParser0.getBufferedImage((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[1];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("]", byteArray0);
      try { 
        xbmImageParser0.getImageInfo((ByteSource) byteSourceArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ImageMetadata imageMetadata0 = xbmImageParser0.getMetadata((ByteSource) null, (Map<String, Object>) hashtable0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[6];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("q)", byteArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      byte[] byteArray1 = xbmImageParser0.getICCProfileBytes((ByteSource) byteSourceArray0, (Map<String, Object>) hashMap0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      String string0 = xbmImageParser0.getName();
      assertEquals("X BitMap", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[0];
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("t");
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        xbmImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      String string0 = xbmImageParser0.getDefaultExtension();
      assertEquals(".xbm", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      String[] stringArray0 = xbmImageParser0.getAcceptedExtensions();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      ImageFormat[] imageFormatArray0 = xbmImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XbmImageParser xbmImageParser0 = new XbmImageParser();
      byte[] byteArray0 = new byte[10];
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        xbmImageParser0.getImageSize((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // width not found
         //
         verifyException("org.apache.commons.imaging.formats.xbm.XbmImageParser", e);
      }
  }
}
