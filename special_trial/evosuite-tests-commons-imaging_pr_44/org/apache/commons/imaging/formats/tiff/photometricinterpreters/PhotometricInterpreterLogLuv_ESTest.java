/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 04:17:19 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.photometricinterpreters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.ImageBuilder;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PhotometricInterpreterLogLuv_ESTest extends PhotometricInterpreterLogLuv_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(24, intArray0, 24, (-891), 24);
      ImageBuilder imageBuilder0 = new ImageBuilder(1802, 1, false);
      int[] intArray1 = new int[3];
      intArray1[0] = (-891);
      photometricInterpreterLogLuv0.interpretPixel(imageBuilder0, intArray1, 1802, Integer.MAX_VALUE);
      assertEquals(3, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv((-16777216), intArray0, (-16777216), (-16777216), (-16777216));
      PhotometricInterpreterLogLuv.TristimulusValues photometricInterpreterLogLuv_TristimulusValues0 = photometricInterpreterLogLuv0.getTristimulusValues((-16777216), (-16777216), (-16777216));
      assertNotNull(photometricInterpreterLogLuv_TristimulusValues0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[0];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(0, intArray0, 24, 2, (-3502));
      PhotometricInterpreterLogLuv.TristimulusValues photometricInterpreterLogLuv_TristimulusValues0 = photometricInterpreterLogLuv0.getTristimulusValues((-1553780601), 3, 3);
      assertNotNull(photometricInterpreterLogLuv_TristimulusValues0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[4];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(24, intArray0, 24, (-891), 24);
      ImageBuilder imageBuilder0 = new ImageBuilder(1802, 1, false);
      int[] intArray1 = new int[3];
      intArray1[2] = (-2765);
      photometricInterpreterLogLuv0.interpretPixel(imageBuilder0, intArray1, 1802, Integer.MAX_VALUE);
      assertEquals(1802, imageBuilder0.getWidth());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[0];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(0, intArray0, 24, 2, (-3502));
      int[] intArray1 = new int[3];
      intArray1[0] = 24;
      intArray1[1] = 16;
      // Undeclared exception!
      try { 
        photometricInterpreterLogLuv0.interpretPixel((ImageBuilder) null, intArray1, (-3502), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[0];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv((-16777216), intArray0, (-2153), 0, 24);
      try { 
        photometricInterpreterLogLuv0.interpretPixel((ImageBuilder) null, intArray0, 0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid length of bits per sample (expected 3).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PhotometricInterpreterLogLuv.TristimulusValues photometricInterpreterLogLuv_TristimulusValues0 = new PhotometricInterpreterLogLuv.TristimulusValues();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PhotometricInterpreterLogLuv.RgbValues photometricInterpreterLogLuv_RgbValues0 = new PhotometricInterpreterLogLuv.RgbValues();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[4];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(24, intArray0, 24, (-891), 24);
      PhotometricInterpreterLogLuv.TristimulusValues photometricInterpreterLogLuv_TristimulusValues0 = photometricInterpreterLogLuv0.getTristimulusValues(24, 663, 3);
      PhotometricInterpreterLogLuv.RgbValues photometricInterpreterLogLuv_RgbValues0 = photometricInterpreterLogLuv0.getRgbValues(photometricInterpreterLogLuv_TristimulusValues0);
      assertNotNull(photometricInterpreterLogLuv_RgbValues0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[3];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(6, intArray0, 6, 6, 6);
      ImageBuilder imageBuilder0 = new ImageBuilder(6, 6, true);
      // Undeclared exception!
      try { 
        photometricInterpreterLogLuv0.interpretPixel(imageBuilder0, intArray0, 6, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 42
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[4];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(24, intArray0, 24, 24, 24);
      // Undeclared exception!
      try { 
        photometricInterpreterLogLuv0.getRgbValues((PhotometricInterpreterLogLuv.TristimulusValues) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[4];
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(24, intArray0, 24, (-891), 24);
      try { 
        photometricInterpreterLogLuv0.interpretPixel((ImageBuilder) null, intArray0, (-11124), 3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid length of bits per sample (expected 3).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(772, (int[]) null, 0, 1081, 65280);
      try { 
        photometricInterpreterLogLuv0.interpretPixel((ImageBuilder) null, (int[]) null, 262, 595);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid length of bits per sample (expected 3).
         //
         verifyException("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv", e);
      }
  }
}
