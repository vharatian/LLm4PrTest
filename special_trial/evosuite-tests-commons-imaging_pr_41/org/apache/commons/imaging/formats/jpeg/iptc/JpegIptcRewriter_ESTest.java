/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 04:49:26 GMT 2025
 */

package org.apache.commons.imaging.formats.jpeg.iptc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.net.URI;
import java.util.LinkedList;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock;
import org.apache.commons.imaging.formats.jpeg.iptc.IptcRecord;
import org.apache.commons.imaging.formats.jpeg.iptc.JpegIptcRewriter;
import org.apache.commons.imaging.formats.jpeg.iptc.PhotoshopApp13Data;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class JpegIptcRewriter_ESTest extends JpegIptcRewriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[0];
      try { 
        jpegIptcRewriter0.writeIPTC(byteArray0, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        jpegIptcRewriter0.writeIPTC((ByteSource) byteSourceArray0, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.writeIPTC((ByteSource) null, (OutputStream) byteArrayOutputStream0, photoshopApp13Data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      try { 
        jpegIptcRewriter0.writeIPTC((ByteSource) byteSourceInputStream0, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      try { 
        jpegIptcRewriter0.writeIPTC((InputStream) pushbackInputStream0, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.writeIPTC((InputStream) bufferedInputStream0, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-39), 65482);
      LinkedList<IptcRecord> linkedList0 = new LinkedList<IptcRecord>();
      LinkedList<IptcBlock> linkedList1 = new LinkedList<IptcBlock>();
      PhotoshopApp13Data photoshopApp13Data0 = new PhotoshopApp13Data(linkedList0, linkedList1);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.writeIPTC((InputStream) byteArrayInputStream0, (OutputStream) null, photoshopApp13Data0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      File file0 = MockFile.createTempFile("3[Vcm[)@ yTiXJ(", "3[Vcm[)@ yTiXJ(");
      try { 
        jpegIptcRewriter0.writeIPTC(file0, (OutputStream) byteArrayOutputStream0, (PhotoshopApp13Data) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.writeIPTC((File) null, (OutputStream) byteArrayOutputStream0, (PhotoshopApp13Data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((byte[]) null, (OutputStream) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[0];
      try { 
        jpegIptcRewriter0.removeIPTC(byteArray0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("V~<ioWW+',]", byteArray0);
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceArray0, (OutputStream) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceArray0, (OutputStream) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "ep*fwvh~'");
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceInputStream0, (OutputStream) null, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceFile0, (OutputStream) byteArrayOutputStream0, true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[8];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceArray0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      File file0 = MockFile.createTempFile("The FilenameFilter must not be null", "The FilenameFilter must not be null");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2872), 1028);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "The FilenameFilter must not be null");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceInputStream0, (OutputStream) mockPrintStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "Sensitive");
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceInputStream0, (OutputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockFile mockFile0 = new MockFile("W3,CBY[o", "W3,CBY[o");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) byteSourceFile0, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        jpegIptcRewriter0.removeIPTC((InputStream) byteArrayInputStream0, (OutputStream) pipedOutputStream0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-69), 583);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((InputStream) byteArrayInputStream0, (OutputStream) null, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[7];
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      try { 
        jpegIptcRewriter0.removeIPTC((InputStream) pushbackInputStream0, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((InputStream) dataInputStream0, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-101), 65474);
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((InputStream) byteArrayInputStream0, (OutputStream) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((File) null, (OutputStream) byteArrayOutputStream0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      MockFile mockFile0 = new MockFile("The FilenameFilter must not be null");
      try { 
        jpegIptcRewriter0.removeIPTC((File) mockFile0, (OutputStream) null, true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      File file0 = MockFile.createTempFile("The FilenameFilter must not be null", "The FilenameFilter must not be null");
      try { 
        jpegIptcRewriter0.removeIPTC(file0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((File) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        jpegIptcRewriter0.removeIPTC((InputStream) pipedInputStream0, (OutputStream) null, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      byte[] byteArray0 = new byte[0];
      try { 
        jpegIptcRewriter0.removeIPTC(byteArray0, (OutputStream) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      File file0 = MockFile.createTempFile("[short[]: ", "The FilenameFilter must not be null");
      try { 
        jpegIptcRewriter0.removeIPTC(file0, (OutputStream) null, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        jpegIptcRewriter0.writeIPTC((InputStream) pipedInputStream0, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.writeIPTC((byte[]) null, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      MockFile mockFile0 = new MockFile("");
      try { 
        jpegIptcRewriter0.removeIPTC((File) mockFile0, (OutputStream) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      try { 
        jpegIptcRewriter0.removeIPTC((InputStream) null, (OutputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((byte[]) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      MockFile mockFile0 = new MockFile("c9rcv=49RgU7D9'+~f");
      try { 
        jpegIptcRewriter0.writeIPTC((File) mockFile0, (OutputStream) null, (PhotoshopApp13Data) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JpegIptcRewriter jpegIptcRewriter0 = new JpegIptcRewriter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        jpegIptcRewriter0.removeIPTC((ByteSource) null, (OutputStream) byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }
}
