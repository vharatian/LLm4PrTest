/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:04:15 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.LinkedList;
import java.util.List;
import org.apache.commons.imaging.formats.tiff.AbstractTiffElement;
import org.apache.commons.imaging.formats.tiff.AbstractTiffImageData;
import org.apache.commons.imaging.formats.tiff.JpegImageData;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffImagingParameters;
import org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffDirectory_ESTest extends TiffDirectory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(325, linkedList0, 325, 325, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString("J", 325, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoXpString0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"J\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-26), linkedList0, (-26), 58L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-81), 663, fieldTypeRational0, (-26), 58L, byteArray0, byteOrder0, 2628);
      linkedList0.add(tiffField0);
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat((String) null, 1067, tiffDirectoryType0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("\" has wrong count ", (byte) (-81), tagInfoFloat0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"\" has wrong count \" has wrong count -26
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      TiffField tiffField0 = new TiffField((-197), 0, fieldTypeLong0, (-1642L), (-197), (byte[]) null, byteOrder0, (-197));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 1026L, 1026L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("Couldn't find image data.", (-197), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"Couldn't find image data.\" has wrong count -1642
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, 58, 58, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("", 58, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSBytes0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(325, linkedList0, 325, 325, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte((String) null, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSByte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"null\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(930, linkedList0, 930, 930, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(930, 930, fieldTypeRational0, 930, 930, byteArray0, byteOrder0, 2317);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoRational tagInfoRational0 = new TagInfoRational("*4c#Y-'e@H0C(IP9mO", 930, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"*4c#Y-'e@H0C(IP9mO\" has wrong count 930
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoRational tagInfoRational0 = new TagInfoRational((String) null, 100, tiffDirectoryType0);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, 100, 100, byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"null\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-225), linkedList0, (-225), (-225), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("lrDXz~3PEx!G~5M.irU", (-225), (-225), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"lrDXz~3PEx!G~5M.irU\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeLong0, (-17), (-17), byteArray0, byteOrder0, (-17));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-17), linkedList0, (-17), (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoLong tagInfoLong0 = new TagInfoLong("FPxM=]|^&W", (-17), tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"FPxM=]|^&W\" has wrong count -17
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(401, linkedList0, 401, 401, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoLong tagInfoLong0 = new TagInfoLong((String) null, 401, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"null\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeFloat0, (-2), 1, (byte[]) null, byteOrder0, (-2));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-35), linkedList0, (-2), 255L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("t", (-2), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"t\" has wrong count -2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(116, linkedList0, 116, 116, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat(")`Lg", 116, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \")`Lg\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1734, (-26), fieldTypeFloat0, (-26), 1734, (byte[]) null, byteOrder0, 1734);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1734, linkedList0, 1734, 1734, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("I!h4}8IFIeu", 1734, 1734, tiffDirectoryType0);
      TagInfoByte tagInfoByte0 = new TagInfoByte("I!h4}8IFIeu", 1734, fieldTypeFloat0, tagInfoFloats0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"I!h4}8IFIeu\" has wrong count -26
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 1, 1, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", 6, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoAscii0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(565, "p");
      TiffField tiffField0 = new TiffField(565, 58, fieldTypeLong0, 565, (-1), (byte[]) null, byteOrder0, 1312);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(565, linkedList0, 565, (-1), byteOrder0);
      boolean boolean0 = tiffDirectory0.hasJpegImageData();
      assertEquals(565, tiffDirectory0.type);
      assertFalse(boolean0);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeRational0, 943, 943, byteArray0, byteOrder0, 2317);
      linkedList0.add(tiffField0);
      tiffDirectory0.dump();
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(943, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(581, ">");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-4306L), 0L, byteArray0, byteOrder0, (byte)65);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, 0L, 2979L, byteOrder0);
      tiffDirectory0.size();
      assertEquals(2979L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals((-407), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)43;
      TiffField tiffField0 = new TiffField(497, 497, fieldTypeLong0, 497, 497, byteArray0, byteOrder0, (-2784));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)119, linkedList0, 1037L, (byte)119, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("Coordinates out of range (", 497, 18, tiffDirectoryType0, false);
      tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
      assertEquals(119, tiffDirectory0.type);
      assertEquals(119L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)68;
      byteArray0[3] = (byte)61;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)3;
      byteArray0[7] = (byte)68;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(796, 796, fieldTypeAscii0, 796, 796, byteArray0, byteOrder0, (byte)68);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2804), linkedList0, 1425L, (byte)61, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("\" has wrong count ", 796, (byte)68, tiffDirectoryType0);
      tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
      assertEquals((-2804), tiffDirectory0.type);
      assertEquals(61L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1723, linkedList0, 2749L, 0L, (ByteOrder) null);
      long long0 = tiffDirectory0.getNextDirectoryOffset();
      assertEquals(1723, tiffDirectory0.type);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(279, linkedList0, (-692L), (-2147483648L), (ByteOrder) null);
      long long0 = tiffDirectory0.getNextDirectoryOffset();
      assertEquals(279, tiffDirectory0.type);
      assertEquals((-2147483648L), long0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(565, linkedList0, 565, (-1), byteOrder0);
      byte[] byteArray0 = new byte[2];
      JpegImageData jpegImageData0 = new JpegImageData(565, 565, byteArray0);
      tiffDirectory0.setJpegImageData(jpegImageData0);
      tiffDirectory0.getJpegImageData();
      assertEquals(565, tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeRational0, 943, 943, byteArray0, byteOrder0, 2299);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 943, 943, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSRationals0, false);
      assertEquals(943, tiffDirectory0.type);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 83, fieldTypeLong0, 1386L, 2147483647L, byteArray0, byteOrder0, 343);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(83, linkedList0, 4186L, 83, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("ApertureValue", 4, 0, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
      assertEquals(83L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(83, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(89, 89, fieldTypeRational0, 89, (-1L), byteArray0, byteOrder0, 89);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2391, linkedList0, 89, 2017L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("GPSTrack", 89, 30, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoRationals0, false);
      assertEquals(2017L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(2391, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("FPxM=]|^&W", 4, 4, tiffDirectoryType0, true);
      tiffDirectory0.getFieldValue(tagInfoLongs0, true);
      assertEquals(0L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(4, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-1183), (-1183), fieldTypeLong0.FLOAT, 43, (-2993L), byteArray0, byteOrder0, 415);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2907, linkedList0, (-2694L), 43, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("z`}JFp}{H|Tw,V", (-1183), 43, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoFloats0, true);
      assertEquals(43L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(2907, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1725, 49, fieldTypeFloat0, 49, (-26), byteArray0, byteOrder0, 1453);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1725, linkedList0, (-26), 2L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("tWpn]y-l", 1725, 2628, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoFloats0, true);
      assertEquals(1725, tiffDirectory0.type);
      assertEquals(2L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 35L, 90, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(3, 4, fieldTypeRational0, 255L, 73L, byteArray0, byteOrder0, 860);
      linkedList0.push(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", 3, fieldTypeRational0, 4, tiffDirectoryType0);
      byte[] byteArray1 = tiffDirectory0.getFieldValue(tagInfoBytes0, false);
      assertNotNull(byteArray1);
      assertEquals(90L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(4, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-1183), (-1183), fieldTypeLong0.FLOAT, 43, (-2993L), byteArray0, byteOrder0, 415);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2907, linkedList0, (-2694L), 43, byteOrder0);
      tiffDirectory0.getDirectoryEntries();
      assertEquals(43L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(2907, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1348, linkedList0, 1348, 0L, (ByteOrder) null);
      tiffDirectory0.getByteOrder();
      assertEquals(0L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(1348, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1241), (-26), fieldTypeFloat0, (-1241), 2744L, (byte[]) null, byteOrder0, (-26));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(34855, linkedList0, 1088L, (-168L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("X?", (-1241), 18, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoRationals0, true);
      assertEquals((-168L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(34855, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3575), "\t[%d]: %s (%d, 0x%x), %s, %d: %s%n");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50709, (-3575), fieldTypeRational0, (-3575), 943, byteArray0, byteOrder0, 2296);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 50709, 943, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoSRationals0, false);
      assertEquals(943, tiffDirectory0.type);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-1), (-1), fieldTypeRational0, (byte) (-1), (-1), byteArray0, byteOrder0, (-1));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoByte tagInfoByte0 = new TagInfoByte("", (byte) (-1), fieldTypeRational0, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-1), linkedList0, 1L, (byte) (-1), byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoByte0);
      assertEquals((-1), tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeLong0, 58, 58, byteArray0, byteOrder0, 58);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(30, linkedList0, 50938, 2L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("\" is missing", 58, 18, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoDoubles0);
      assertEquals(2L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(30, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(581, ">");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, 2979L, 0L, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, 0L, 2979L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts(">", (-407), 50721, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoShorts0);
      assertEquals(2979L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals((-407), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(18, linkedList0, 562, (-93L), byteOrder0);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, 58, 58, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffRasterData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(34804, linkedList0, 34804, 34804, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffImageData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory(34855, linkedList0, 34855, 34855, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffFloatingPointRasterData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2256, linkedList0, 2256, 2256, byteOrder0);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasJpegImageData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-49), linkedList0, 24, (-49), byteOrder0);
      linkedList0.offerLast((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1352), linkedList0, (-1352), (-1352), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue((TagInfoShortOrLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), (-1), byteArray0, byteOrder0, (-1));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, (-1), (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("6", (-1), (-1), tiffDirectoryType0, true);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(816, (-407), fieldTypeAscii0, (-407), (-407), byteArray0, byteOrder0, (byte)68);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(156, linkedList0, 1425L, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", 816, (byte)0, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2448), linkedList0, (-2448), (-2448), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getRasterData((TiffImagingParameters) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(34855, linkedList0, 34855, 34855, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getJpegRawImageDataElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(34806, linkedList0, 34806, 34806, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShortOrLong) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-225), linkedList0, (-225), (-225), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShort) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2256, linkedList0, 2256, 2256, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSShorts) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(34855, linkedList0, 34855, 34855, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSShort) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1922), linkedList0, 89L, 12L, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSRationals) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-526), linkedList0, (-526), (-526), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-526), (-526), fieldTypeRational0, (-526), (-526), byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("org.apache.commons.imaging.formats.tiff.TiffRasterDataType", (-526), (-526), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(93, linkedList0, 93, 93, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSRational) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2244, linkedList0, (-738L), 2244, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSLongs) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(93, linkedList0, 93, 93, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2028, linkedList0, 2028, 2028, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoRationals) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[40];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-407), (-407), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, (-407), (-407), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("7", (byte)0, (-407), tiffDirectoryType0);
      TagInfoRationals tagInfoRationals1 = new TagInfoRationals("7", (-407), (-407), tagInfoRationals0.directoryType);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals1, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(34855, linkedList0, 34855, 34855, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoGpsText) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(663, 663, fieldTypeFloat0, (-1537L), 2147483647L, byteArray0, byteOrder0, (-2421));
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)89, linkedList0, 50725L, 2147483647L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("pNa^&#V0QzDBFU/", 663, (-186), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-225), linkedList0, (-225), (-225), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoDouble) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[40];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-407), (-407), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, (-1L), (-1L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("`I\"(RUG", (-407), fieldTypeRational0, (-407), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(34855, linkedList0, 34855, 34855, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoByte) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory(325, linkedList0, 325, (-3440L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("", 18, 325, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfo) tagInfoShorts0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3575), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50709, (-3575), fieldTypeRational0, (-3575), 943, byteArray0, byteOrder0, 2296);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 50709, 943, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfo) tagInfoSRationals0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 34863, fieldTypeFloat0, 1, 1, (byte[]) null, byteOrder0, 34863);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(34863, linkedList0, 34863, 34863, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getElementDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[27];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-407), (-407), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, (-407), (-407), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getElementDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, 58, 58, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.findField((TagInfo) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, 934L, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("Sub", 4, 4, tiffDirectoryType0);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.findField((TagInfo) tagInfoDoubles0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1799, linkedList0, 1799, 1799, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[40];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-407), (-407), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, (-1L), (-1L), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = null;
      try {
        tiffDirectory0 = new TiffDirectory(6, (List<TiffField>) null, (-1352L), (-1352), byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(83, linkedList0, 4186L, 83, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffImageData();
      assertEquals(83, tiffDirectory0.type);
      assertEquals(83L, tiffDirectory0.getNextDirectoryOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2448), linkedList0, (-2448), (-2448), byteOrder0);
      tiffDirectory0.getTiffImage(byteOrder0, (TiffImagingParameters) null);
      assertEquals((-2448), tiffDirectory0.type);
      assertEquals((-2448L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(127, linkedList0, 127, 127, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShorts) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(89, 89, fieldTypeLong0, 89, 89, byteArray0, byteOrder0, 89);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("bQLde\"<rkdKX", 89, 89, tiffDirectoryType0, true);
      TiffDirectory tiffDirectory0 = new TiffDirectory(89, linkedList0, (-1), (-1), byteOrder0);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(89, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(334, linkedList0, 2304L, (-2609L), byteOrder0);
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(12, "KMkcuYw4L5fB");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-4026), (-4026), fieldTypeShort0, 6, 2304L, byteArray0, byteOrder0, (-1252));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("G@+&\u0003[x", (-4026), (-3), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoAscii0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"G@+&\u0003[x\" has incorrect type KMkcuYw4L5fB
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5, linkedList0, 2264L, 5, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("1p.", 0, (-2943), tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoShorts0, false);
      assertEquals(5L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(5, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeLong8 fieldTypeLong8_0 = new FieldTypeLong8(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-302), (-14), fieldTypeLong8_0, 0, 0L, byteArray0, byteOrder0, (byte)7);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, (-1428L), 582L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble((String) null, 0, tiffDirectoryType0);
      try { 
        tiffDirectory0.findField((TagInfo) tagInfoDouble0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Missing expected field: 0 (0x0: null): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("p", 565, 565, tiffDirectoryType0);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      TiffField tiffField0 = new TiffField(565, 565, fieldTypeLong0, 565, (-1), (byte[]) null, byteOrder0, 1312);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(565, linkedList0, 565, (-1), byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoFloats0, true);
      assertEquals(565, tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = TiffDirectory.description(943);
      assertEquals("Bad Type", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-49), linkedList0, 24, (-49), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("tUir@oyte", (-4), tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoSByte0);
      assertEquals((-49), tiffDirectory0.type);
      assertEquals((-49L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, (-1), 12L, (ByteOrder) null);
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(75, linkedList0, 75, 16L, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffRasterData();
      assertFalse(boolean0);
      assertEquals(75, tiffDirectory0.type);
      assertEquals(16L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1055, linkedList0, 1055, (-1L), (ByteOrder) null);
      boolean boolean0 = tiffDirectory0.hasTiffFloatingPointRasterData();
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(1055, tiffDirectory0.type);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 1749, fieldTypeFloat0, 1L, (-2080L), (byte[]) null, byteOrder0, 1749);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, 513, 2177, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasJpegImageData();
      assertEquals(2177L, tiffDirectory0.getNextDirectoryOffset());
      assertTrue(boolean0);
      assertEquals((-1), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, 4, byteOrder0);
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(30, linkedList0, 50938, 2L, byteOrder0);
      tiffDirectory0.getTiffImage((TiffImagingParameters) null);
      assertEquals(2L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(30, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1335), linkedList0, (-1335), (-1335), byteOrder0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[4];
      AbstractTiffImageData.Tiles abstractTiffImageData_Tiles0 = new AbstractTiffImageData.Tiles(abstractTiffElement_DataElementArray0, (byte)112, 1888);
      tiffDirectory0.setTiffImageData(abstractTiffImageData_Tiles0);
      try { 
        tiffDirectory0.getTiffImage(byteOrder0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"ImageWidth\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, 58, 58, byteOrder0);
      tiffDirectory0.getTiffImage();
      assertEquals(58, tiffDirectory0.type);
      assertEquals(58L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(497, 497, fieldTypeLong0, 497, 497, byteArray0, byteOrder0, (-2784));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)119, linkedList0, 1037L, (byte)119, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("Coordinates out of range (", 497, 18, tiffDirectoryType0, false);
      tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
      assertEquals(119, tiffDirectory0.type);
      assertEquals(119L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(796, 796, fieldTypeAscii0, 796, 796, byteArray0, byteOrder0, (byte)68);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2801), linkedList0, 1425L, (byte)61, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("\" has wrong count ", 796, (byte)68, tiffDirectoryType0);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"\" has wrong count \" has incorrect length 23
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-3761), (byte)66, fieldTypeAscii0, 20L, 4L, byteArray0, byteOrder0, (-3761));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(816, linkedList0, (-434), 816, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", (-3761), 30, tiffDirectoryType0);
      tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
      assertEquals(816, tiffDirectory0.type);
      assertEquals(816L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-3944), linkedList0, 12L, (-3944), byteOrder0);
      try { 
        tiffDirectory0.getJpegRawImageDataElement();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoXpString) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 12L, 1, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString("", 1, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoXpString0, false);
      assertEquals(1L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(1, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(581, ">");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-4280L), 0L, byteArray0, byteOrder0, (byte)65);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, 0L, 2979L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString(">", (-407), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoXpString0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeLong0, 58, 58, byteArray0, byteOrder0, 58);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, (-3812L), (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts((String) null, 58, 41996, tiffDirectoryType0);
      short[] shortArray0 = tiffDirectory0.getFieldValue(tagInfoSShorts0, false);
      assertEquals(0L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(58, tiffDirectory0.type);
      assertNull(shortArray0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, 58, 58, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("&", 58, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShorts0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"&\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(41992, linkedList0, 41992, (-1387L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("_wDNl6p~lq_'oj", 41992, 41992, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSShorts0, false);
      assertEquals((-1387L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(41992, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeLong0, 58, 58, byteArray0, byteOrder0, 58);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, (-3812L), (byte) (-7), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts((String) null, 58, 41996, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShorts0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"null\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(21, linkedList0, 21, (-1387L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", 0, (-5025), tiffDirectoryType0);
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("", 279, tagInfoRationals0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShort0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(497, 497, fieldTypeLong0, 497, 497, byteArray0, byteOrder0, 497);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(497, linkedList0, 497, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat((String) null, 497, tiffDirectoryType0);
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort((String) null, 497, tagInfoFloat0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShort0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"null\" has incorrect type IFD
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3575), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50709, (-3575), fieldTypeRational0, (-3575), 943, byteArray0, byteOrder0, 2296);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 50709, 943, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSRationals0, false);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(943, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50709, 50709, fieldTypeRational0, 50709, 943, byteArray0, byteOrder0, 2296);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 50709, 943, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(943, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 1, 1, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals(") != byteCounts.length(", 1, 2965, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \") != byteCounts.length(\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(341, linkedList0, 341, 341, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("Root", 341, 341, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSRationals0, false);
      assertEquals(341, tiffDirectory0.type);
      assertEquals(341L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50709, (-3575), fieldTypeRational0, (-3575), 943, byteArray0, byteOrder0, 2296);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 50709, 943, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoByte tagInfoByte0 = new TagInfoByte("", 4, fieldTypeLong0, tiffDirectoryType0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("", 4, tagInfoByte0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1913, linkedList0, 1913, (-2635L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("<qBpGG6o{1q[5H&$", 50964, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"<qBpGG6o{1q[5H&$\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeRational0, 943, 943, byteArray0, byteOrder0, 2299);
      linkedList0.add(tiffField0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("", 943, (TiffDirectoryType) null);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"\" has wrong count 943
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[27];
      TiffField tiffField0 = new TiffField((-399), (-399), fieldTypeRational0, (-399), (-399), byteArray0, byteOrder0, (byte)0);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-399), linkedList0, (-399), (-399), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("u(lyJbE9", (-399), 3490, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSLongs0, false);
      assertEquals((-399L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals((-399), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(4, 83, fieldTypeLong0, 1386L, 2147483647L, byteArray0, byteOrder0, (-1313));
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(83, linkedList0, 4186L, 83, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("pertureRalue", 4, 0, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
      assertEquals(83, tiffDirectory0.type);
      assertEquals(83L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(21, linkedList0, 21, (-1387L), byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoSLongs) null, false);
      assertEquals((-1387L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(21, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(713, linkedList0, (-1145L), 0L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", 6, 292, tiffDirectoryType0);
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs((String) null, 6, 6, tagInfoRationals0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"null\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3575), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50721, (-3575), fieldTypeRational0, (-3575), 943, byteArray0, byteOrder0, 2296);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", 50721, 3, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoByte tagInfoByte0 = new TagInfoByte("", 18, tiffDirectoryType0);
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("1", 4, tagInfoByte0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"1\" has wrong count 4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(21, linkedList0, 21, (-1387L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("", 1650, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoByte tagInfoByte0 = new TagInfoByte("", 18, tiffDirectoryType0);
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("1", 4, tagInfoByte0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"1\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeRational0, 943, 943, byteArray0, byteOrder0, 2317);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("", 943, 943, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShorts0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(341, linkedList0, 341, 341, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("b?cX]^3e5!AVV\"i", (-1), 341, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoShorts0, false);
      assertEquals(341L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(341, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts((String) null, 4, (-1100), tiffDirectoryType0);
      short[] shortArray0 = tiffDirectory0.getFieldValue(tagInfoShorts0, false);
      assertEquals(0L, tiffDirectory0.getNextDirectoryOffset());
      assertNull(shortArray0);
      assertEquals(4, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(890, 725, fieldTypeFloat0, 890, 0L, (byte[]) null, byteOrder0, 34855);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(725, linkedList0, 725, 34855, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", 890, fieldTypeFloat0.ASCII_OR_BYTE, 725, tiffDirectoryType0, false);
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("", 890, 725, tagInfoLong0.directoryType, false);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, false);
      assertEquals(34855L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(725, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeLong0, 43, 43, byteArray0, byteOrder0, 43);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(43, linkedList0, 43, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("6", 43, 43, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"6\" has incorrect length 2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2521), linkedList0, (-2521), (-2521), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong", 6, (-1), tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(890, 34855, fieldTypeFloat0, 890, 0L, (byte[]) null, byteOrder0, 34855);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(34855, linkedList0, 34855, 34855, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", 890, fieldTypeFloat0.LONG_OR_SHORT, 34855, tiffDirectoryType0, false);
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("", 890, 34855, tagInfoLong0.directoryType, false);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 1502L, 1502L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoShort tagInfoShort0 = new TagInfoShort("Sub", (-1078), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShort0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"Sub\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShort tagInfoShort0 = new TagInfoShort("EXIF_DIRECTORY_SUB_IFD", 4, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShort0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"EXIF_DIRECTORY_SUB_IFD\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(890, 34855, fieldTypeFloat0, 890, 0L, (byte[]) null, byteOrder0, 34855);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("JPEGACTables", 890, 890, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(890, linkedList0, 890, 1L, byteOrder0);
      tiffDirectory0.getFieldValue(tagInfoSBytes0, false);
      assertEquals(890, tiffDirectory0.type);
      assertEquals(1L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(42016, linkedList0, 42016, 42016, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSBytes) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(325, linkedList0, 325, 325, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoSBytes) null, false);
      assertEquals(325, tiffDirectory0.type);
      assertEquals(325L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(890, 34855, fieldTypeFloat0, 890, 0L, (byte[]) null, byteOrder0, 34855);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("JPEGACTables", 890, 890, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(890, linkedList0, 34855, 890, byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSBytes0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"JPEGACTables\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, 58, 58, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSByte) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("p", 565, 565, tiffDirectoryType0);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(565, "p");
      TiffField tiffField0 = new TiffField(565, 58, fieldTypeLong0, 565, (-1), (byte[]) null, byteOrder0, 1312);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(565, linkedList0, 565, (-1), byteOrder0);
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("", 565, tagInfoFloats0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSByte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type p
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-399), (-399), fieldTypeRational0, (-399), (-399), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-399), linkedList0, (-399), (-399), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", (byte)0, (-399), tiffDirectoryType0);
      TagInfoRationals tagInfoRationals1 = new TagInfoRationals("", (-399), (-399), tagInfoRationals0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals1, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type SRational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(581, ">");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-4291L), 0L, byteArray0, byteOrder0, (byte)65);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, 0L, 2979L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("XT:82>", (byte)17, 3, tiffDirectoryType0);
      TagInfoRationals tagInfoRationals1 = new TagInfoRationals("KHKfH(if", (-407), (-1), tagInfoRationals0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoRationals1, false);
      assertEquals(2979L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals((-407), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(713, linkedList0, (-1145L), 0L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", 6, 292, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoRationals0, false);
      assertEquals(713, tiffDirectory0.type);
      assertEquals(0L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, (-1009L), (-1), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("F%|c}5e(", (-2521), (-1), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"F%|c}5e(\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-407), "7");
      byte[] byteArray0 = new byte[40];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-407), (-407), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, (-407), (-407), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoRational tagInfoRational0 = new TagInfoRational("7", (-407), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"7\" has incorrect type 7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(30, linkedList0, 30, 30, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoRational) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField((-407), (-407), fieldTypeRational0, (-4288L), (-407), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-407), linkedList0, (-1L), (-1L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoRational tagInfoRational0 = new TagInfoRational("7", (-407), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"7\" has wrong count -4288
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("FPxM=]|^&W", 4, 4, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"FPxM=]|^&W\" has incorrect type SLong
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-42), (-42), fieldTypeLong0, (-42), (-42), byteArray0, byteOrder0, (-42));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-42), linkedList0, (-42), (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("FPxM=]|^&W", (-42), (-42), tiffDirectoryType0, true);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(72, linkedList0, 72, 72, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoLongs) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1734, 1734, fieldTypeFloat0, 1734, 1734, (byte[]) null, byteOrder0, 1734);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1734, linkedList0, 1734, 1734, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("FPxM=]|^&W", 1734, 1734, tiffDirectoryType0, false);
      tiffDirectory0.getFieldValue(tagInfoLongs0, false);
      assertEquals(1734L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(1734, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[27];
      TiffField tiffField0 = new TiffField((-399), (-399), fieldTypeRational0, (-399), (-399), byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", (-399), tiffDirectoryType0, true);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, (-399), 593L, byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(121, linkedList0, 121, 121, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50717, 50717, fieldTypeLong0, 50717, 50717, byteArray0, byteOrder0, 50717);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoLong tagInfoLong0 = new TagInfoLong("yr[:I", 50717, tiffDirectoryType0, false);
      TiffDirectory tiffDirectory0 = new TiffDirectory(50913, linkedList0, (byte) (-33), 50913, byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"yr[:I\" has wrong count 50717
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(75, linkedList0, 75, 16L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText("IFD3", 1992, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoGpsText0, false);
      assertEquals(75, tiffDirectory0.type);
      assertEquals(16L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(786, linkedList0, (-1075L), 0L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText("m7Om", 786, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoGpsText0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"m7Om\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(790, (-3575), fieldTypeRational0, (-3575), 943, byteArray0, byteOrder0, 2309);
      linkedList0.add(tiffField0);
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", 790, 943, tiffDirectoryType0);
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText("", 790, tagInfoSRationals0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoGpsText0, false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(89, 89, fieldTypeLong0, 89, 89, byteArray0, byteOrder0, 89);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(89, linkedList0, (-3812L), (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("nQky", 89, 18, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"nQky\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("p", 565, 565, tiffDirectoryType0);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(565, "p");
      TiffField tiffField0 = new TiffField(565, 58, fieldTypeLong0, 565, (-1), (byte[]) null, byteOrder0, 1312);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(565, linkedList0, 565, (-1), byteOrder0);
      tiffDirectory0.getFieldValue(tagInfoFloats0, false);
      assertEquals(565, tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1422), linkedList0, (-1), (-1), byteOrder0);
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("nwtHJcJx", (-950), (-950), tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoFloats0, false);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals((-1422), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-3944), linkedList0, 0L, 1L, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("", (-4), 183, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1734, "I!h4}8IFIeu");
      TiffField tiffField0 = new TiffField(1734, (-7), fieldTypeLong0.FLOAT, (-2147483648L), 1725, (byte[]) null, byteOrder0, 1725);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-3476), linkedList0, (-3476), 1734, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("I!h4}8IFIeu", 1734, (-3476), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 34863, fieldTypeFloat0, 1, 1, (byte[]) null, byteOrder0, 34863);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(34863, linkedList0, 34863, 34863, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("", 1, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("q5zN", 4, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"q5zN\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34863, 34863, fieldTypeFloat0, 34863, 34863, (byte[]) null, byteOrder0, 34863);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(34863, linkedList0, 34863, 34863, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("", 34863, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"\" has wrong count 34863
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeRational0, 943, 943, byteArray0, byteOrder0, 2317);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("", 943, (-2012), tiffDirectoryType0);
      double[] doubleArray0 = tiffDirectory0.getFieldValue(tagInfoDoubles0, false);
      assertNull(doubleArray0);
      assertEquals(943, tiffDirectory0.type);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2513, linkedList0, (-1096L), 2513, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("Gps", 50974, 2513, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoDoubles0, false);
      assertEquals(2513L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(2513, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", 0, tiffDirectoryType0, true);
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("AHClKr(N", 0, 0, tagInfoLong0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDoubles0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"AHClKr(N\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34855, 34855, (AbstractFieldType) null, 34855, 34855, byteArray0, byteOrder0, 34855);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("", 34855, 418, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(418, linkedList0, 34855, 34855, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoDoubles0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Exif");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1990), linkedList0, (-1059L), (-52L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("Exif", (-2), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"Exif\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, byteArray0, byteOrder0, (byte)0);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, 4, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("/>]H|ip4=l2@'u[9x", 4, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"/>]H|ip4=l2@'u[9x\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeRational0, 943, 943, byteArray0, byteOrder0, 2299);
      linkedList0.add(tiffField0);
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("rg.apache.commons.io.filefilter.EmptyFileFilter", 943, fieldTypeRational0.SHORT_OR_LONG_OR_RATIONAL, (-879), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"rg.apache.commons.io.filefilter.EmptyFileFilter\" has incorrect type SRational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1749, 1749, fieldTypeFloat0, 1749, 1749, (byte[]) null, byteOrder0, 1749);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1749, linkedList0, 1749, 1749, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("I!h4}8IFWIeu", 1749, fieldTypeFloat0, 18, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoByte tagInfoByte0 = new TagInfoByte("[7| m.N=wE=M", 75, fieldTypeShort0, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1422), linkedList0, (-1), (-1), byteOrder0);
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("*SbJzCLzv)w=#", (-950), fieldTypeShort0.ASCII_OR_BYTE, 1714, tagInfoByte0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"*SbJzCLzv)w=#\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1055, linkedList0, 1055, (-1L), (ByteOrder) null);
      List<AbstractFieldType> list0 = AbstractFieldType.LONG_OR_IFD;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("Sub", (-3944), list0, 1055, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoBytes0, false);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(1055, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(943, 943, fieldTypeRational0, 943, 943, byteArray0, byteOrder0, 2299);
      linkedList0.add(tiffField0);
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("rg.apache.commons.io.filefilter.EmptyFileFilter", 943, fieldTypeRational0.SHORT_OR_LONG_OR_RATIONAL, (-879), tiffDirectoryType0);
      byte[] byteArray1 = tiffDirectory0.getFieldValue(tagInfoBytes0, false);
      assertNull(byteArray1);
      assertEquals(943, tiffDirectory0.type);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoByte tagInfoByte0 = new TagInfoByte("", 4, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"\" has incorrect type Long
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(324, linkedList0, 12L, 4294967295L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("InkSet", 324, 0, tiffDirectoryType0);
      TagInfoByte tagInfoByte0 = new TagInfoByte("InkSet", 324, tagInfoShortOrLong0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"InkSet\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeLong0, 58, 58, byteArray0, byteOrder0, 58);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, (-3812L), (byte)7, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoByte tagInfoByte0 = new TagInfoByte("", 58, fieldTypeLong0, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Field \"\" has wrong count 58
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3761), (byte)66, fieldTypeAscii0, (-3761), (byte)66, (byte[]) null, byteOrder0, 816);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(816, linkedList0, (-434), 816, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", (-3761), 18, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1913, linkedList0, 1913, (-2635L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("Xhg2s3#Lz", (-1262), 113, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoAscii0, false);
      assertEquals((-2635L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(1913, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(30, linkedList0, 30, 30, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoAscii) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, (byte)0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", 4, 4, tiffDirectoryType0);
      String[] stringArray0 = tiffDirectory0.getFieldValue(tagInfoAscii0, false);
      assertEquals(4, tiffDirectory0.type);
      assertEquals(0L, tiffDirectory0.getNextDirectoryOffset());
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(341, linkedList0, (-292L), 341, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("0<j7wxQ6ylQ|kHa:", 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue((TagInfo) tagInfoSByte0);
      assertEquals(341, tiffDirectory0.type);
      assertEquals(341L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2, 943, fieldTypeRational0, 943, 0L, byteArray0, byteOrder0, 943);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("GPS text field not encoded as bytes.", 110, 110, tiffDirectoryType0);
      TagInfoRationals tagInfoRationals1 = new TagInfoRationals("9", 2, (-3174), tagInfoRationals0.directoryType);
      Object object0 = tiffDirectory0.getFieldValue((TagInfo) tagInfoRationals1);
      assertEquals(943, tiffDirectory0.type);
      assertNotNull(object0);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeLong0, 58, 58, byteArray0, byteOrder0, 58);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, (-3812L), (byte)7, byteOrder0);
      String string0 = tiffDirectory0.getElementDescription();
      assertEquals("\t[-3810]: Unknown Tag (58, 0x3a), Long, 232: 0, 0\n", string0);
      assertEquals(7L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(58, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(4096, linkedList0, (-1), (-1), byteOrder0);
      tiffDirectory0.getElementDescription();
      assertEquals(4096, tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(943, linkedList0, 943, 943, byteOrder0);
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2, 943, fieldTypeRational0, 943, 0L, byteArray0, byteOrder0, 943);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("GPS text field not encoded as bytes.", 110, 110, tiffDirectoryType0);
      TagInfoRationals tagInfoRationals1 = new TagInfoRationals("9", 2, (-3174), tagInfoRationals0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoRationals1, true);
      assertEquals(943L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(943, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(334, linkedList0, 2304L, (-2609L), byteOrder0);
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(12, "KMkcuYw4L5fB");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-4026), (-4026), fieldTypeShort0, 6, 2304L, byteArray0, byteOrder0, (-1252));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("", 1, (-1269), tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoLongs0, false);
      assertEquals((-2609L), tiffDirectory0.getNextDirectoryOffset());
      assertEquals(334, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1749, 1749, fieldTypeFloat0, 1749, 1749, (byte[]) null, byteOrder0, 1749);
      linkedList0.push(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(3359, linkedList0, 1749, 1004L, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      String string0 = TiffDirectory.description(2);
      assertEquals("Thumbnail", string0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String string0 = TiffDirectory.description(1);
      assertEquals("Sub", string0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String string0 = TiffDirectory.description(0);
      assertEquals("Root", string0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      String string0 = TiffDirectory.description((-1));
      assertEquals("Unknown", string0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      String string0 = TiffDirectory.description((-2));
      assertEquals("Exif", string0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      String string0 = TiffDirectory.description((-3));
      assertEquals("Gps", string0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      String string0 = TiffDirectory.description((-4));
      assertEquals("Interoperability", string0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      TiffDirectory.ImageDataElement tiffDirectory_ImageDataElement0 = new TiffDirectory.ImageDataElement(36L, (-738));
      String string0 = tiffDirectory_ImageDataElement0.getElementDescription();
      assertEquals("ImageDataElement", string0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0L, (-2133L), (ByteOrder) null);
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      try { 
        tiffDirectory0.getRasterData(tiffImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Required field \"SampleFormat\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(324, linkedList0, 12L, 4294967295L, byteOrder0);
      tiffDirectory0.getByteOrder();
      assertEquals(4294967295L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(324, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2130, linkedList0, 2130, 2130, byteOrder0);
      tiffDirectory0.getJpegImageData();
      assertEquals(2130, tiffDirectory0.type);
      assertEquals(2130L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1723, linkedList0, 2749L, 10L, (ByteOrder) null);
      long long0 = tiffDirectory0.getNextDirectoryOffset();
      assertEquals(1723, tiffDirectory0.type);
      assertEquals(10L, long0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(334, linkedList0, 2304L, (-2609L), byteOrder0);
      tiffDirectory0.getDirectoryEntries();
      assertEquals(334, tiffDirectory0.type);
      assertEquals((-2609L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(30, linkedList0, 30, 30, byteOrder0);
      tiffDirectory0.getTiffImage(byteOrder0);
      assertEquals(30, tiffDirectory0.type);
      assertEquals(30L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(324, linkedList0, 12L, 4294967295L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("InkSet", 324, 0, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, false);
      assertEquals(4294967295L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(324, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(58, linkedList0, (-3812L), (byte)0, byteOrder0);
      tiffDirectory0.getTiffImageData();
      assertEquals(0L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(58, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(50708, linkedList0, 0L, 50708, byteOrder0);
      tiffDirectory0.size();
      assertEquals(50708, tiffDirectory0.type);
      assertEquals(50708L, tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2603), linkedList0, (-2603), (-2603), byteOrder0);
      tiffDirectory0.iterator();
      assertEquals((-2603), tiffDirectory0.type);
      assertEquals((-2603L), tiffDirectory0.getNextDirectoryOffset());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(75, linkedList0, 75, 16L, byteOrder0);
      String string0 = tiffDirectory0.description();
      assertEquals(16L, tiffDirectory0.getNextDirectoryOffset());
      assertEquals(75, tiffDirectory0.type);
      assertEquals("Bad Type", string0);
  }
}
