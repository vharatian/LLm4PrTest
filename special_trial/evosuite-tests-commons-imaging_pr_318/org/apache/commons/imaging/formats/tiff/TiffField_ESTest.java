/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:07:16 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.AbstractTiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong8;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(972, (-1499), fieldTypeShort0, 2, (-2312), byteArray0, byteOrder0, 2);
      AbstractTiffElement abstractTiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2312), tiffField0.getOffset());
      assertEquals(972, tiffField0.getTag());
      assertNull(abstractTiffElement0);
      assertEquals((-1499), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      TiffField tiffField0 = new TiffField((-1717986917), 74, fieldTypeShort0, 2444, 0L, byteArray0, byteOrder0, (-1495));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1495), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      TiffField tiffField0 = new TiffField(1, 2112278998, fieldTypeLong8_0, 0L, 1726L, byteArray0, byteOrder0, 3644);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ImageWidth");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Y(7FnpW");
      assertEquals(1726, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(3644, tiffField0.getSortHint());
      assertEquals(2112278998, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 4, ((AbstractFieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeByte0).DOUBLE).SLONG, (byte)0, (-1516), byteArray0, byteOrder0, (byte)0);
      MockFile mockFile0 = new MockFile("m7Hmm!");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(33L, mockFile0.length());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1516), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(37510, (-1), fieldTypeLong0, (-1L), (-2675L), byteArray0, byteOrder0, (-374));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2675), tiffField0.getOffset());
      assertEquals((-374), tiffField0.getSortHint());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(37510, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1987, 1, fieldTypeDouble0.RATIONAL, 0, 0, byteArray0, byteOrder0, 25);
      tiffField0.getLongArrayValue();
      assertEquals(1987, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.LONG8;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2240), (-2240), fieldTypeLong8_0.SRATIONAL, 1802L, (-1717986917), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2240), tiffField0.getDirectoryType());
      assertEquals((-2240), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 917, fieldTypeByte0, 917, (-1L), byteArray0, byteOrder0, (-56));
      String string0 = tiffField0.toString();
      assertEquals(917, tiffField0.getDirectoryType());
      assertEquals((-56), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0 (917 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(6, 407, fieldTypeLong0, 6, 4L, byteArray0, (ByteOrder) null, 2244);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(407, tiffField0.getDirectoryType());
      assertEquals(2244, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1499), 2, fieldTypeShort0, 200L, 4970L, byteArray0, byteOrder0, (-2312));
      tiffField0.getValue();
      assertEquals((-2312), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-1499), tiffField0.getTag());
      assertEquals(4970, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(330, (-3199), fieldTypeLong0, 650, 4990L, byteArray0, byteOrder0, 580);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3199), tiffField0.getDirectoryType());
      assertEquals(4990, tiffField0.getOffset());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getTag());
      assertEquals(580, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(972, (-1499), fieldTypeShort0, 8L, (-2312), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals(972, int0);
      assertEquals((-1499), tiffField0.getDirectoryType());
      assertEquals((-2312), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.SLONG8;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((byte) (-15), (byte)0, fieldTypeLong8_0, 0L, (byte) (-15), byteArray0, (ByteOrder) null, (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-15), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-15), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-90);
      byteArray0[5] = (byte)43;
      byteArray0[6] = (byte)4;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeFloat0.ASCII, 1681L, 2142074369, byteArray0, byteOrder0, (byte)4);
      String string0 = tiffField0.getStringValue();
      assertEquals(4, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2142074369, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2312), fieldTypeByte0, (byte)0, (-2312), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2312), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2312), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(972, (-1499), fieldTypeShort0, 8L, (-2312), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2312), tiffField0.getOffset());
      assertEquals((-1717986917), int0);
      assertEquals((-1499), tiffField0.getDirectoryType());
      assertEquals(972, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3986, (-4612), fieldTypeShort0, (-4612), 1L, byteArray0, byteOrder0, (byte) (-40));
      int int0 = tiffField0.getOffset();
      assertEquals(3986, tiffField0.getTag());
      assertEquals((-4612), tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals((-40), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3121, "ImageWidth");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3121, 1, fieldTypeDouble0, 0L, (-743L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3121, tiffField0.getTag());
      assertEquals((-743), int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2720), 65535, fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, 2147478306);
      tiffField0.getLongValue();
      assertEquals((-2720), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(2147478306, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeByte0, 1L, 2913L, byteArray0, (ByteOrder) null, (byte)36);
      tiffField0.getLongValue();
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(2913, tiffField0.getOffset());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-23);
      TiffField tiffField0 = new TiffField((-431), (-181), fieldTypeShort0, 1, 2892L, byteArray0, (ByteOrder) null, 35);
      tiffField0.getLongValue();
      assertEquals((-431), tiffField0.getTag());
      assertEquals((-181), tiffField0.getDirectoryType());
      assertEquals(2892, tiffField0.getOffset());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2000, "KqPLS");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2255), (-2255), fieldTypeShort0, 1458L, 4L, byteArray0, byteOrder0, 122);
      tiffField0.getLongArrayValue();
      assertEquals((-2255), tiffField0.getDirectoryType());
      assertEquals((-2255), tiffField0.getTag());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-25);
      TiffField tiffField0 = new TiffField(50, (-553), fieldTypeLong0, 64L, (-216L), byteArray0, byteOrder0, 2578);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2578, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-216), tiffField0.getOffset());
      assertEquals((-553), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-94);
      byteArray0[5] = (byte)78;
      TiffField tiffField0 = new TiffField((byte)78, (byte) (-11), fieldTypeLong0.SRATIONAL, 594L, (byte)27, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-308), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(78, tiffField0.getTag());
      assertEquals((-11), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1553, 19, fieldTypeShort0, 1L, (-1821L), byteArray0, (ByteOrder) null, (-439));
      tiffField0.getIntValue();
      assertEquals((-439), tiffField0.getSortHint());
      assertEquals(1553, tiffField0.getTag());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals((-1821), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      TiffField tiffField0 = new TiffField((byte)10, (byte)10, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 4);
      tiffField0.getIntValue();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      TiffField tiffField0 = new TiffField((byte) (-12), (byte) (-12), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 4);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-12), tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-12), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(835, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, (-3414), fieldTypeAscii0, 1348L, (-4429L), byteArray0, byteOrder0, 34019);
      tiffField0.getFieldTypeName();
      assertEquals(17, tiffField0.getTag());
      assertEquals((-3414), tiffField0.getDirectoryType());
      assertEquals(34019, tiffField0.getSortHint());
      assertEquals((-4429), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3, "");
      TiffField tiffField0 = new TiffField(305, 3, fieldTypeAscii0, 2403L, 0, byteArray0, byteOrder0, 3);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(305, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1544, 3038, (AbstractFieldType) null, (-1217L), 5846L, byteArray0, byteOrder0, (byte)15);
      tiffField0.getFieldType();
      assertEquals(1544, tiffField0.getTag());
      assertEquals(3038, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(5846, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1499), 2, fieldTypeShort0, 200L, 4970L, byteArray0, byteOrder0, (-2312));
      tiffField0.getFieldType();
      assertEquals((-1499), tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(4970, tiffField0.getOffset());
      assertEquals((-2312), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2146897063), "");
      TiffField tiffField0 = new TiffField((-2146897063), (-2146897063), fieldTypeShort0, (-2146897063), (-1598L), byteArray0, (ByteOrder) null, (-2146897063));
      tiffField0.getFieldType();
      assertEquals((-1598), tiffField0.getOffset());
      assertEquals((-2146897063), tiffField0.getSortHint());
      assertEquals((-2146897063), tiffField0.getTag());
      assertEquals((-2146897063), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37514, (-1295), fieldTypeFloat0.DOUBLE, 1L, 1101, byteArray0, byteOrder0, (-1295));
      tiffField0.getDoubleValue();
      assertEquals((-1295), tiffField0.getSortHint());
      assertEquals(1101, tiffField0.getOffset());
      assertEquals(37514, tiffField0.getTag());
      assertEquals((-1295), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)32;
      TiffField tiffField0 = new TiffField(33, 2333, fieldTypeShort0, 1L, (byte)32, byteArray0, (ByteOrder) null, (byte)32);
      tiffField0.getDoubleValue();
      assertEquals(2333, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getTag());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-88);
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0.FLOAT, 1L, (-2147483648L), byteArray0, byteOrder0, 2133805408);
      tiffField0.getDoubleValue();
      assertEquals(2133805408, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField((byte) (-15), 50736, fieldTypeLong8_0, 50736, 1705L, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50736, int0);
      assertEquals((-15), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1705, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2312), fieldTypeByte0, (byte)0, (-2312), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2312), tiffField0.getOffset());
      assertEquals((-2312), int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3121, "ImageWidth");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3121, 1, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(3121, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(822, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 822, fieldTypeShort0, (-1), (-2147483648L), byteArray0, byteOrder0, (-1));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(822, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(972, (-1499), fieldTypeShort0, 8L, (-2312), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getBytesLength();
      assertEquals(972, tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1499), tiffField0.getDirectoryType());
      assertEquals((-2312), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.LONG8;
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField(28, 999, ((AbstractFieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeLong8_0).FLOAT).DOUBLE, (-339L), 999, byteArray0, (ByteOrder) null, 532);
      tiffField0.getBytesLength();
      assertEquals(999, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(532, tiffField0.getSortHint());
      assertEquals(999, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2312), fieldTypeByte0, (byte)0, (-2312), byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2312), tiffField0.getOffset());
      assertEquals((-2312), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-431), (-181), fieldTypeShort0, 1, 2892L, byteArray0, (ByteOrder) null, 35);
      tiffField0.getByteArrayValue();
      assertEquals(35, tiffField0.getSortHint());
      assertEquals((-181), tiffField0.getDirectoryType());
      assertEquals((-431), tiffField0.getTag());
      assertEquals(2892, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong8_0, 0L, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-897), (-897), fieldTypeRational0, (-897), (-897), byteArray0, byteOrder0, (-897));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2483, (-1550), fieldTypeRational0, 1L, 30016L, byteArray0, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, (AbstractFieldType) null, 1235L, 977L, byteArray0, byteOrder0, 65001);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1241, 1241, fieldTypeRational0, (-1L), (-1L), byteArray0, byteOrder0, (-1710));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1285), (-1285), fieldTypeLong0, (-1285), (-1285), byteArray0, byteOrder0, (-1285));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1307), (-1307), fieldTypeByte0, 1656L, 1447L, (byte[]) null, byteOrder0, (-1307));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-928), (-928), fieldTypeRational0, (-928), (-928), byteArray0, byteOrder0, (-928));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 16, (AbstractFieldType) null, (-710L), (-710L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-34), fieldTypeLong0, 2164L, 255L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getLongValue();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[296];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-141), (-141), (AbstractFieldType) null, (-141), (-141), byteArray0, byteOrder0, (-141));
      // Undeclared exception!
      try { 
        tiffField0.getLongValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1993), (-1993), fieldTypeRational0, (-1993), (-1993), byteArray0, byteOrder0, (-1993));
      // Undeclared exception!
      try { 
        tiffField0.getLongValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getLongValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[227];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getLongValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getLongArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(576, 576, fieldTypeLong0, 4294967295L, 576, byteArray0, byteOrder0, 576);
      // Undeclared exception!
      try { 
        tiffField0.getLongArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getLongArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1487), (-1487), fieldTypeLong0, (-1487), (-1487), (byte[]) null, byteOrder0, (-1487));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3758), (-3758), fieldTypeShort0, (-3758), (-3758), byteArray0, byteOrder0, (-3758));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 120, fieldTypeAscii0, 1052L, 120, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1359), (-1359), fieldTypeFloat0, (-1359), (-1359), byteArray0, byteOrder0, (-1359));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[227];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2145267462, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-965), (-965), fieldTypeFloat0, (-965), 4970L, byteArray0, (ByteOrder) null, (-965));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, (AbstractFieldType) null, (byte)36, (byte)36, byteArray0, byteOrder0, (-3170));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1689), fieldTypeShort0, (-1689), 944L, byteArray0, byteOrder0, (-1689));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2145267462, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-614), (-614), fieldTypeFloat0, (-614), (-614), byteArray0, byteOrder0, (-614));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(273, 20, fieldTypeAscii0, 273, 20, (byte[]) null, byteOrder0, 20);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeRational0, 4294967295L, 7, byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-2244), (-2244), fieldTypeRational0, (-2244), (-2244), byteArray0, byteOrder0, (-2244));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      TiffField tiffField0 = new TiffField(2352, 2352, fieldTypeByte0, (-1L), 3089L, byteArray0, (ByteOrder) null, 2352);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(", fieldType: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, ", fieldType: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      TiffField tiffField0 = new TiffField(3654, (-1088), fieldTypeLong0, 1L, (-1L), byteArray0, byteOrder0, (-1088));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("x");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "x");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1211, 1211, fieldTypeRational0, 1211, 1211, byteArray0, byteOrder0, 1211);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4445), (-4445), fieldTypeShort0, (-4445), (-4445), byteArray0, byteOrder0, (-4445));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3121, "ImageWidth");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50725, 3121, fieldTypeDouble0, 50725, 0L, (byte[]) null, byteOrder0, (-2677));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3121, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-2677), tiffField0.getSortHint());
      assertEquals(50725, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3121, "ImageWidth");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3121, 1, fieldTypeDouble0, 0L, (-743L), byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-743), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3121, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField((byte) (-15), 50736, fieldTypeLong8_0, 50736, 1711L, byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(41485, 6, fieldTypeLong0, 41485, 4L, byteArray0, (ByteOrder) null, 6);
      tiffField0.getByteOrder();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(41485, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3121, 3121, fieldTypeDouble0, 3121, 3121, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-842), (byte)0, fieldTypeLong8_0, (-3856L), (-61L), byteArray0, (ByteOrder) null, (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-842), tiffField0.getTag());
      assertEquals((-61), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "'");
      TiffField tiffField0 = new TiffField(6, 514, fieldTypeDouble0, 514, 402040L, byteArray0, byteOrder0, (-299));
      tiffField0.getFieldType();
      assertEquals((-299), tiffField0.getSortHint());
      assertEquals(402040, tiffField0.getOffset());
      assertEquals(514, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[146];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3000), (-3000), fieldTypeLong0, (-3000), (-3000), byteArray0, byteOrder0, (-3000));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.SLONG8;
      TiffField tiffField0 = new TiffField(1922, 1922, fieldTypeLong8_0, (-3008L), (-3008L), (byte[]) null, (ByteOrder) null, 1922);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.LONG8;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(21, (-733), fieldTypeLong8_0, 21, 4009L, (byte[]) null, byteOrder0, (-733));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 2244, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 2244);
      int int0 = tiffField0.getTag();
      assertEquals(2244, tiffField0.getSortHint());
      assertEquals(2244, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3121, "ImageWidth");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50725, 3121, fieldTypeDouble0, 50725, 0L, (byte[]) null, byteOrder0, (-2677));
      tiffField0.getCount();
      assertEquals(50725, tiffField0.getTag());
      assertEquals((-2677), tiffField0.getSortHint());
      assertEquals(3121, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 2244, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 2244);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2244, tiffField0.getDirectoryType());
      assertEquals(2244, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[241];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4177, 4177, fieldTypeFloat0, 4177, 4177, byteArray0, byteOrder0, 4177);
      tiffField0.dump();
      assertEquals(4177, tiffField0.getTag());
      assertEquals(4177, tiffField0.getSortHint());
      assertEquals(4177, tiffField0.getOffset());
      assertEquals(4177, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)66, (byte)66, fieldTypeByte0, (byte)66, (byte)66, byteArray0, (ByteOrder) null, (byte)66);
      tiffField0.dump();
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(66, tiffField0.getTag());
      assertEquals(66, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4158, 4158, fieldTypeFloat0, 4158, 4158, byteArray0, byteOrder0, 4158);
      tiffField0.dump();
      assertEquals(4158, tiffField0.getDirectoryType());
      assertEquals(4158, tiffField0.getTag());
      assertEquals(4158, tiffField0.getOffset());
      assertEquals(4158, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(583, 583, fieldTypeDouble0, 583, 583, byteArray0, byteOrder0, 583);
      tiffField0.dump();
      assertEquals(583, tiffField0.getOffset());
      assertEquals(583, tiffField0.getSortHint());
      assertEquals(583, tiffField0.getDirectoryType());
      assertEquals(583, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[228];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      TiffField tiffField0 = new TiffField((-1203), 883, fieldTypeLong0, 883, 0L, byteArray0, byteOrder0, (-1203));
      tiffField0.dump();
      assertEquals((-1203), tiffField0.getSortHint());
      assertEquals((-1203), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(883, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      TiffField tiffField0 = new TiffField(595, 595, fieldTypeAscii0.SHORT, 595, 595, byteArray0, byteOrder0, 595);
      tiffField0.dump();
      assertEquals(595, tiffField0.getTag());
      assertEquals(595, tiffField0.getOffset());
      assertEquals(595, tiffField0.getSortHint());
      assertEquals(595, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeDouble0.SSHORT, 3673L, 0L, byteArray0, byteOrder0, 22);
      tiffField0.dump();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(22, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      TiffField tiffField0 = new TiffField(3152, 3152, fieldTypeAscii0, 3152, 3152, byteArray0, byteOrder0, 3152);
      tiffField0.dump();
      assertEquals(3152, tiffField0.getDirectoryType());
      assertEquals(3152, tiffField0.getOffset());
      assertEquals(3152, tiffField0.getTag());
      assertEquals(3152, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, (-1331), byteArray0, byteOrder0, (-1331));
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1331), tiffField0.getOffset());
      assertEquals((-1331), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(576, 576, fieldTypeLong0, 576, 576, byteArray0, byteOrder0, 576);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x240)", string0);
      assertEquals(576, tiffField0.getOffset());
      assertEquals(576, tiffField0.getSortHint());
      assertEquals(576, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[296];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.LONG8;
      TiffField tiffField0 = new TiffField(50932, 50932, fieldTypeLong8_0, 50932, 50932, byteArray0, byteOrder0, 50932);
      String string0 = tiffField0.getTagName();
      assertEquals("ProfileCalibrationSignature", string0);
      assertEquals(50932, tiffField0.getDirectoryType());
      assertEquals(50932, tiffField0.getOffset());
      assertEquals(50932, tiffField0.getTag());
      assertEquals(50932, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[123];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, 576, fieldTypeAscii0, 1, 4836L, byteArray0, byteOrder0, 1);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(576, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4836, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(583, 583, fieldTypeDouble0, 583, 583, byteArray0, byteOrder0, 583);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@4b8dac51
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeLong8_0, (byte)36, (byte)36, byteArray0, (ByteOrder) null, (byte)36);
      // Undeclared exception!
      try { 
        tiffField0.getLongValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [J cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      TiffField tiffField0 = new TiffField(595, 595, fieldTypeAscii0, 595, 595, byteArray0, byteOrder0, 595);
      try { 
        tiffField0.getLongArrayValue();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unknown value: [Ljava.lang.String;@6326f294 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(541, 541, fieldTypeLong0, 541, 541, byteArray0, byteOrder0, 541);
      tiffField0.getLongArrayValue();
      assertEquals(541, tiffField0.getSortHint());
      assertEquals(541, tiffField0.getTag());
      assertEquals(541, tiffField0.getDirectoryType());
      assertEquals(541, tiffField0.getOffset());
      assertEquals(2164, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(472, 472, fieldTypeShort0, 472, 472, byteArray0, byteOrder0, 472);
      long[] longArray0 = tiffField0.getLongArrayValue();
      assertEquals(472, tiffField0.getOffset());
      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L}, longArray0);
      assertEquals(472, tiffField0.getDirectoryType());
      assertEquals(472, tiffField0.getSortHint());
      assertEquals(472, tiffField0.getTag());
      assertEquals(944, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getLongArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[227];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getLongArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(2020, 2020, fieldTypeLong8_0, 712L, 2020, byteArray0, (ByteOrder) null, 2020);
      tiffField0.getLongArrayValue();
      assertEquals(2020, tiffField0.getDirectoryType());
      assertEquals(2020, tiffField0.getSortHint());
      assertEquals(2020, tiffField0.getTag());
      assertEquals(5696, tiffField0.getBytesLength());
      assertEquals(2020, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(961, 961, fieldTypeFloat0, 961, 961, byteArray0, byteOrder0, 961);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unknown value: [F@68059a5e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(576, 576, fieldTypeLong0, 576, 576, byteArray0, byteOrder0, 576);
      tiffField0.getIntValueOrArraySum();
      assertEquals(576, tiffField0.getOffset());
      assertEquals(576, tiffField0.getDirectoryType());
      assertEquals(2304, tiffField0.getBytesLength());
      assertEquals(576, tiffField0.getSortHint());
      assertEquals(576, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1230, 1230, fieldTypeRational0, 1230, 1230, byteArray0, byteOrder0, 1230);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.LONG8;
      byte[] byteArray0 = new byte[53];
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeLong8_0, (byte)19, (byte)19, byteArray0, (ByteOrder) null, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [J cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4137, 4137, fieldTypeDouble0, 4137, 4137, byteArray0, byteOrder0, 4137);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unknown value: [D@30084310 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(2372, 2372, fieldTypeLong8_0, 2372, 2372, byteArray0, (ByteOrder) null, (-326));
      tiffField0.getIntArrayValue();
      assertEquals(2372, tiffField0.getOffset());
      assertEquals(2372, tiffField0.getTag());
      assertEquals(2372, tiffField0.getDirectoryType());
      assertEquals(18976, tiffField0.getBytesLength());
      assertEquals((-326), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SSHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(576, 576, fieldTypeShort0, 576, 576, byteArray0, byteOrder0, 576);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(576, tiffField0.getSortHint());
      assertEquals(576, tiffField0.getOffset());
      assertEquals(576, tiffField0.getTag());
      assertEquals(1152, tiffField0.getBytesLength());
      assertEquals(576, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      TiffField tiffField0 = new TiffField(5566, (-181), ((AbstractFieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.AbstractFieldType) fieldTypeFloat0).DOUBLE).SRATIONAL, 5566, 1802L, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3121, "ImageWidth");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3121, 50218, fieldTypeDouble0, 1, (-1796L), byteArray0, byteOrder0, 2147478357);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1796), tiffField0.getOffset());
      assertEquals(3121, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2147478357, tiffField0.getSortHint());
      assertEquals(50218, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = AbstractFieldType.ASCII;
      TiffField tiffField0 = new TiffField(595, 595, fieldTypeAscii0, 595, 595, byteArray0, byteOrder0, 595);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4137, 4137, fieldTypeDouble0, 4137, 4137, byteArray0, byteOrder0, 4137);
      tiffField0.getDoubleArrayValue();
      assertEquals(4137, tiffField0.getDirectoryType());
      assertEquals(33096, tiffField0.getBytesLength());
      assertEquals(4137L, tiffField0.getCount());
      assertEquals(4137, tiffField0.getTag());
      assertEquals(4137, tiffField0.getSortHint());
      assertEquals(4137, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      FieldTypeFloat fieldTypeFloat0 = AbstractFieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4190, 4190, fieldTypeFloat0, 4190, 4190, byteArray0, byteOrder0, 4190);
      tiffField0.getDoubleArrayValue();
      assertEquals(4190, tiffField0.getSortHint());
      assertEquals(4190, tiffField0.getDirectoryType());
      assertEquals(16760, tiffField0.getBytesLength());
      assertEquals(4190L, tiffField0.getCount());
      assertEquals(4190, tiffField0.getTag());
      assertEquals(4190, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4158, 4158, fieldTypeLong0, 4158, 4158, byteArray0, byteOrder0, 4158);
      tiffField0.getDoubleArrayValue();
      assertEquals(4158, tiffField0.getDirectoryType());
      assertEquals(4158, tiffField0.getOffset());
      assertEquals(4158, tiffField0.getTag());
      assertEquals(4158, tiffField0.getSortHint());
      assertEquals(16632, tiffField0.getBytesLength());
      assertEquals(4158L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = AbstractFieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(536, 536, fieldTypeShort0, 536, 536, byteArray0, byteOrder0, 536);
      tiffField0.getDoubleArrayValue();
      assertEquals(536L, tiffField0.getCount());
      assertEquals(536, tiffField0.getTag());
      assertEquals(536, tiffField0.getSortHint());
      assertEquals(536, tiffField0.getOffset());
      assertEquals(1072, tiffField0.getBytesLength());
      assertEquals(536, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1202, 1202, fieldTypeRational0, 1202, 1202, byteArray0, byteOrder0, 1202);
      tiffField0.getDoubleArrayValue();
      assertEquals(1202, tiffField0.getSortHint());
      assertEquals(1202, tiffField0.getTag());
      assertEquals(1202, tiffField0.getOffset());
      assertEquals(9616, tiffField0.getBytesLength());
      assertEquals(1202L, tiffField0.getCount());
      assertEquals(1202, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[227];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeByte0, (byte)13, (byte)13, byteArray0, (ByteOrder) null, (byte)13);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unknown value: [B@5e2f6a2c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeLong8_0, (byte)36, (byte)36, byteArray0, (ByteOrder) null, (byte)36);
      tiffField0.dump();
      assertEquals(36, tiffField0.getOffset());
      assertEquals(288, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.IFD8;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2492, (byte)0, fieldTypeLong8_0, (byte)0, 3483L, byteArray0, (ByteOrder) null, 1717986918);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(5, 65535);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Long8", string0);
      assertEquals(3483, tiffField0.getOffset());
      assertEquals(2492, tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(583, 583, fieldTypeDouble0, 583, 583, byteArray0, byteOrder0, 583);
      AbstractTiffElement abstractTiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(583, tiffField0.getDirectoryType());
      assertNotNull(abstractTiffElement0);
      assertEquals(583, tiffField0.getTag());
      assertEquals(583L, abstractTiffElement0.offset);
      assertEquals(583, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(583, 583, fieldTypeDouble0, 583, 583, byteArray0, byteOrder0, 583);
      tiffField0.getFieldTypeName();
      assertEquals(583, tiffField0.getSortHint());
      assertEquals(583, tiffField0.getOffset());
      assertEquals(583, tiffField0.getTag());
      assertEquals(583, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3121, "ImageWidth");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50725, 3121, fieldTypeDouble0, 50725, 0L, (byte[]) null, byteOrder0, (-2677));
      int int0 = tiffField0.getOffset();
      assertEquals((-2677), tiffField0.getSortHint());
      assertEquals(50725, tiffField0.getTag());
      assertEquals(3121, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = AbstractFieldType.SBYTE;
      TiffField tiffField0 = new TiffField(27, (-706), fieldTypeByte0, 4294967242L, 27, byteArray0, byteOrder0, (-706));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      FieldTypeLong8 fieldTypeLong8_0 = AbstractFieldType.LONG8;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(33, (byte)32, fieldTypeLong8_0, 33, (byte)32, byteArray0, (ByteOrder) null, 33);
      int int0 = tiffField0.getSortHint();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, int0);
      assertEquals(264, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = AbstractFieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1197, 1197, fieldTypeRational0, 1197, 1197, byteArray0, byteOrder0, 1197);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1197, tiffField0.getSortHint());
      assertEquals(1197, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
      assertEquals("1197 (0x4ad: Unknown Tag): ", string0);
      assertEquals(1197, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = AbstractFieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3121, 3121, fieldTypeDouble0, 3121, 3121, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = AbstractFieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 2244, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 2244);
      tiffField0.getIntArrayValue();
      assertEquals(2244, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2244, tiffField0.getDirectoryType());
  }
}
