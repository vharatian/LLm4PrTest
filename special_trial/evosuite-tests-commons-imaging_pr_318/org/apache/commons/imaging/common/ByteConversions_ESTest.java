/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:00:52 GMT 2025
 */

package org.apache.commons.imaging.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteOrder;
import org.apache.commons.imaging.common.ByteConversions;
import org.apache.commons.imaging.common.RationalNumber;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ByteConversions_ESTest extends ByteConversions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((-1L), byteOrder0);
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, false);
      assertEquals(1.0, rationalNumber0.doubleValue(), 0.01);
      
      RationalNumber[] rationalNumberArray0 = new RationalNumber[7];
      rationalNumberArray0[0] = rationalNumber0;
      rationalNumberArray0[1] = rationalNumber0;
      rationalNumberArray0[2] = rationalNumber0;
      rationalNumberArray0[3] = rationalNumber0;
      rationalNumberArray0[4] = rationalNumber0;
      rationalNumberArray0[5] = rationalNumber0;
      rationalNumberArray0[6] = rationalNumber0;
      byte[] byteArray1 = ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
      RationalNumber[] rationalNumberArray1 = ByteConversions.toRationals(byteArray1, byteOrder0, false);
      assertEquals(7, rationalNumberArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte)107;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, false);
      assertEquals(0L, rationalNumber0.numerator);
      assertFalse(rationalNumber0.unsignedType);
      assertEquals(7012352L, rationalNumber0.divisor);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-37);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      float[] floatArray0 = ByteConversions.toFloats(byteArray0, byteOrder0);
      assertArrayEquals(new float[] {7.8562E-41F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-16);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      float[] floatArray0 = ByteConversions.toFloats(byteArray0, byteOrder0);
      assertArrayEquals(new float[] {2.2040519E-38F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      float[] floatArray0 = ByteConversions.toFloats(byteArray0, byteOrder0);
      assertArrayEquals(new float[] {4.7683716E-7F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(1866L, byteOrder0);
      RationalNumber[] rationalNumberArray0 = new RationalNumber[5];
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, false);
      rationalNumberArray0[0] = rationalNumber0;
      rationalNumberArray0[1] = rationalNumber0;
      rationalNumberArray0[2] = rationalNumberArray0[0];
      rationalNumberArray0[3] = rationalNumber0;
      rationalNumberArray0[4] = rationalNumberArray0[2];
      byte[] byteArray1 = ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
      double[] doubleArray0 = ByteConversions.toDoubles(byteArray1, byteOrder0);
      assertArrayEquals(new double[] {9.22E-321, 9.22E-321, 9.22E-321, 9.22E-321, 9.22E-321}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((-1593L), byteOrder0);
      double[] doubleArray0 = ByteConversions.toDoubles(byteArray0, byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-7), (byte) (-57)}, byteArray0);
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes((long) (byte) (-47), byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-47), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short) (-3707);
      byte[] byteArray0 = ByteConversions.toBytes(shortArray0, byteOrder0);
      assertEquals(12, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((short) (byte) (-1), byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      RationalNumber rationalNumber0 = new RationalNumber((-3311), (-3311));
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumber0, byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-13), (byte)17, (byte) (-1), (byte) (-1), (byte) (-13), (byte)17}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int[] intArray0 = new int[9];
      intArray0[0] = (int) (byte) (-7);
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      assertEquals(36, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      float[] floatArray0 = new float[7];
      floatArray0[0] = (-2698.5615F);
      byte[] byteArray0 = ByteConversions.toBytes(floatArray0, byteOrder0);
      assertEquals(28, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      float[] floatArray0 = new float[1];
      floatArray0[0] = (-1.0F);
      byte[] byteArray0 = ByteConversions.toBytes(floatArray0, byteOrder0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-128), (byte) (-65)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(doubleArray0, byteOrder0);
      assertEquals(56, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((double) (-1.0F), byteOrder0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte) (-16), (byte) (-65)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      RationalNumber rationalNumber0 = new RationalNumber((byte) (-108), (byte)6);
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumber0, byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-108), (byte) (-1), (byte) (-1), (byte) (-1), (byte)6, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      int[] intArray0 = ByteConversions.toUInt16s(byteArray0, byteOrder0);
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      float[] floatArray0 = new float[1];
      byte[] byteArray0 = ByteConversions.toBytes(floatArray0, byteOrder0);
      int int0 = ByteConversions.toUInt16(byteArray0, byteOrder0);
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-70);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = ByteConversions.toUInt16(byteArray0, byteOrder0);
      assertEquals(186, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-16);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int int0 = ByteConversions.toUInt16(byteArray0, (int) (byte)0, byteOrder0);
      assertEquals(240, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      short[] shortArray0 = ByteConversions.toShorts(byteArray0, byteOrder0);
      assertEquals(0, shortArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      short short0 = ByteConversions.toShort(byteArray0, byteOrder0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      short short0 = ByteConversions.toShort(byteArray0, byteOrder0);
      assertEquals((short)13568, short0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = ByteConversions.toBytes(707.247359262935, (ByteOrder) null);
      short short0 = ByteConversions.toShort(byteArray0, (ByteOrder) null);
      assertEquals((short) (-31168), short0);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      RationalNumber[] rationalNumberArray0 = ByteConversions.toRationals(byteArray0, byteOrder0, true);
      assertEquals(0, rationalNumberArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = ByteConversions.toBytes(707.247359262935, (ByteOrder) null);
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, (ByteOrder) null, true);
      assertEquals(2.8015638675153007, rationalNumber0.doubleValue(), 0.01);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      byteArray0[4] = (byte) (-38);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, false);
      assertEquals((-1.394736842105263), rationalNumber0.doubleValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      long[] longArray0 = ByteConversions.toLongs(byteArray0, byteOrder0);
      assertArrayEquals(new long[] {}, longArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      long long0 = ByteConversions.toLong(byteArray0, byteOrder0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(1866L, byteOrder0);
      long long0 = ByteConversions.toLong(byteArray0, byteOrder0);
      assertEquals(1866L, long0);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((-1L), byteOrder0);
      long long0 = ByteConversions.toLong(byteArray0, byteOrder0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = ByteConversions.toInts(byteArray0, byteOrder0);
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = ByteConversions.toInt(byteArray0, byteOrder0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int int0 = ByteConversions.toInt(byteArray0, byteOrder0);
      assertEquals(889192448, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = ByteConversions.toBytes(707.247359262935, (ByteOrder) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = ByteConversions.toInt(byteArray0, byteOrder0);
      assertEquals(8, byteArray0.length);
      assertEquals((-98990528), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = ByteConversions.toBytes(2197, (ByteOrder) null);
      int int0 = ByteConversions.toInt(byteArray0, 0, (ByteOrder) null);
      assertEquals(4, byteArray0.length);
      assertEquals(2197, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((-2600), byteOrder0);
      int int0 = ByteConversions.toInt(byteArray0, (int) (byte)0, byteOrder0);
      assertEquals(4, byteArray0.length);
      assertEquals((-2600), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      float[] floatArray0 = ByteConversions.toFloats(byteArray0, byteOrder0);
      assertArrayEquals(new float[] {}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(1866L, byteOrder0);
      float float0 = ByteConversions.toFloat(byteArray0, byteOrder0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)7, (byte)74}, byteArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-16);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      float float0 = ByteConversions.toFloat(byteArray0, byteOrder0);
      assertEquals(3.36E-43F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = ByteConversions.toBytes(707.247359262935, (ByteOrder) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      float float0 = ByteConversions.toFloat(byteArray0, byteOrder0);
      assertEquals((-1.9928608E35F), float0, 0.01F);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      double[] doubleArray0 = ByteConversions.toDoubles(byteArray0, byteOrder0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(0L, byteOrder0);
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-52);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertEquals(1.01E-321, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-42);
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertEquals((-1.8347988927920572E106), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(1866L, byteOrder0);
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, false);
      RationalNumber[] rationalNumberArray0 = new RationalNumber[2];
      rationalNumberArray0[0] = rationalNumber0;
      rationalNumberArray0[1] = rationalNumber0;
      byte[] byteArray1 = ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
      long[] longArray0 = ByteConversions.toLongs(byteArray1, byteOrder0);
      assertEquals(16, byteArray1.length);
      assertArrayEquals(new long[] {1866L, 1866L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int[] intArray0 = new int[0];
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16s((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16((byte[]) null, 2406, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16(byteArray0, 10, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toShorts((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toShort((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ByteConversions.toRational(byteArray0, byteOrder0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toLongs((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toLong((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes((short)1209, byteOrder0);
      // Undeclared exception!
      try { 
        ByteConversions.toInt(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toInt((byte[]) null, 1634, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((short)104, byteOrder0);
      // Undeclared exception!
      try { 
        ByteConversions.toInt(byteArray0, (int) (short)104, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 104
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toFloat((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ByteConversions.toDouble(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int int0 = ByteConversions.toUInt16(byteArray0, (int) (byte)0, byteOrder0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.factoryMethod(1700L, 0L);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumber0, byteOrder0);
      int int0 = ByteConversions.toUInt16(byteArray0, 6, byteOrder0);
      assertEquals(0, int0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)1, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(107L, byteOrder0);
      int int0 = ByteConversions.toInt(byteArray0, 0, byteOrder0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)107}, byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      short[] shortArray0 = ByteConversions.toShorts(byteArray0, byteOrder0);
      assertArrayEquals(new short[] {(short)0, (short)0}, shortArray0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      int[] intArray0 = ByteConversions.toInts(byteArray0, byteOrder0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      short[] shortArray0 = new short[0];
      byte[] byteArray0 = ByteConversions.toBytes(shortArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      RationalNumber[] rationalNumberArray0 = new RationalNumber[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      RationalNumber[] rationalNumberArray0 = new RationalNumber[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      float[] floatArray0 = new float[0];
      byte[] byteArray0 = ByteConversions.toBytes(floatArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes((float) (short)100, byteOrder0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-56), (byte)66}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      double[] doubleArray0 = new double[0];
      byte[] byteArray0 = ByteConversions.toBytes(doubleArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toFloats((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toRational((byte[]) null, byteOrder0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((short[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toDoubles((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((RationalNumber) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toInt((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toRationals((byte[]) null, byteOrder0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((int[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      int[] intArray0 = ByteConversions.toInts(byteArray0, byteOrder0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toShort(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toDouble((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toInts((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((float[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((double[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toLong(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = ByteConversions.toUInt16s(byteArray0, byteOrder0);
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        ByteConversions.toFloat(byteArray0, (ByteOrder) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }
}
