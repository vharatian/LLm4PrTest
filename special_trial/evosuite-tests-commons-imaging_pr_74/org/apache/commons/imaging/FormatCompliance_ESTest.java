/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 23:51:49 GMT 2025
 */

package org.apache.commons.imaging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import org.apache.commons.imaging.FormatCompliance;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FormatCompliance_ESTest extends FormatCompliance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance("0w$#z}w");
      boolean boolean0 = formatCompliance0.checkBounds("", (-985), 1, (-985));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance("!");
      boolean boolean0 = formatCompliance0.checkBounds("", 132, (-395), (-395));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)110;
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray1 = new byte[2];
      boolean boolean0 = formatCompliance0.compareBytes(": Unexpected value: (valid: ", byteArray0, byteArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      formatCompliance0.addComment("<Mjwt`kF\"^", 1226);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      // Undeclared exception!
      try { 
        formatCompliance0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance("", true);
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = new byte[1];
      try { 
        formatCompliance0.compareBytes("_tbl3c`'{MR4@s", byteArray0, byteArray1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // _tbl3c`'{MR4@s: Unexpected length: (expected: 0, actual: 1)
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      // Undeclared exception!
      try { 
        formatCompliance0.compareBytes("zt", (byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      // Undeclared exception!
      try { 
        formatCompliance0.compare("1u^Uk}Jw8", (int[]) null, 1309);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance((String) null, true);
      try { 
        formatCompliance0.compare((String) null, 492, 2833);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null: Unexpected value: (valid: 492 (1ec), actual: 2833 (b11))
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance(":40_`eOl_>Np[N", true);
      int[] intArray0 = new int[0];
      try { 
        formatCompliance0.compare(":40_`eOl_>Np[N", intArray0, (-685));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // :40_`eOl_>Np[N: Unexpected value: (valid: , actual: -685 (fffffd53))
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      int[] intArray0 = new int[3];
      intArray0[2] = 602;
      boolean boolean0 = formatCompliance0.compare("", intArray0, 602);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance("e<|aDSxZ8d0");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("SnMZF~_(eJ4:ci&j]");
      formatCompliance0.dump((PrintWriter) mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance("e<|aDSxZ8d0");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("SnMZF~_(eJ4:ci&j]");
      formatCompliance0.compare("SnMZF~_(eJ4:ci&j]", 2268, 298);
      formatCompliance0.dump((PrintWriter) mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance((String) null, true);
      try { 
        formatCompliance0.addComment((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      int[] intArray0 = new int[6];
      boolean boolean0 = formatCompliance0.compare("<l<J )V", intArray0, 123);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      boolean boolean0 = formatCompliance0.compare("?\u0004(", 123, 123);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      boolean boolean0 = formatCompliance0.checkBounds(")", 2140, 2140, 2140);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      boolean boolean0 = formatCompliance0.checkBounds("org.apache.commons.io.filefilter.HiddenFileFilter", 43, 43, 978);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance("The FileFilter must not be null", true);
      try { 
        formatCompliance0.checkBounds("The FileFilter must not be null", 4028, 4028, (-3127));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The FileFilter must not be null: bounds check: 4028 <= -3127 <= 4028: false
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[1];
      byteArray0[0] = (byte) (-5);
      boolean boolean0 = formatCompliance0.compareBytes((String) null, byteArray0, byteArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[0];
      boolean boolean0 = formatCompliance0.compareBytes("aY93e;TVFYRg`bzxP.", byteArray0, byteArray1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = formatCompliance0.compareBytes((String) null, byteArray0, byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      formatCompliance0.addComment("org.apache.commons.io.filefilter.AbstractFileFilter");
      formatCompliance0.dump();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FormatCompliance formatCompliance0 = FormatCompliance.getDefault();
      String string0 = formatCompliance0.toString();
      assertEquals("Format Compliance: ignore\n\tNo comments.\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FormatCompliance formatCompliance0 = new FormatCompliance("x~*\nk", true);
      try { 
        formatCompliance0.addComment("x~*\nk", 43);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // x~*
         // k: 43 (2b)
         //
         verifyException("org.apache.commons.imaging.FormatCompliance", e);
      }
  }
}
