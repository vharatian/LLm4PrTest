/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 23:59:34 GMT 2025
 */

package org.apache.commons.imaging.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.awt.image.RasterFormatException;
import org.apache.commons.imaging.common.ImageBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ImageBuilder_ESTest extends ImageBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(78, 78, false);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(77, 855, 1, 78);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage y is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(31, 31, false);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(16711680, 31, 31, 16711680);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage x is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(74, 74, false);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(74, 74, 74, (-611));
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage height
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(78, 78, false);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(78, 0, 0, 0);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage width
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImageBuilder imageBuilder0 = null;
      try {
        imageBuilder0 = new ImageBuilder(2486, 0, false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // zero or negative height value
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImageBuilder imageBuilder0 = null;
      try {
        imageBuilder0 = new ImageBuilder(0, (-41), false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // zero or negative width value
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(78, 78, false);
      imageBuilder0.setRGB(1722, 0, 25);
      assertEquals(78, imageBuilder0.getHeight());
      assertEquals(78, imageBuilder0.getWidth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(78, 78, false);
      imageBuilder0.getRGB(3777, 1);
      assertEquals(78, imageBuilder0.getWidth());
      assertEquals(78, imageBuilder0.getHeight());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(16711680, 16711680, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(88, 88, 88, 88);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(16711680, 16711680, false);
      // Undeclared exception!
      try { 
        imageBuilder0.getBufferedImage();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Dimensions (width=16711680 height=16711680) are too large
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImageBuilder imageBuilder0 = null;
      try {
        imageBuilder0 = new ImageBuilder(65254, 65254, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(122, 122, false);
      BufferedImage bufferedImage0 = imageBuilder0.getSubimage(77, 1, 1, 77);
      assertEquals(122, imageBuilder0.getHeight());
      assertEquals(77, bufferedImage0.getHeight());
      assertEquals(1, bufferedImage0.getType());
      assertEquals(122, imageBuilder0.getWidth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(230, 230, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(64, 64, 64, 230);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (y+height) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(206, 206, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(77, 206, 77, 77);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage y is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(34, 4, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(4, (-51), 4, 34);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage y is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(761, 761, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(416, 761, 416, 416);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (x+width) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(690, 690, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(690, 690, 690, 690);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage x is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(88, 88, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage((-950), (-950), 88, 88);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage x is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(820, 62, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(62, 52, 60, 0);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage height
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(127, 127, false);
      // Undeclared exception!
      try { 
        imageBuilder0.getSubimage(127, 127, (-3391), 127);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage width
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(820, 62, true);
      assertEquals(820, imageBuilder0.getWidth());
      assertEquals(62, imageBuilder0.getHeight());
      
      BufferedImage bufferedImage0 = imageBuilder0.getSubimage(0, 0, 820, 62);
      assertEquals(62, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
      assertEquals(820, bufferedImage0.getTileWidth());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImageBuilder imageBuilder0 = null;
      try {
        imageBuilder0 = new ImageBuilder(690, (-2917), false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // zero or negative height value
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImageBuilder imageBuilder0 = null;
      try {
        imageBuilder0 = new ImageBuilder((-1903), (-1903), false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // zero or negative width value
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(78, 78, false);
      // Undeclared exception!
      try { 
        imageBuilder0.setRGB(78, 78, 4742);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6162
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(78, 78, false);
      int int0 = imageBuilder0.getWidth();
      assertEquals(78, int0);
      assertEquals(78, imageBuilder0.getHeight());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(820, 62, true);
      BufferedImage bufferedImage0 = imageBuilder0.getBufferedImage();
      assertEquals(820, bufferedImage0.getWidth());
      assertEquals(820, imageBuilder0.getWidth());
      assertEquals(62, imageBuilder0.getHeight());
      assertEquals(62, bufferedImage0.getTileHeight());
      assertEquals(3, bufferedImage0.getTransparency());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(209, 209, true);
      // Undeclared exception!
      try { 
        imageBuilder0.getRGB(65280, 77);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 81373
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImageBuilder imageBuilder0 = new ImageBuilder(855, 1, true);
      int int0 = imageBuilder0.getHeight();
      assertEquals(1, int0);
      assertEquals(855, imageBuilder0.getWidth());
  }
}
