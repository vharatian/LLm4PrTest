/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:24:51 GMT 2025
 */

package org.apache.commons.imaging.color;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.imaging.color.ColorCieLuv;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ColorCieLuv_ESTest extends ColorCieLuv_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv((-457.0), (-457.0), (-457.0));
      colorCieLuv0.hashCode();
      assertEquals((-457.0), colorCieLuv0.v, 0.01);
      assertEquals((-457.0), colorCieLuv0.u, 0.01);
      assertEquals((-457.0), colorCieLuv0.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.GREEN;
      colorCieLuv0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, (-1390.9), 0.0);
      ColorCieLuv colorCieLuv1 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertFalse(boolean0);
      assertFalse(colorCieLuv1.equals((Object)colorCieLuv0));
      assertEquals(0.0, colorCieLuv0.v, 0.01);
      assertEquals(0.0, colorCieLuv0.L, 0.01);
      assertEquals((-1390.9), colorCieLuv0.u, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(0.0, 0.0, 3692.0793219202);
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      assertFalse(colorCieLuv0.equals((Object)colorCieLuv1));
      assertFalse(boolean0);
      assertEquals(0.0, colorCieLuv1.u, 0.01);
      assertEquals(0.0, colorCieLuv0.v, 0.01);
      assertEquals(0.0, colorCieLuv1.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv(32.303, (-9.4), (-9.4));
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      assertFalse(colorCieLuv0.equals((Object)colorCieLuv1));
      assertEquals((-9.4), colorCieLuv1.u, 0.01);
      assertEquals((-9.4), colorCieLuv1.v, 0.01);
      assertEquals(32.303, colorCieLuv1.L, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.BLUE;
      ColorCieLuv colorCieLuv1 = new ColorCieLuv((-9.4), (-130.358), 0.0);
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertFalse(boolean0);
      assertEquals((-130.358), colorCieLuv1.u, 0.01);
      assertEquals(0.0, colorCieLuv1.v, 0.01);
      assertEquals((-9.4), colorCieLuv1.L, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.GREEN;
      String string0 = colorCieLuv0.toString();
      assertEquals("{L: 87.737, u: -83.08, v: 107.401}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      ColorCieLuv colorCieLuv1 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 100.0, 0.0);
      ColorCieLuv colorCieLuv1 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertEquals(0.0, colorCieLuv0.L, 0.01);
      assertEquals(100.0, colorCieLuv0.u, 0.01);
      assertFalse(colorCieLuv1.equals((Object)colorCieLuv0));
      assertFalse(boolean0);
      assertEquals(0.0, colorCieLuv0.v, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.GREEN;
      ColorCieLuv colorCieLuv1 = ColorCieLuv.WHITE;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 0.0);
      Object object0 = new Object();
      boolean boolean0 = colorCieLuv0.equals(object0);
      assertEquals(0.0, colorCieLuv0.L, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorCieLuv0.v, 0.01);
      assertEquals(0.0, colorCieLuv0.u, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.WHITE;
      boolean boolean0 = colorCieLuv0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = ColorCieLuv.GREEN;
      boolean boolean0 = colorCieLuv0.equals(colorCieLuv0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColorCieLuv colorCieLuv0 = new ColorCieLuv(0.0, 0.0, 4395.462209);
      ColorCieLuv colorCieLuv1 = ColorCieLuv.BLACK;
      boolean boolean0 = colorCieLuv1.equals(colorCieLuv0);
      assertFalse(colorCieLuv0.equals((Object)colorCieLuv1));
      assertEquals(0.0, colorCieLuv0.u, 0.01);
      assertEquals(4395.462209, colorCieLuv0.v, 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, colorCieLuv0.L, 0.01);
  }
}
