/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 03:41:12 GMT 2025
 */

package org.apache.commons.imaging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.color.ICC_Profile;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import java.util.Stack;
import org.apache.commons.imaging.FormatCompliance;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.ImageFormats;
import org.apache.commons.imaging.Imaging;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Imaging_ESTest extends Imaging_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte) (-75);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getImageSize((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        Imaging.getAllBufferedImages(inputStream0, "-VF|/e:c%jwkT)!");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Z$nyk=Lb");
      MockFile mockFile1 = new MockFile(mockFile0, ">vt.pgm");
      boolean boolean0 = Imaging.hasImageFileExtension((File) mockFile1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(".wbmp", byteArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String string0 = Imaging.getXmpXml((ByteSource) byteSourceArray0, (Map<String, Object>) hashMap0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("e.hdr.ppm", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      ImageMetadata imageMetadata0 = Imaging.getMetadata(inputStream0, "e.hdr.ppm");
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".icns/.icns");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "SDl(jpGfvfW%");
      MockFile mockFile0 = new MockFile(".icns", ".icns");
      FormatCompliance formatCompliance0 = Imaging.getFormatCompliance((File) mockFile0);
      assertNull(formatCompliance0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        Imaging.guessFormat(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("58]Vpi_Q", (byte[]) null);
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Invalid Byte Pair.");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.guessFormat((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      File file0 = MockFile.createTempFile(".pnm", ".pnm");
      try { 
        Imaging.guessFormat(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      try { 
        Imaging.getXmpXml(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(".gif", byteArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "#2^[d`jGo>sKV");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceFile0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 105, 472);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getXmpXml((InputStream) byteArrayInputStream0, ".xbm", (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        Imaging.getXmpXml((InputStream) pipedInputStream0, "<.Z");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((File) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      try { 
        Imaging.getXmpXml((File) mockFile0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      File file0 = MockFile.createTempFile("z$nyk=lb.pam", "z$nyk=lb.pam");
      try { 
        Imaging.getXmpXml(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getMetadata(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getMetadata(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Hashtable<PushbackInputStream, PushbackInputStream> hashtable0 = new Hashtable<PushbackInputStream, PushbackInputStream>();
      Enumeration<PushbackInputStream> enumeration0 = hashtable0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getMetadata((InputStream) sequenceInputStream0, "$a#or]SDXuLd", (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      File file0 = MockFile.createTempFile(" (|", "W&%C0");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(file0);
      InputStream inputStream0 = byteSourceFile0.getInputStream();
      try { 
        Imaging.getMetadata(inputStream0, "W&%C0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-80), (byte)52);
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) byteArrayInputStream0, ".pam");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getMetadata((File) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      MockFile mockFile0 = new MockFile("invalid byte pair..pam");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getMetadata((File) mockFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".tif", "4)O}_hB Zb_UpZ");
      try { 
        Imaging.getMetadata((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getImageSize(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2054), 856);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "UQSf.fA:Fz+x=");
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      MockFile mockFile0 = new MockFile("{t,@.ico", "{t,@.ico");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getImageSize((ByteSource) byteSourceFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      File file0 = MockFile.createTempFile(".ppm.jpg", "E=2div^gBa;,f)._G");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      try { 
        Imaging.getImageSize((InputStream) mockFileInputStream0, "Ga?", (Map<String, Object>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      File file0 = MockFile.createTempFile("t\"p]D';V3h5L2S+c.", "t\"p]D';V3h5L2S+c.");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      try { 
        Imaging.getImageSize((InputStream) mockFileInputStream0, "invalid wbmp file.cur");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      File file0 = MockFile.createTempFile("cdc", "cdc");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getImageSize(file0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getImageSize((File) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      File file0 = MockFile.createTempFile("3Xy/Ughj+l", "3Xy/Ughj+l");
      try { 
        Imaging.getImageSize(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getImageInfo(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(".pam", (byte[]) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("<`mE7", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      try { 
        Imaging.getImageInfo("y&.pcx", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 5 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getImageInfo((InputStream) byteArrayInputStream0, "8:&8yVAoVFQqSy'lLq", (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-61), 376);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((InputStream) byteArrayInputStream0, "compression");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      MockFile mockFile0 = new MockFile("invalid byte pair..pam", ".jpg");
      File file0 = MockFile.createTempFile(",hasMask=", "jdX{", (File) mockFile0);
      try { 
        Imaging.getImageInfo(file0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      File file0 = MockFile.createTempFile("3Xy/Ughj+l", "3Xy/Ughj+l");
      try { 
        Imaging.getImageInfo(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((byte[]) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      try { 
        Imaging.getICCProfileBytes(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((File) null, (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam", ".pam");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getICCProfileBytes((File) mockFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      MockFile mockFile0 = new MockFile("[char[]: ");
      try { 
        Imaging.getICCProfileBytes((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((byte[]) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("Rax^O<C*8?4@b", byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("bIw&!5&", (byte[]) null);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "PAM header has no HEIGHT value");
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceInputStream0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam", ".pam");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStream0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getICCProfile((InputStream) pushbackInputStream0, "", (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      File file0 = MockFile.createTempFile(".pam4.pam", "");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getICCProfile(file0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam", ".pam");
      try { 
        Imaging.getICCProfile((File) mockFile0, (Map<String, Object>) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      File file0 = MockFile.createTempFile("invalid byte pair..pam", "invalid byte pair..pam", (File) null);
      try { 
        Imaging.getICCProfile(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam", ".pam");
      try { 
        Imaging.getICCProfile((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      File file0 = MockFile.createTempFile("3Xy/Ughj+l", "3Xy/Ughj+l");
      try { 
        Imaging.getFormatCompliance(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam", ".pam");
      try { 
        Imaging.getFormatCompliance((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((byte[]) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        Imaging.getBufferedImage((InputStream) byteArrayInputStream0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      File file0 = MockFile.createTempFile("C6~g}Seb/wwot4", "C6~g}Seb/wwot4");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(file0);
      InputStream inputStream0 = byteSourceFile0.getInputStream();
      try { 
        Imaging.getBufferedImage(inputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      File file0 = MockFile.createTempFile("Couldn't read magic nCmbers to gess formt.", "Couldn't read magic nCmbers to gess formt.");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getBufferedImage(file0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((File) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      File file0 = MockFile.createTempFile("}<[q&?{#Bu", "}<[q&?{#Bu");
      try { 
        Imaging.getBufferedImage(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Stack<PipedInputStream> stack0 = new Stack<PipedInputStream>();
      Enumeration<PipedInputStream> enumeration0 = stack0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        Imaging.getAllBufferedImages((InputStream) sequenceInputStream0, "3Xy/Ughj+l");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) dataInputStream0, "d eof");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Bitmap Header Size", "");
      try { 
        Imaging.getAllBufferedImages((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Unknown Format: ");
      try { 
        Imaging.dumpImageFile((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        Imaging.getBufferedImage((InputStream) mockFileInputStream0, (Map<String, Object>) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("rD%!sbAQXy2c", byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertEquals(ImageFormats.TIFF, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(".wbmp", byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(".wbmp", byteArray0);
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("DEPTH", byteArray0);
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) null);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension("58]Vpi_Q");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getImageSize((byte[]) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getMetadata((InputStream) mockFileInputStream0, "2GK|O%tq]=Pr>P-:BGQ", (Map<String, Object>) hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getICCProfileBytes(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getICCProfile(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam", ".pam");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getImageInfo((File) mockFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        Imaging.getXmpXml(byteArray0, (Map<String, Object>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((File) null, (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getImageSize((InputStream) mockFileInputStream0, "Couldn't read magic numbers to guess format.", (Map<String, Object>) hashMap0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      File file0 = MockFile.createTempFile(".xpm", ".xpm");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getXmpXml(file0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "4UP+2n:");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>(37);
      try { 
        Imaging.getImageSize((File) mockFile0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      File file0 = MockFile.createTempFile("j\"a6", "Parsing XBM file failed, no 'char' or 'short' token", (File) null);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getMetadata(file0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      File file0 = MockFile.createTempFile("3Xy/Ughj+l", "org.apache.commons.imaging.Imaging");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getICCProfileBytes(file0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.DCX;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.writeImageToBytes((BufferedImage) null, imageFormats0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.PaletteFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(".io.ico", byteArray0);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      ICC_Profile iCC_Profile0 = Imaging.getICCProfile((ByteSource) byteSourceArray0, (Map<String, Object>) hashtable0);
      assertNull(iCC_Profile0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)35;
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension(" (|.pcc");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      boolean boolean0 = Imaging.hasImageFileExtension((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((File) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-21), (byte) (-21));
      try { 
        Imaging.getXmpXml((InputStream) byteArrayInputStream0, "{v-a2\"");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      File file0 = MockFile.createTempFile("SvTA2SO$|_6A}G7Dg", "SvTA2SO$|_6A}G7Dg");
      try { 
        Imaging.getICCProfileBytes(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam");
      try { 
        Imaging.getXmpXml((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        Imaging.getICCProfile((InputStream) mockFileInputStream0, ".wbmp");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".pam4.pQAam", ".pam4.pQAam");
      try { 
        Imaging.getBufferedImage((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        Imaging.getImageInfo("B^>\"\"[X8ws`", byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ImageFormat imageFormat0 = Imaging.guessFormat(byteArray0);
      try { 
        Imaging.writeImageToBytes((BufferedImage) null, imageFormat0, (Map<String, Object>) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown Format: UNKNOWN
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        Imaging.getFormatCompliance(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((byte[]) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        Imaging.getImageInfo((InputStream) pipedInputStream0, "[zSOSnK4`ptf%FCL");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getICCProfile((InputStream) pipedInputStream0, ".pam4.pam", (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        Imaging.getBufferedImage(byteArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      MockFile mockFile0 = new MockFile("R]9T1\"muoJ");
      try { 
        Imaging.getImageInfo((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      File file0 = MockFile.createTempFile(".pam4.pam", ".pam4.pam");
      try { 
        Imaging.getAllBufferedImages(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      File file0 = MockFile.createTempFile("sX:%=4#EMXe", "sX:%=4#EMXe", (File) null);
      try { 
        Imaging.dumpImageFile(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        Imaging.getAllBufferedImages(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      MockFile mockFile0 = new MockFile("PEa;h2ML6UB_e");
      try { 
        Imaging.getImageSize((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      try { 
        Imaging.getImageInfo(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getImageInfo("A$8dKr{Byh.K\"sc", byteArray0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      File file0 = MockFile.createTempFile("No Segments Found.", (String) null);
      try { 
        Imaging.getMetadata(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      MockFile mockFile0 = new MockFile((String) null, "XAj5R:}2{");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getBufferedImage((File) mockFile0, (Map<String, Object>) hashtable0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      MockFile mockFile0 = new MockFile("FILENAME", "FILENAME");
      try { 
        Imaging.guessFormat((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        Imaging.getMetadata(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getXmpXml((InputStream) null, "ughj+l.cur", (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      try { 
        Imaging.getImageInfo((InputStream) null, "TGA", (Map<String, Object>) hashtable0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      try { 
        Imaging.getBufferedImage((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(55);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      try { 
        Imaging.getImageSize((InputStream) pushbackInputStream0, "r#9-_\"}0aKyAU");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        Imaging.getMetadata((byte[]) null, (Map<String, Object>) hashtable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        Imaging.getMetadata((InputStream) mockFileInputStream0, "profileSizy");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }
}
