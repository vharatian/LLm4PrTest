/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:57:39 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.fieldtypes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteOrder;
import org.apache.commons.imaging.common.RationalNumber;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class FieldTypeRational_ESTest extends FieldTypeRational_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeRational0, 0L, 816L, byteArray0, byteOrder0, 1008);
      Object object0 = fieldTypeRational0.SRATIONAL.getValue(tiffField0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      try { 
        fieldTypeRational0.writeData(byteOrder0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: LITTLE_ENDIAN (java.nio.ByteOrder)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2139922085, 2139922085, fieldTypeRational0, 4294967295L, (-2147483648L), (byte[]) null, byteOrder0, 2139922085);
      // Undeclared exception!
      try { 
        fieldTypeRational0.RATIONAL.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, (-968L), (-968L), byteArray0, byteOrder0, (byte) (-35));
      // Undeclared exception!
      try { 
        fieldTypeRational0.RATIONAL.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      // Undeclared exception!
      try { 
        fieldTypeRational0.getValue((TiffField) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2359), (-2359), fieldTypeRational0, (-2359), (-2359), byteArray0, byteOrder0, (-2359));
      // Undeclared exception!
      try { 
        fieldTypeRational0.getValue(tiffField0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-6018), (-6018), fieldTypeRational0, 1L, (-6018), byteArray0, byteOrder0, (-6018));
      // Undeclared exception!
      try { 
        fieldTypeRational0.getValue(tiffField0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1183, 1183, fieldTypeRational0, 1183, 1183, byteArray0, byteOrder0, 1183);
      Object object0 = fieldTypeRational0.getValue(tiffField0);
      byte[] byteArray1 = fieldTypeRational0.writeData(object0, byteOrder0);
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Integer integer0 = new Integer(1963);
      byte[] byteArray0 = fieldTypeRational0.writeData(integer0, byteOrder0);
      TiffField tiffField0 = new TiffField(1963, 1963, fieldTypeRational0, 1L, (-1038L), byteArray0, byteOrder0, 1963);
      RationalNumber rationalNumber0 = (RationalNumber)fieldTypeRational0.getValue(tiffField0);
      fieldTypeRational0.writeData(rationalNumber0, byteOrder0);
      assertFalse(rationalNumber0.unsignedType);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1254, 1254, fieldTypeRational0, 1L, 1254, byteArray0, byteOrder0, (byte) (-61));
      // Undeclared exception!
      try { 
        fieldTypeRational0.RATIONAL.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeRational0, 65535, 65535, byteArray0, (ByteOrder) null, 65535);
      Object object0 = fieldTypeRational0.RATIONAL.getValue(tiffField0);
      assertNotNull(object0);
  }
}
