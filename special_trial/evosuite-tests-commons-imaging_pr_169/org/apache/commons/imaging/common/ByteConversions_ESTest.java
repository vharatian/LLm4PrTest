/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:52:41 GMT 2025
 */

package org.apache.commons.imaging.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteOrder;
import org.apache.commons.imaging.common.ByteConversions;
import org.apache.commons.imaging.common.RationalNumber;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ByteConversions_ESTest extends ByteConversions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      RationalNumber[] rationalNumberArray0 = ByteConversions.toRationals(byteArray0, byteOrder0, true);
      assertEquals(2, rationalNumberArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)6;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, true);
      assertTrue(rationalNumber0.unsignedType);
      assertEquals(1536L, rationalNumber0.numerator);
      assertEquals(Float.POSITIVE_INFINITY, rationalNumber0.floatValue(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      double[] doubleArray0 = ByteConversions.toDoubles(byteArray0, byteOrder0);
      assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte)124;
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertEquals(4.0150067E-317, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)124;
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertEquals(1.0278417112E-314, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-3303.7));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumber0, byteOrder0);
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte)126, (byte) (-13), (byte)0, (byte)0, (byte)0, (byte)10}, byteArray0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-48);
      float float0 = ByteConversions.toFloat(byteArray0, byteOrder0);
      assertEquals(7.4616E-41F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)105;
      float float0 = ByteConversions.toFloat(byteArray0, byteOrder0);
      assertEquals(9.642727E-39F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-3303.7));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumber0, byteOrder0);
      float[] floatArray0 = ByteConversions.toFloats(byteArray0, byteOrder0);
      assertArrayEquals(new float[] {Float.NaN, 1.4E-44F}, floatArray0, 0.01F);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte)126, (byte) (-13), (byte)0, (byte)0, (byte)0, (byte)10}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (short) (-5574);
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      int[] intArray1 = ByteConversions.toInts(byteArray0, byteOrder1);
      assertArrayEquals(new int[] {988479487, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)104;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = ByteConversions.toInt(byteArray0, 1, byteOrder0);
      assertEquals(6815744, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int[] intArray0 = new int[2];
      intArray0[1] = (int) (short) (-5574);
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      int[] intArray1 = ByteConversions.toInts(byteArray0, byteOrder0);
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new int[] {0, (-5574)}, intArray1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int[] intArray0 = ByteConversions.toUInt16s(byteArray0, byteOrder0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      RationalNumber[] rationalNumberArray0 = new RationalNumber[5];
      RationalNumber rationalNumber0 = new RationalNumber((byte) (-18), (byte)2);
      rationalNumberArray0[0] = rationalNumber0;
      rationalNumberArray0[1] = rationalNumber0;
      RationalNumber rationalNumber1 = new RationalNumber((-5574), (-3532));
      rationalNumberArray0[2] = rationalNumber1;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes((-1174.8738523), byteOrder0);
      assertArrayEquals(new byte[] {(byte)35, (byte)40, (byte)35, (byte) (-45), (byte)126, (byte)91, (byte) (-110), (byte) (-64)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((-1379.848F), byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-60), (byte) (-84), (byte)123, (byte)35}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) (short) (-5574);
      byte[] byteArray0 = ByteConversions.toBytes(floatArray0, byteOrder0);
      assertArrayEquals(new byte[] {(byte)0, (byte)48, (byte) (-82), (byte) (-59), (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes((-571), byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte) (-3), (byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      short[] shortArray0 = new short[8];
      shortArray0[2] = (short) (-1);
      byte[] byteArray0 = ByteConversions.toBytes(shortArray0, byteOrder0);
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = ByteConversions.toBytes((short)3, byteOrder0);
      assertArrayEquals(new byte[] {(byte)3, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-1.0F));
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumber0, byteOrder0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte)1, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int[] intArray0 = ByteConversions.toUInt16s(byteArray0, byteOrder0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = ByteConversions.toUInt16(byteArray0, byteOrder0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-67);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int int0 = ByteConversions.toUInt16(byteArray0, byteOrder0);
      assertEquals(189, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-102);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int int0 = ByteConversions.toUInt16(byteArray0, (int) (byte)0, byteOrder0);
      assertEquals(39424, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      short[] shortArray0 = ByteConversions.toShorts(byteArray0, byteOrder0);
      assertEquals(0, shortArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)116;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      short short0 = ByteConversions.toShort(byteArray0, byteOrder0);
      assertEquals((short)29696, short0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-83);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      short short0 = ByteConversions.toShort(byteArray0, byteOrder0);
      assertEquals((short) (-21248), short0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      RationalNumber[] rationalNumberArray0 = ByteConversions.toRationals(byteArray0, byteOrder0, true);
      assertEquals(0, rationalNumberArray0.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte) (-2);
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, false);
      assertEquals((-132104.06299212598), rationalNumber0.doubleValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int[] intArray0 = new int[2];
      intArray0[1] = (int) (short) (-5574);
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, true);
      assertEquals(8, byteArray0.length);
      assertEquals(4294961722L, rationalNumber0.divisor);
      assertEquals(0L, rationalNumber0.numerator);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (short) (-5574);
      intArray0[1] = (int) (short) (-5574);
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, (ByteOrder) null, true);
      assertEquals(1.0, rationalNumber0.doubleValue(), 0.01);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-22), (byte)58, (byte) (-1), (byte) (-1), (byte) (-22), (byte)58}, byteArray0);
      assertTrue(rationalNumber0.unsignedType);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)68;
      byteArray0[6] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      RationalNumber rationalNumber0 = ByteConversions.toRational(byteArray0, byteOrder0, true);
      assertEquals(17544.533333333333, rationalNumber0.doubleValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = ByteConversions.toInts(byteArray0, byteOrder0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((float) 0, byteOrder0);
      int int0 = ByteConversions.toInt(byteArray0, byteOrder0);
      assertEquals(4, byteArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(255, byteOrder0);
      int int0 = ByteConversions.toInt(byteArray0, byteOrder0);
      assertEquals(255, int0);
      assertEquals(4, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(255, byteOrder0);
      int int0 = ByteConversions.toInt(byteArray0, byteOrder1);
      assertEquals((-16777216), int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[3] = (-163);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      int int0 = ByteConversions.toInt(byteArray0, (int) (short)14, byteOrder0);
      assertEquals(32, byteArray0.length);
      assertEquals((-10682368), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      float[] floatArray0 = ByteConversions.toFloats(byteArray0, byteOrder0);
      assertEquals(0, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      double[] doubleArray0 = new double[7];
      byte[] byteArray0 = ByteConversions.toBytes(doubleArray0, byteOrder0);
      float float0 = ByteConversions.toFloat(byteArray0, byteOrder0);
      assertEquals(56, byteArray0.length);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-99);
      float float0 = ByteConversions.toFloat(byteArray0, byteOrder0);
      assertEquals((-1.6940659E-21F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      double[] doubleArray0 = ByteConversions.toDoubles(byteArray0, byteOrder0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes(0.0, byteOrder0);
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-2);
      double double0 = ByteConversions.toDouble(byteArray0, byteOrder0);
      assertEquals((-8.371160993642713E298), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RationalNumber rationalNumber0 = RationalNumber.valueOf((-3303.7));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      RationalNumber[] rationalNumberArray0 = new RationalNumber[2];
      rationalNumberArray0[0] = rationalNumber0;
      rationalNumberArray0[1] = rationalNumber0;
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      double[] doubleArray0 = new double[0];
      byte[] byteArray0 = ByteConversions.toBytes(doubleArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16((byte[]) null, (-1), byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16(byteArray0, 994, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 994
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toShorts((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toShort((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ByteConversions.toRational(byteArray0, byteOrder0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      float[] floatArray0 = new float[0];
      byte[] byteArray0 = ByteConversions.toBytes(floatArray0, byteOrder0);
      // Undeclared exception!
      try { 
        ByteConversions.toInt(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toInt((byte[]) null, 1, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((short)3, byteOrder0);
      // Undeclared exception!
      try { 
        ByteConversions.toInt(byteArray0, (int) (short)3, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toFloat((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toDouble(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = ByteConversions.toInt(byteArray0, 1, byteOrder0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      double[] doubleArray0 = new double[9];
      byte[] byteArray0 = ByteConversions.toBytes(doubleArray0, byteOrder0);
      int int0 = ByteConversions.toUInt16(byteArray0, 8, byteOrder0);
      assertEquals(72, byteArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = ByteConversions.toBytes((short) (-1), byteOrder0);
      int[] intArray0 = ByteConversions.toUInt16s(byteArray0, byteOrder0);
      assertArrayEquals(new int[] {65535}, intArray0);
      assertEquals(2, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      short[] shortArray0 = ByteConversions.toShorts(byteArray0, byteOrder0);
      assertArrayEquals(new short[] {(short)0, (short)0}, shortArray0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      RationalNumber[] rationalNumberArray0 = new RationalNumber[0];
      byte[] byteArray0 = ByteConversions.toBytes(rationalNumberArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int[] intArray0 = new int[0];
      byte[] byteArray0 = ByteConversions.toBytes(intArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      short[] shortArray0 = new short[0];
      byte[] byteArray0 = ByteConversions.toBytes(shortArray0, byteOrder0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toFloats((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toRational((byte[]) null, byteOrder0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      short short0 = ByteConversions.toShort(byteArray0, byteOrder0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toDouble((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toInts((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((float[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16s((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((short[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toDoubles((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((double[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((RationalNumber) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toInt((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteConversions.toRationals((byte[]) null, byteOrder0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toUInt16((byte[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toBytes((int[]) null, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      // Undeclared exception!
      try { 
        ByteConversions.toFloat(byteArray0, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }
}
