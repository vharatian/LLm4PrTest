/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:54:55 GMT 2025
 */

package org.apache.commons.imaging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.color.ICC_Profile;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;
import org.apache.commons.imaging.FormatCompliance;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.ImageFormats;
import org.apache.commons.imaging.ImageInfo;
import org.apache.commons.imaging.Imaging;
import org.apache.commons.imaging.bytesource.ByteSource;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Imaging_ESTest extends Imaging_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte) (-20);
      // Undeclared exception!
      try { 
        Imaging.getIccProfile(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      File file0 = MockFile.createTempFile("Ei#<f8g(/g", "jpeg contains more than one photoshop app13 segment.jpeg");
      boolean boolean0 = Imaging.hasImageFileExtension(file0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ImageFormat imageFormat0 = Imaging.guessFormat(byteArray0);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = Imaging.getXmpXml((InputStream) byteArrayInputStream0, "DiH*,X");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(74, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageMetadata imageMetadata0 = Imaging.getMetadata(byteArray0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(74, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      Dimension dimension0 = Imaging.getImageSize(byteArray0);
      assertEquals(1.0, dimension0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      Dimension dimension0 = Imaging.getImageSize(byteSource0);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(88, 88, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      Dimension dimension0 = Imaging.getImageSize(byteSource0);
      assertEquals(88.0, dimension0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, true);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo(byteArray0);
      assertNull(imageInfo0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(88, 88, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo(byteArray0);
      assertEquals((-1), imageInfo0.getPhysicalHeightDpi());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo("pbm", byteArray0);
      assertNull(imageInfo0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(74, 1, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo("!A1YqMZ3M[%j37", byteArray0);
      assertEquals("Png", imageInfo0.getFormatDetails());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      byte[] byteArray1 = Imaging.getIccProfileBytes(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      FormatCompliance formatCompliance0 = Imaging.getFormatCompliance(byteArray0);
      assertNull(formatCompliance0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      BufferedImage bufferedImage1 = Imaging.getBufferedImage(byteArray0);
      assertEquals(2378, bufferedImage1.getHeight());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      List<BufferedImage> list0 = Imaging.getAllBufferedImages((InputStream) byteArrayInputStream0, "jpeg");
      assertFalse(list0.contains(bufferedImage0));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      String string0 = Imaging.dumpImageFile(byteArray0);
      assertEquals("DcxHeader\nId: 0x3ade68b1\nPages: 1\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.WEBP;
      try { 
        Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // This image format (WebP-Custom) cannot be written.
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(105, 105, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      // Undeclared exception!
      Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.UNKNOWN;
      // Undeclared exception!
      try { 
        Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown ImageFormat: UNKNOWN
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(14, 14, false);
      File file0 = MockFile.createTempFile("!,:NH:pX-uxws74qG", "!,:NH:pX-uxws74qG");
      ImageFormats imageFormats0 = ImageFormats.PSD;
      try { 
        Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // This image format (PSD-Custom) cannot be written.
         //
         verifyException("org.apache.commons.imaging.AbstractImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(4387, 4387, false);
      ImageFormats imageFormats0 = ImageFormats.ICO;
      MockFile mockFile0 = new MockFile("e:Qj (?neG+5g\"M*O?");
      // Undeclared exception!
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      // Undeclared exception!
      try { 
        Imaging.writeImage(bufferedImage0, (File) null, (ImageFormat) imageFormats0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, true);
      ImageFormats imageFormats0 = ImageFormats.ICO;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(")x:QJLI  ");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile(")x:QJLI  ");
      try { 
        Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MockFile mockFile0 = new MockFile("wQbm");
      MockFile.createTempFile("wQbm", "wqbmpnm", (File) mockFile0);
      try { 
        Imaging.writeImage((BufferedImage) null, (File) mockFile0, (ImageFormat) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.guessFormat(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      ByteSource byteSource0 = ByteSource.inputStream(pushbackInputStream0, "J3K4:P=");
      try { 
        Imaging.guessFormat(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      try { 
        Imaging.guessFormat((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      MockFile mockFile0 = new MockFile("K']", "4WB~65,lJKl@}(r");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        Imaging.getXmpXml(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "org.apache.commons.imaging.formats.bmp.PixelParserRgb");
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(byteSource0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: org.apache.commons.imaging.formats.bmp.PixelParserRgb
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(byteSource0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((InputStream) byteArrayInputStream0, "format");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: format
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Hashtable<ImageFormats, MockFileInputStream> hashtable0 = new Hashtable<ImageFormats, MockFileInputStream>();
      Enumeration<MockFileInputStream> enumeration0 = hashtable0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 2801);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((InputStream) pushbackInputStream0, "wqbmjpeg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      File file0 = MockFile.createTempFile("lg5Nd(QJ{gFO", "VsD0_PSEmJ$[Y7@yG");
      try { 
        Imaging.getXmpXml(file0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.getMetadata(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Hashtable<ImageFormats, MockFileInputStream> hashtable0 = new Hashtable<ImageFormats, MockFileInputStream>();
      Enumeration<MockFileInputStream> enumeration0 = hashtable0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 71);
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) pushbackInputStream0, "<D9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(193);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      try { 
        Imaging.getMetadata((InputStream) sequenceInputStream0, "xpm");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getMetadata((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      MockFile mockFile0 = new MockFile((String) null, "");
      try { 
        Imaging.getMetadata((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MockFile mockFile0 = new MockFile("jpgbmp", "g8du`)4w \r");
      Path path0 = mockFile0.toPath();
      ByteSource byteSource0 = ByteSource.path(path0);
      try { 
        Imaging.getImageSize(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-107), 192);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ByteSource byteSource0 = ByteSource.inputStream(bufferedInputStream0, "xpmwbmp");
      // Undeclared exception!
      try { 
        Imaging.getImageSize(byteSource0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "pbm");
      InputStream inputStream0 = byteSource0.getInputStream();
      try { 
        Imaging.getImageSize(inputStream0, "pbm");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // PNM file has invalid prefix byte 1
         //
         verifyException("org.apache.commons.imaging.formats.pnm.PnmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) dataInputStream0, "Eq*z>&`]`$~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: Eq*z>&`]`$~
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 80, 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) dataInputStream0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3847), (byte)49);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) byteArrayInputStream0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        Imaging.getImageSize((InputStream) mockFileInputStream0, (String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        Imaging.getImageInfo("jpeg contains mre than one photoshop app13 segment.tif", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid TIFF byte order 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("jpeg contains mre than one photoshop app13 segment.tif", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      try { 
        Imaging.getImageInfo("pcc", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File, name: PcxHeader, length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((InputStream) byteArrayInputStream0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      try { 
        Imaging.getImageInfo((InputStream) sequenceInputStream0, (String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      try { 
        Imaging.getImageInfo((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getIccProfileBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MockFile mockFile0 = new MockFile("g0jpeg contains more than one photoshop app13 segment.jpegbmp");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        Imaging.getIccProfile(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getIccProfile((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "pbmpbm");
      // Undeclared exception!
      try { 
        Imaging.getIccProfile(byteSource0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: pbmpbm
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getIccProfile(byteSource0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getIccProfile((InputStream) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "DK>2d:");
      InputStream inputStream0 = byteSource0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getIccProfile(inputStream0, "DK>2d:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: DK>2d:
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      try { 
        Imaging.getIccProfile((InputStream) pushbackInputStream0, "<~c^!;Q8`pF");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MockFile mockFile0 = new MockFile("wQbm");
      try { 
        Imaging.getIccProfile((File) mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      File file0 = MockFile.createTempFile("gif", "gif");
      try { 
        Imaging.getFormatCompliance(file0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      try { 
        Imaging.getFormatCompliance((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "");
      InputStream inputStream0 = byteSource0.getInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStream0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) pushbackInputStream0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: 
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      try { 
        Imaging.getBufferedImage((InputStream) dataInputStream0, (String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) byteArrayInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-53), (byte)60);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 65475);
      try { 
        Imaging.getBufferedImage((InputStream) bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(88, 88, true);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      // Undeclared exception!
      Imaging.getAllBufferedImages(byteArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      InputStream inputStream0 = byteSource0.getInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(inputStream0);
      try { 
        Imaging.getAllBufferedImages((InputStream) dataInputStream0, "ppm");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // PNM file has invalid prefix byte 1
         //
         verifyException("org.apache.commons.imaging.formats.pnm.PnmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) byteArrayInputStream0, "im6; zrv.c");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: im6; zrv.c
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) byteArrayInputStream0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 5115);
      try { 
        Imaging.getAllBufferedImages((InputStream) bufferedInputStream0, "Hl_hRPY_M(DdIlR");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      try { 
        Imaging.dumpImageFile((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension("wQbm");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "xbm");
      // Undeclared exception!
      try { 
        Imaging.guessFormat(byteSource0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.guessFormat(byteSource0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat(byteSource0);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) null);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.imaging.Imaging", "org.apache.commons.imaging.Imaging");
      ByteSource byteSource0 = ByteSource.file(mockFile0);
      try { 
        Imaging.guessFormat(byteSource0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "gif");
      try { 
        Imaging.getXmpXml(byteSource0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "hdr");
      ICC_Profile iCC_Profile0 = Imaging.getIccProfile(byteSource0);
      assertNull(iCC_Profile0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSource byteSource0 = ByteSource.array(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize(byteSource0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("6pZsHnQ.#uRsS03");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      Imaging.writeImage(bufferedImage0, (OutputStream) mockPrintStream0, (ImageFormat) imageFormats0);
      assertEquals(1, bufferedImage0.getTileWidth());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) null, "Invalid Byte Pair.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      MockFile mockFile0 = new MockFile("wQbm");
      // Undeclared exception!
      try { 
        Imaging.writeImage((BufferedImage) null, (File) mockFile0, (ImageFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, true);
      ImageFormats imageFormats0 = ImageFormats.ICO;
      MockFile mockFile0 = new MockFile(")x:QJLI  ");
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      assertTrue(mockFile0.canRead());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension("jpeg contains more than one photoshop app13 segment.jpeg");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      MockFile mockFile0 = new MockFile("src");
      boolean boolean0 = Imaging.hasImageFileExtension((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      boolean boolean0 = Imaging.hasImageFileExtension((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((File) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown extension: 
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 80, false);
      ImageFormats imageFormats0 = ImageFormats.DCX;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      List<BufferedImage> list0 = Imaging.getAllBufferedImages(byteArray0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(1, 2378, true);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      String string0 = Imaging.getXmpXml(byteArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSource byteSource0 = ByteSource.array(byteArray0, "hdr");
      String string0 = Imaging.getXmpXml(byteSource0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(88, 88, false);
      ImageFormats imageFormats0 = ImageFormats.PNG;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ICC_Profile iCC_Profile0 = Imaging.getIccProfile(byteArray0);
      assertNull(iCC_Profile0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)105;
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((InputStream) null, "BM{*|[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getIccProfile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((InputStream) null, "0jlbOn<rR>Tu!<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) null, "8A.b-b+RhN8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.BMP;
      // Undeclared exception!
      try { 
        Imaging.writeImageToBytes((BufferedImage) null, imageFormats0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      try { 
        Imaging.getIccProfile((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        Imaging.getIccProfileBytes(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ggif");
      try { 
        Imaging.getBufferedImage((File) mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("Invalid Byte Pair.", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      File file0 = MockFile.createTempFile(">j83*f6/d+A&", ">j83*f6/d+A&");
      try { 
        Imaging.getImageSize(file0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1625, 65479);
      // Undeclared exception!
      try { 
        Imaging.getIccProfile((InputStream) byteArrayInputStream0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      MockFile mockFile0 = new MockFile("pbm");
      try { 
        Imaging.getAllBufferedImages((File) mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      MockFile mockFile0 = new MockFile(">Q./");
      try { 
        Imaging.guessFormat((File) mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      MockFile mockFile0 = new MockFile("m:", "");
      try { 
        Imaging.getIccProfileBytes((File) mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getMetadata((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) null, "negative or zero subimage width");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      File file0 = MockFile.createTempFile("gif", "gif");
      try { 
        Imaging.dumpImageFile(file0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.ImageParserFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) null, "Fbi^F+Ypr#R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      MockFile mockFile0 = new MockFile("colormap: hdr");
      try { 
        Imaging.getImageInfo((File) mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      MockFile mockFile0 = new MockFile("tiff", "tiff");
      try { 
        Imaging.getMetadata((File) mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("java.util.Objects", e);
      }
  }
}
