/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 23:07:13 GMT 2025
 */

package org.apache.commons.imaging.formats.gif;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.SequenceInputStream;
import java.io.StringWriter;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.apache.commons.imaging.common.XmpImagingParameters;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.gif.DisposalMethod;
import org.apache.commons.imaging.formats.gif.GifImageParser;
import org.apache.commons.imaging.formats.gif.GifImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GifImageParser_ESTest extends GifImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(521, 521, false);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("More than one MP Block i GIF");
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) mockFileOutputStream0, gifImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("WN}dcK(");
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.writeImage((BufferedImage) null, (OutputStream) mockFileOutputStream0, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(21, 21, false);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("s6}");
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) mockFileOutputStream0, gifImagingParameters0);
      try { 
        gifImageParser0.writeImage(bufferedImage0, (OutputStream) mockFileOutputStream0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getXmpXml((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("`(JV]|'Cqb@B", byteArray0);
      try { 
        gifImageParser0.getXmpXml(byteSourceArray0, (XmpImagingParameters) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("bH4", "bH4");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      XmpImagingParameters xmpImagingParameters0 = new XmpImagingParameters();
      try { 
        gifImageParser0.getXmpXml(byteSourceFile0, xmpImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getMetadata((ByteSource) byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getMetadata((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[6];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getMetadata((ByteSource) byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("bH4", "bH4");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        gifImageParser0.getMetadata((ByteSource) byteSourceFile0, (GifImagingParameters) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[30];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getImageSize((ByteSource) byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageSize((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "");
      // Undeclared exception!
      try { 
        gifImageParser0.getImageSize((ByteSource) byteSourceInputStream0, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-76), 72);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "");
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageSize((ByteSource) byteSourceInputStream0, gifImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getImageSize((ByteSource) byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile(" (");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        gifImageParser0.getImageSize((ByteSource) byteSourceFile0, gifImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[26];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getImageInfo((ByteSource) byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getImageInfo((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      try { 
        gifImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, (GifImagingParameters) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("", ":d;#n49T(Q");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getImageInfo((ByteSource) byteSourceFile0, gifImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.getFormatCompliance((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, (InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(bufferedInputStream0, "])#2W.%4uFI2");
      // Undeclared exception!
      try { 
        gifImageParser0.getFormatCompliance((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-480), (byte)99);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "Cb!>P?H=y?");
      // Undeclared exception!
      try { 
        gifImageParser0.getFormatCompliance((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        gifImageParser0.getFormatCompliance((ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("bH4", "bH4");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        gifImageParser0.getFormatCompliance((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[22];
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        gifImageParser0.getBufferedImage((ByteSource) byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      // Undeclared exception!
      try { 
        gifImageParser0.getBufferedImage((ByteSource) null, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "/d@!ml");
      // Undeclared exception!
      try { 
        gifImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, gifImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[26];
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1153), 8);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "identifier1");
      // Undeclared exception!
      try { 
        gifImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, gifImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      try { 
        gifImageParser0.getBufferedImage((ByteSource) byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("-t");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        gifImageParser0.getBufferedImage((ByteSource) byteSourceFile0, gifImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.getAllBufferedImages((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        gifImageParser0.getAllBufferedImages((ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        gifImageParser0.getAllBufferedImages((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[30];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Graphics Interchange Format");
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charsetEncoder0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0, false);
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      // Undeclared exception!
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[6];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("~(j} dS=9fY!RtRH", byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("~(j} dS=9fY!RtRH");
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      MockFile mockFile0 = new MockFile("version3", "");
      StringWriter stringWriter0 = new StringWriter(5);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        gifImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(5, 5, true);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("More than one MP Block i GIF");
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      gifImagingParameters0.setXmpXml("ICO");
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) mockFileOutputStream0, gifImagingParameters0);
      assertTrue(bufferedImage0.hasTileWriters());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(7, 7, 7);
      GifImageParser gifImageParser0 = new GifImageParser();
      MockPrintStream mockPrintStream0 = new MockPrintStream("g(");
      gifImageParser0.writeImage(bufferedImage0, (OutputStream) mockPrintStream0, (GifImagingParameters) null);
      assertEquals(0, bufferedImage0.getMinTileX());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      try { 
        GifImageParser.createDisposalMethodFromIntValue((-27));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: Invalid parsing of disposal method
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(7);
      assertEquals(DisposalMethod.TO_BE_DEFINED_4, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(6);
      assertEquals(DisposalMethod.TO_BE_DEFINED_3, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(5);
      assertEquals(DisposalMethod.TO_BE_DEFINED_2, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(3);
      assertEquals(DisposalMethod.RESTORE_TO_PREVIOUS, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(2);
      assertEquals(DisposalMethod.RESTORE_TO_BACKGROUND, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(1);
      assertEquals(DisposalMethod.DO_NOT_DISPOSE, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(4);
      assertEquals(DisposalMethod.TO_BE_DEFINED_1, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DisposalMethod disposalMethod0 = GifImageParser.createDisposalMethodFromIntValue(0);
      assertEquals(DisposalMethod.UNSPECIFIED, disposalMethod0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      byteArray0[19] = (byte)33;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      try { 
        gifImageParser0.dumpImageFile((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[22];
      byteArray0[20] = (byte)106;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        gifImageParser0.getFormatCompliance((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unknown code: 106
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = new byte[25];
      byteArray0[10] = (byte)46;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        gifImageParser0.getAllBufferedImages((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      String string0 = gifImageParser0.getDefaultExtension();
      assertEquals("gif", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      String string0 = gifImageParser0.getName();
      assertEquals("Graphics Interchange Format", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      String[] stringArray0 = gifImageParser0.getAcceptedExtensions();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      byteArray0[19] = (byte)33;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      GifImageParser gifImageParser0 = new GifImageParser();
      GifImagingParameters gifImagingParameters0 = gifImageParser0.getDefaultParameters();
      try { 
        gifImageParser0.getXmpXml(byteSourceArray0, gifImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GIF: unexpected end of data
         //
         verifyException("org.apache.commons.imaging.formats.gif.GifImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GifImageParser gifImageParser0 = new GifImageParser();
      ImageFormat[] imageFormatArray0 = gifImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      GifImagingParameters gifImagingParameters0 = new GifImagingParameters();
      GifImageParser gifImageParser0 = new GifImageParser();
      byte[] byteArray0 = gifImageParser0.getICCProfileBytes((ByteSource) null, gifImagingParameters0);
      assertNull(byteArray0);
  }
}
