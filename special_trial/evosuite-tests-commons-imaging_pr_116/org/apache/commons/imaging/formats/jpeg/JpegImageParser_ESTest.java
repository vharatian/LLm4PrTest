/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 23:15:59 GMT 2025
 */

package org.apache.commons.imaging.formats.jpeg;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.jpeg.JpegImageParser;
import org.apache.commons.imaging.formats.jpeg.JpegImagingParameters;
import org.apache.commons.imaging.formats.jpeg.segments.ComSegment;
import org.apache.commons.imaging.formats.jpeg.segments.GenericSegment;
import org.apache.commons.imaging.formats.tiff.TiffImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class JpegImageParser_ESTest extends JpegImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ComSegment comSegment0 = new ComSegment(65497, 0, byteArrayInputStream0);
      boolean boolean0 = JpegImageParser.isExifAPP1Segment(comSegment0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      int[] intArray0 = new int[0];
      try { 
        jpegImageParser0.readSegments(byteSourceArray0, intArray0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1639);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(sequenceInputStream0, (String) null);
      int[] intArray0 = new int[0];
      try { 
        jpegImageParser0.readSegments(byteSourceInputStream0, intArray0, false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("No SOFN Data Found.", "No SOFN Data Found.");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      int[] intArray0 = new int[0];
      try { 
        jpegImageParser0.readSegments(byteSourceFile0, intArray0, false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[11];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("org.apache.commons.imaging.formats.jpeg.JpegImageParser$1", byteArray0);
      try { 
        jpegImageParser0.hasXmpSegment(byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "");
      // Undeclared exception!
      try { 
        jpegImageParser0.hasXmpSegment(byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-110), (byte)127);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "v%*{KWyajNm=w-");
      // Undeclared exception!
      try { 
        jpegImageParser0.hasXmpSegment(byteSourceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "");
      try { 
        jpegImageParser0.hasXmpSegment(byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegImageParser0.hasXmpSegment(byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[9];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        jpegImageParser0.hasIptcSegment(byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "fnUf8eVZR-Sqy3");
      try { 
        jpegImageParser0.hasIptcSegment(byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegImageParser0.hasIptcSegment(byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        jpegImageParser0.hasExifSegment(byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0, 65485);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pushbackInputStream0, "azBJWIa@c'kZwX,A-Fv");
      // Undeclared exception!
      try { 
        jpegImageParser0.hasExifSegment(byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "org.apache.commons.imaging.formats.ico.IcoImagingParameters");
      try { 
        jpegImageParser0.hasExifSegment(byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegImageParser0.hasExifSegment(byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        jpegImageParser0.getXmpXml(byteSourceArray0, jpegImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "6++PeS]ss):1FN4");
      try { 
        jpegImageParser0.getXmpXml(byteSourceInputStream0, jpegImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      MockFile mockFile0 = new MockFile("jpeg.dumpImageFile");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegImageParser0.getXmpXml(byteSourceFile0, jpegImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getPhotoshopMetadata(byteSourceArray0, jpegImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getPhotoshopMetadata((ByteSource) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "U9w");
      try { 
        jpegImageParser0.getPhotoshopMetadata(byteSourceInputStream0, (JpegImagingParameters) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("s", "s");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getPhotoshopMetadata(byteSourceFile0, jpegImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("D**p4Yu p;-ZW]pW})", byteArray0);
      try { 
        jpegImageParser0.getMetadata((ByteSource) byteSourceArray0, jpegImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getMetadata((ByteSource) byteSourceInputStream0, jpegImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("|Lk7");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getMetadata((ByteSource) byteSourceFile0, jpegImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        jpegImageParser0.getImageSize((ByteSource) byteSourceArray0, jpegImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getImageSize((ByteSource) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, (String) null);
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getImageSize((ByteSource) byteSourceInputStream0, jpegImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("i!jIW;Qj E", "i!jIW;Qj E");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      try { 
        jpegImageParser0.getImageSize((ByteSource) byteSourceFile0, jpegImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("", byteArray0);
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      try { 
        jpegImageParser0.getImageInfo((ByteSource) byteSourceArray0, jpegImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getImageInfo((ByteSource) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, jpegImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("", "");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      try { 
        jpegImageParser0.getImageInfo((ByteSource) byteSourceFile0, jpegImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      try { 
        jpegImageParser0.getICCProfileBytes((ByteSource) byteSourceArray0, jpegImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getICCProfileBytes((ByteSource) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("k", "k");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      try { 
        jpegImageParser0.getICCProfileBytes((ByteSource) byteSourceFile0, jpegImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("Unknown InterlaceMethod: ", byteArray0);
      try { 
        jpegImageParser0.getExifRawData(byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.getExifRawData((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "");
      try { 
        jpegImageParser0.getExifRawData(byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile((File) null, "6~ ~3TML");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegImageParser0.getExifRawData(byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      try { 
        jpegImageParser0.getExifMetadata(byteSourceArray0, tiffImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getExifMetadata((ByteSource) null, tiffImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(66);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, " ");
      TiffImagingParameters tiffImagingParameters0 = new TiffImagingParameters();
      try { 
        jpegImageParser0.getExifMetadata(byteSourceInputStream0, tiffImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Imaging currently can't parse EXIF metadata split across multiple APP1 segments.  Please send this image to the Imaging project.");
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegImageParser0.getExifMetadata(byteSourceFile0, (TiffImagingParameters) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        jpegImageParser0.getBufferedImage((ByteSource) byteSourceArray0, jpegImagingParameters0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unexpected EOF.
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, (String) null);
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      try { 
        jpegImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, jpegImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockFile mockFile0 = new MockFile("imageDataSize", "imageDataSize");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      try { 
        jpegImageParser0.getBufferedImage((ByteSource) byteSourceFile0, jpegImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("P!9I#7");
      File file0 = MockFile.createTempFile("P!9I#7", "P!9I#7");
      MockFile mockFile0 = new MockFile(file0, "P!9I#7");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        jpegImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.readSegments((ByteSource) null, (int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.getMetadata((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getMetadata((ByteSource) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      String[] stringArray0 = jpegImageParser0.getAcceptedExtensions();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = jpegImageParser0.getDefaultParameters();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "");
      try { 
        jpegImageParser0.getICCProfileBytes((ByteSource) byteSourceInputStream0, jpegImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      ImageFormat[] imageFormatArray0 = jpegImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      String string0 = jpegImageParser0.getDefaultExtension();
      assertEquals("jpg", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getBufferedImage((ByteSource) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      String string0 = jpegImageParser0.getName();
      assertEquals("Jpeg-Custom", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      // Undeclared exception!
      try { 
        JpegImageParser.isExifAPP1Segment((GenericSegment) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.hasXmpSegment((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      JpegImagingParameters jpegImagingParameters0 = new JpegImagingParameters();
      // Undeclared exception!
      try { 
        jpegImageParser0.getXmpXml((ByteSource) null, jpegImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.hasExifSegment((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      // Undeclared exception!
      try { 
        jpegImageParser0.hasIptcSegment((ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.JpegUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JpegImageParser jpegImageParser0 = new JpegImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("icp6");
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("icp6", byteArray0);
      try { 
        jpegImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
}
