/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:50:03 GMT 2025
 */

package org.apache.commons.imaging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.color.ICC_Profile;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Enumeration;
import java.util.Vector;
import org.apache.commons.imaging.FormatCompliance;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.ImageFormats;
import org.apache.commons.imaging.ImageInfo;
import org.apache.commons.imaging.Imaging;
import org.apache.commons.imaging.common.BinaryOutputStream;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.RgbBufferedImageFactory;
import org.apache.commons.imaging.common.SimpleBufferedImageFactory;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Imaging_ESTest extends Imaging_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ImageFormat imageFormat0 = Imaging.guessFormat(byteArray0);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      ImageFormat imageFormat0 = Imaging.guessFormat(file0);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      String string0 = Imaging.getXmpXml(byteArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageMetadata imageMetadata0 = Imaging.getMetadata(byteArray0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ImageMetadata imageMetadata0 = Imaging.getMetadata((InputStream) byteArrayInputStream0, "AW35/@");
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("~?viE", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(inputStream0, "dcx");
      Dimension dimension0 = Imaging.getImageSize((ByteSource) byteSourceInputStream0);
      assertNull(dimension0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(66, 66, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "e@~zSrc%6\"fq");
      Dimension dimension0 = Imaging.getImageSize((ByteSource) byteSourceInputStream0);
      assertEquals(66.0, dimension0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      Imaging.getImageSize((File) mockFile0);
      assertEquals(17491L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ImageInfo imageInfo0 = Imaging.getImageInfo("dcx", byteArray0);
      assertNull(imageInfo0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(80, 1, false);
      ImageFormats imageFormats0 = ImageFormats.TIFF;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo("org.apache.commons.io.filefilter.AgeFileFilter", byteArray0);
      assertEquals(ImageInfo.CompressionAlgorithm.LZW, imageInfo0.getCompressionAlgorithm());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)52;
      byte[] byteArray1 = Imaging.getICCProfileBytes(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(92, 92, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      Imaging.getICCProfile((File) mockFile0);
      assertEquals(33923L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      FormatCompliance formatCompliance0 = Imaging.getFormatCompliance(byteArray0);
      assertNull(formatCompliance0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(73, 14, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      BufferedImage bufferedImage1 = Imaging.getBufferedImage(byteArray0);
      assertEquals(73, bufferedImage1.getWidth());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      String string0 = Imaging.dumpImageFile(byteArray0);
      assertEquals("pnm.dumpImageFile\nFormat Details: PPM: portable pixmap file format\nBits Per Pixel: 765\nComments: 0\nFormat: PPM\nFormat Name: PPM: portable pixmap file format\nCompression Algorithm: None\nHeight: 66\nMimeType: image/x-portable-pixmap\nNumber Of Images: 1\nPhysical Height Dpi: 72\nPhysical Height Inch: 0.9166667\nPhysical Width Dpi: 72\nPhysical Width Inch: 0.9166667\nWidth: 66\nIs Progressive: false\nIs Transparent: false\nColor Type: RGB\nUses Palette: false\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      String string0 = Imaging.dumpImageFile(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(92, 92, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      Imaging.dumpImageFile((File) mockFile0);
      assertEquals(33923L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.GIF;
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getGrayscaleBufferedImage(215, 215, true);
      // Undeclared exception!
      Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      ImageFormats imageFormats0 = ImageFormats.RGBE;
      try { 
        Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // This image format (Radiance HDR) cannot be written.
         //
         verifyException("org.apache.commons.imaging.ImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, true);
      ImageFormats imageFormats0 = ImageFormats.JBIG2;
      // Undeclared exception!
      try { 
        Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Format: JBIG2
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BinaryOutputStream binaryOutputStream0 = new BinaryOutputStream(byteArrayOutputStream0);
      ImageFormats imageFormats0 = ImageFormats.RGBE;
      // Undeclared exception!
      try { 
        Imaging.writeImage((BufferedImage) null, (OutputStream) binaryOutputStream0, (ImageFormat) imageFormats0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(4096, 4096, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      File file0 = MockFile.createTempFile("QWWjg>d+dEeYO", "QWWjg>d+dEeYO");
      // Undeclared exception!
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.ICNS;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      try { 
        Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unsupported source width 2 and height 2
         //
         verifyException("org.apache.commons.imaging.formats.icns.IcnsImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.RGBE;
      // Undeclared exception!
      try { 
        Imaging.writeImage((BufferedImage) null, (File) null, (ImageFormat) imageFormats0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(80, 2, 2);
      File file0 = MockFile.createTempFile("{']kqxG/", "flBEdIN");
      ImageFormats imageFormats0 = ImageFormats.TGA;
      // Undeclared exception!
      try { 
        Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Format: TGA
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      File file0 = MockFile.createTempFile("AMH", "AMH");
      MockFile mockFile0 = new MockFile(file0, "Invalid Byte Pair.");
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      try { 
        Imaging.writeImage((BufferedImage) null, (File) mockFile0, (ImageFormat) imageFormats0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.guessFormat(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(pipedInputStream0, "");
      try { 
        Imaging.guessFormat((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.guessFormat((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      MockFile mockFile0 = new MockFile("KH]F=,dk~Q\"&d", " expected to start with 0x2 0x2");
      File file0 = MockFile.createTempFile("KH]F=,dk~Q\"&d", "KH]F=,dk~Q\"&d", (File) mockFile0);
      // Undeclared exception!
      try { 
        Imaging.guessFormat(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("Invalid Byte Pair.", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      MockFile mockFile0 = new MockFile("\"Y$:]'cR1'c$:&", "\"Y$:]'cR1'c$:&");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        Imaging.getXmpXml(inputStream0, "obvO");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(inputStream0, "YE8uc<75");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: YE8uc<75
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        Imaging.getXmpXml((InputStream) pipedInputStream0, "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      File file0 = MockFile.createTempFile("gwkymla#[pxkbmp", "gwkymla#[pxkdib");
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MockFile mockFile0 = new MockFile("=^2:DaD7u5*tA");
      try { 
        Imaging.getXmpXml((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      try { 
        Imaging.getMetadata(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        Imaging.getMetadata(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        Imaging.getMetadata(inputStream0, "p0@d");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) dataInputStream0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("GREYSCALE_WITH_ALPHA", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getMetadata(inputStream0, "O~p`plf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: O~p`plf
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", (String) null);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      // Undeclared exception!
      try { 
        Imaging.getMetadata((InputStream) mockFileInputStream0, "pgm");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      File file0 = MockFile.createTempFile("0p6+-1)2FyG@p;['l", "u+Hst(P0aW~J,SB,");
      // Undeclared exception!
      try { 
        Imaging.getMetadata(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      MockFile mockFile0 = new MockFile("$W*b1I.7", "$W*b1I.7");
      try { 
        Imaging.getMetadata((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getImageSize(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      try { 
        Imaging.getImageSize((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("src must not be null", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: src must not be null
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MockFile mockFile0 = new MockFile("q5Hu2pQmA\"XDg|x]", "q5Hu2pQmA\"XDg|x]");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.getImageSize((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)99;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        Imaging.getImageSize((InputStream) byteArrayInputStream0, "}Ho<Wvxm");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid ICNS File: magic is 0x69630000
         //
         verifyException("org.apache.commons.imaging.formats.icns.IcnsImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) byteArrayInputStream0, "upbm");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: upbm
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Vector<PipedInputStream> vector0 = new Vector<PipedInputStream>();
      Enumeration<PipedInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        Imaging.getImageSize((InputStream) sequenceInputStream0, "uX+AS:y8IDaP[xD[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      File file0 = MockFile.createTempFile("PGM", "PGM");
      // Undeclared exception!
      try { 
        Imaging.getImageSize(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MockFile mockFile0 = new MockFile("te#gppm");
      try { 
        Imaging.getImageSize((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      try { 
        Imaging.getImageInfo(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("H<.rCbNP#U", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      try { 
        Imaging.getImageInfo("icns", byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid ICNS File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("pic", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        Imaging.getImageInfo(inputStream0, "pic");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((InputStream) dataInputStream0, "pbm");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      File file0 = MockFile.createTempFile("*[O7tPL", "*[O7tPL");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((InputStream) mockFileInputStream0, ",rl_U\"IieK&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      MockFile mockFile0 = new MockFile("t>N");
      try { 
        Imaging.getImageInfo((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getICCProfileBytes(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getICCProfileBytes(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      File file0 = MockFile.createTempFile("pbm", "pbm");
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid TIFF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("r4+Un`", byteArray0);
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterPalette
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("pbmico", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "hL!8GPANk1sG;/");
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        Imaging.getICCProfile((ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("eQlHKg/xIq0/m=` ", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getICCProfile(inputStream0, "eQlHKg/xIq0/m=` ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: eQlHKg/xIq0/m=` 
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((InputStream) sequenceInputStream0, "3uu.,m3(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-46826869), 35);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((InputStream) byteArrayInputStream0, "pbm");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      try { 
        Imaging.getICCProfile(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      File file0 = MockFile.createTempFile("0p6+-1)2FyG@p;['l", "u+Hst(P0aW~J,SB,");
      // Undeclared exception!
      try { 
        Imaging.getICCProfile(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MockFile mockFile0 = new MockFile("$W*b1I.7", "$W*b1I.7");
      try { 
        Imaging.getICCProfile((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      try { 
        Imaging.getFormatCompliance(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      File file0 = MockFile.createTempFile("y?u)D3Xl7", "lrm{&sgu|4;rr0gif", (File) null);
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      MockFile mockFile0 = new MockFile("1(evanvag3>6wxpm", "1(evanvag3>6wxpm");
      try { 
        Imaging.getFormatCompliance((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)52;
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // PNM: Unexpected EOF
         //
         verifyException("org.apache.commons.imaging.formats.pnm.WhiteSpaceReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        Imaging.getBufferedImage((InputStream) byteArrayInputStream0, "gq5#lnw^}gif");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(inputStream0, "xq@ge5fs");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: xq@ge5fs
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(":r.i7qkQ", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(inputStream0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)99;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("2LPPkr4lIr'", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      try { 
        Imaging.getBufferedImage(inputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid ICNS File: magic is 0x69630000
         //
         verifyException("org.apache.commons.imaging.formats.icns.IcnsImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3104, 1751);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((InputStream) bufferedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(92, 92, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      Imaging.writeImage(bufferedImage0, (File) mockFile0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      Imaging.getBufferedImage((File) mockFile0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      File file0 = MockFile.createTempFile("t+pn4w&>tkemmcxlhdr", ":mp?rd%vn?-xbm");
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      File file0 = MockFile.createTempFile("0p6+-1)2FyG@p;['l", "0p6+-1)2FyG@p;['l");
      File file1 = file0.getCanonicalFile();
      try { 
        Imaging.getBufferedImage(file1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      // Undeclared exception!
      Imaging.getAllBufferedImages(byteArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      try { 
        Imaging.getAllBufferedImages(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a valid HDR: Incorrect Header
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(89, 89, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(inputStream0);
      // Undeclared exception!
      Imaging.getAllBufferedImages((InputStream) bufferedInputStream0, "tiff");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("ASRDOm`gc\t_R", byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStream0);
      try { 
        Imaging.getAllBufferedImages((InputStream) pushbackInputStream0, "pam");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PNM file has invalid prefix byte 1
         //
         verifyException("org.apache.commons.imaging.formats.pnm.PnmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages(inputStream0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: 
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Vector<PipedInputStream> vector0 = new Vector<PipedInputStream>();
      Enumeration<PipedInputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((InputStream) sequenceInputStream0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      File file0 = MockFile.createTempFile("Imaging currently can't parse EXIF metadata split across multiple APP1 segments.  Please send this image to the Imaging project.", "Imaging currently can't parse EXIF metadata split across multiple APP1 segments.  Please send this image to the Imaging project.");
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      MockFile mockFile0 = new MockFile("pbm");
      try { 
        Imaging.getAllBufferedImages((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)99;
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not a Valid ICNS File: magic is 0x69630000
         //
         verifyException("org.apache.commons.imaging.formats.icns.IcnsImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      File file0 = MockFile.createTempFile("ppm", "ppm", (File) null);
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      String string0 = Imaging.getXmpXml((ByteSource) byteSourceArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("pic", byteArray0);
      ICC_Profile iCC_Profile0 = Imaging.getICCProfile((ByteSource) byteSourceArray0);
      assertNull(iCC_Profile0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("-n_h0pp%x;]o?lqgcx+s.hhkpgm", byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertEquals("hdr", imageFormat0.getDefaultExtension());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)99;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("5JHZ8{QaE*)<?e`(", byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertEquals("icns", imageFormat0.getDefaultExtension());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertNotSame(imageFormats0, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)73;
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertEquals(ImageFormats.TIFF, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) byteSourceArray0);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("Couldn't read magic numbers to guess format.", byteArray0);
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteSourceArray byteSourceArray0 = new ByteSourceArray((byte[]) null);
      // Undeclared exception!
      try { 
        Imaging.guessFormat((ByteSource) byteSourceArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension("-n_h0pp%x;]o?lqgcx+s.hhkpgmpcc");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream((InputStream) null, "Screen_Siz{: ");
      try { 
        Imaging.getImageSize((ByteSource) byteSourceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      File file0 = MockFile.createTempFile("@1p]X5Nh=2`NG[]", "@1p]X5Nh=2`NG[]");
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(50, 50, false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Imaging.writeImage(bufferedImage0, (OutputStream) mockPrintStream0, (ImageFormat) imageFormats0);
      assertEquals(50, bufferedImage0.getWidth());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      try { 
        Imaging.getBufferedImage((InputStream) null, (String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      MockFile mockFile0 = new MockFile("wj3%d9fqv#2}_mat]eiwbmp");
      ImageFormats imageFormats0 = ImageFormats.PNM;
      // Undeclared exception!
      try { 
        Imaging.writeImage((BufferedImage) null, (File) mockFile0, (ImageFormat) imageFormats0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.WBMP;
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      File file0 = MockFile.createTempFile("Invalid Byte Pair.", "Invalid Byte Pair.");
      Imaging.writeImage(bufferedImage0, file0, (ImageFormat) imageFormats0);
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: Invalid Byte Pair.0Invalid Byte Pair.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray("gif", byteArray0);
      try { 
        Imaging.getXmpXml((ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid GIF File
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      String string0 = Imaging.getXmpXml(inputStream0, "pbm");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("", byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Extension: 
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      try { 
        Imaging.getImageInfo("pbm", byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // PNM file has invalid prefix byte 1
         //
         verifyException("org.apache.commons.imaging.formats.pnm.PnmImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)63;
      ICC_Profile iCC_Profile0 = Imaging.getICCProfile(byteArray0);
      assertNull(iCC_Profile0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getGrayscaleBufferedImage(66, 66, false);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      // Undeclared exception!
      Imaging.getBufferedImage(byteArray0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      SimpleBufferedImageFactory simpleBufferedImageFactory0 = new SimpleBufferedImageFactory();
      BufferedImage bufferedImage0 = simpleBufferedImageFactory0.getColorBufferedImage(89, 89, true);
      ImageFormats imageFormats0 = ImageFormats.PPM;
      byte[] byteArray0 = Imaging.writeImageToBytes(bufferedImage0, imageFormats0);
      ImageInfo imageInfo0 = Imaging.getImageInfo("pbmpam", byteArray0);
      assertEquals(ImageInfo.CompressionAlgorithm.NONE, imageInfo0.getCompressionAlgorithm());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      try { 
        Imaging.getICCProfile(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown Tiff Version: 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ImageFormat imageFormat0 = Imaging.guessFormat((ByteSource) null);
      assertEquals(ImageFormats.UNKNOWN, imageFormat0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension("RUM!");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      MockFile.createTempFile("ppm", "org.apache.commons.io.filefilter.DirectoryFileFilter", (File) mockFile0);
      boolean boolean0 = Imaging.hasImageFileExtension((File) mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      File file0 = MockFile.createTempFile("PGM", "PGM");
      boolean boolean0 = Imaging.hasImageFileExtension(file0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      boolean boolean0 = Imaging.hasImageFileExtension((File) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getXmpXml((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      try { 
        Imaging.getImageInfo((InputStream) null, (String) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      InputStream inputStream0 = byteSourceArray0.getInputStream();
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(inputStream0, "%cemgb6jpng");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      try { 
        Imaging.getAllBufferedImages((InputStream) null, "pbm");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".] DL{9]cq6,wV7Ko:");
      try { 
        Imaging.getICCProfileBytes((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getAllBufferedImages((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      File file0 = MockFile.createTempFile("E;8F*TU", "E;8F*TU");
      // Undeclared exception!
      try { 
        Imaging.getImageInfo(file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Couldn't read magic numbers to guess format.
         //
         verifyException("org.apache.commons.imaging.Imaging", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Imaging.getXmpXml(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfileBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ImageFormats imageFormats0 = ImageFormats.ICO;
      // Undeclared exception!
      try { 
        Imaging.writeImageToBytes((BufferedImage) null, imageFormats0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // src must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      try { 
        Imaging.getICCProfile((InputStream) null, "R");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        Imaging.dumpImageFile(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't parse this format.
         //
         verifyException("org.apache.commons.imaging.internal.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.guessFormat((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      MockFile mockFile0 = new MockFile("$12c", "$12c");
      try { 
        Imaging.guessFormat((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getMetadata((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      try { 
        Imaging.getMetadata((InputStream) null, "Couldn't read magic numbers to guess format.");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getFormatCompliance((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getICCProfile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageInfo("org.apache.commons.imaging.imaging0org.apache.commons.imaging.imagingxbm", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      try { 
        Imaging.getBufferedImage((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      try { 
        Imaging.getImageSize((InputStream) dataInputStream0, "pbm");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getMetadata((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.bytesource.ByteSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getBufferedImage((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      MockFile mockFile0 = new MockFile("14?>Dz[");
      try { 
        Imaging.dumpImageFile((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      // Undeclared exception!
      try { 
        Imaging.getImageSize((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
}
