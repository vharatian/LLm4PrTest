/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 17:50:08 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.datareaders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Point2D;
import java.awt.image.RasterFormatException;
import java.io.IOException;
import java.nio.ByteOrder;
import java.util.LinkedList;
import org.apache.commons.imaging.common.ImageBuilder;
import org.apache.commons.imaging.formats.tiff.AbstractTiffElement;
import org.apache.commons.imaging.formats.tiff.AbstractTiffImageData;
import org.apache.commons.imaging.formats.tiff.JpegImageData;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffRasterData;
import org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration;
import org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterLogLuv;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DataReaderStrips_ESTest extends DataReaderStrips_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 2);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(211, linkedList0, 1000, 3583L, byteOrder0);
      PhotometricInterpreterLogLuv photometricInterpreterLogLuv0 = new PhotometricInterpreterLogLuv(8, intArray0, 4622, 33, 1432);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterLogLuv0, 8, intArray0, 33920, 7, 2, 48321, 4622, 4622, tiffPlanarConfiguration0, byteOrder0, 211, abstractTiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.AbstractTiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[6];
      byte[] byteArray0 = new byte[0];
      JpegImageData jpegImageData0 = new JpegImageData(30L, 8, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 8);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 8, intArray0, 2827, 8, 3, 111, 8, 65001, tiffPlanarConfiguration0, byteOrder0, 8, abstractTiffImageData_Strips0);
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Tiff: unknown/unsupported compression: 65001
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(24, linkedList0, 24, 24, byteOrder0);
      int[] intArray0 = new int[9];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 24, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[8];
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 24, intArray0, 0, 24, 2, 2, 0, 2, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Point point0 = new Point(206, (-16777216));
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2796202
         //
         verifyException("org.apache.commons.imaging.formats.tiff.AbstractTiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(3, intArray0, 3, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 0, intArray0, (-1589), 1855, 3, 37, 1393, 939, tiffPlanarConfiguration0, byteOrder0, 0, abstractTiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(50713, intArray0, 50713, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 50713, intArray0, 50713, 50713, 50713, 50713, 50713, 50713, tiffPlanarConfiguration0, byteOrder0, 50713, abstractTiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData((Rectangle) null, false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Allocation limit 1,073,741,824 exceeded: -6,892,635,708
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(31, linkedList0, 31, 31, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 31, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[2];
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 31, intArray0, 0, 31, 8, 8, 0, 8, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(6, 8, 6, 8);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[1];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(1, intArray0, 1, (-1133), 1);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[0];
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 57);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, (-16777216), intArray0, 16, 2984, (-96), 16, 0, (-1), tiffPlanarConfiguration0, byteOrder0, 15, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(1276, (-96), 2048, (-553));
      rectangle0.setFrame((double) 16, (double) (-553), 2582.12902, (double) 1276);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -36
         //
         verifyException("org.apache.commons.imaging.formats.tiff.AbstractTiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(3, intArray0, 3, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 237, intArray0, (-1043), 237, 237, 3, 3, (-372), tiffPlanarConfiguration0, byteOrder0, 0, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(3, 3);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[8];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(41, intArray0, 41, 41, 41);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 41);
      DataReaderStrips dataReaderStrips0 = null;
      try {
        dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 41, intArray0, 41, Integer.MAX_VALUE, 41, (-2554), (-1106), 417, tiffPlanarConfiguration0, byteOrder0, (-1026), abstractTiffImageData_Strips0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Allocation limit 1,073,741,824 exceeded: 8,589,934,588
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(110, linkedList0, 110, 110, byteOrder0);
      int[] intArray0 = new int[11];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 110, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[8];
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      DataReaderStrips dataReaderStrips0 = null;
      try {
        dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 0, (int[]) null, 0, 6, 110, 0, (-64), 0, tiffPlanarConfiguration0, byteOrder0, (-615), abstractTiffImageData_Strips0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[1];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(3, intArray0, 3, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = null;
      try {
        dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 0, intArray0, 0, (-555), (-555), 3226, 0, 258, tiffPlanarConfiguration0, byteOrder0, (-363), abstractTiffImageData_Strips0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(31, linkedList0, 31, 31, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 31, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[8];
      byte[] byteArray0 = new byte[1];
      JpegImageData jpegImageData0 = new JpegImageData(31, 4, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 31, intArray0, 0, 31, 2, 4, 0, 4, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(4, 4);
      TiffRasterData tiffRasterData0 = dataReaderStrips0.readRasterData(rectangle0);
      assertEquals(4, tiffRasterData0.getHeight());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(3, intArray0, 3, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 3, intArray0, 3, 3, 3, 3, 3, 3, tiffPlanarConfiguration0, byteOrder0, 3, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle((-15), (-15), 2, 9988);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.AbstractTiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(3, intArray0, 3, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 3, intArray0, 3, 3, 3, 3, 3, 3, tiffPlanarConfiguration0, byteOrder0, 3, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle((-1591), 3, 0, (-1591));
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Raster dimensions less than or equal to zero are not supported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffRasterData", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(3, intArray0, 3, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 3, intArray0, 3, 3, 3, 3, 3, 3, tiffPlanarConfiguration0, byteOrder0, 3, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(3, (-813));
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[2];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(133, intArray0, 133, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 133, intArray0, 133, 133, 133, 133, 133, 133, tiffPlanarConfiguration0, byteOrder0, 133, abstractTiffImageData_Strips0);
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unsupported sample format, value=133
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[1];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(3, intArray0, 3, 0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips((AbstractTiffElement.DataElement[]) null, 3);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterRgb0, 65506, intArray0, 3, 34735, 3, 2270, 2270, 2270, tiffPlanarConfiguration0, byteOrder0, 3, abstractTiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData((Rectangle) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Allocation limit 1,073,741,824 exceeded: -5,610,579,728
         //
         verifyException("org.apache.commons.imaging.common.Allocator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(20, linkedList0, 20, 20, byteOrder0);
      int[] intArray0 = new int[17];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 20, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[11];
      byte[] byteArray0 = new byte[0];
      JpegImageData jpegImageData0 = new JpegImageData(20, 8, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 20, intArray0, 0, 20, 6, 8, 0, 8, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(6, 6);
      Point2D.Double point2D_Double0 = new Point2D.Double(20, (-1.0));
      rectangle0.add((Point2D) point2D_Double0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (x+width) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[9];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[1];
      byte[] byteArray0 = new byte[1];
      JpegImageData jpegImageData0 = new JpegImageData(8, 8, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 8, intArray0, 0, 8, 6, 8, 6, 8, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(8, 0, 8, 0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage height
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[13];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[2];
      byte[] byteArray0 = new byte[0];
      JpegImageData jpegImageData0 = new JpegImageData(8, 8, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 925);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 8, intArray0, 1070, 8, 8, 925, 1070, 8, tiffPlanarConfiguration0, byteOrder0, 1070, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(925, 8);
      // Undeclared exception!
      dataReaderStrips0.readImageData(rectangle0, true, true);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[13];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[2];
      byte[] byteArray0 = new byte[1];
      JpegImageData jpegImageData0 = new JpegImageData(8, 8, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 0, intArray0, 8, 2072, 8, 255, 8, 8, tiffPlanarConfiguration0, byteOrder0, 8, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // BitInputStream: incomplete bit read
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(31, linkedList0, 31, 31, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 31, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[8];
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 8);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 41992, intArray0, 31, 8, 8, 8, 8, 2552, tiffPlanarConfiguration0, byteOrder0, (-1658), abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(2552, 34030);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // subimage (x+width) is outside raster
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[17];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[8];
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 110);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 2248, intArray0, 110, 658, 658, 7, 2248, 7, tiffPlanarConfiguration0, byteOrder0, 1685, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(34857, (-700));
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // TIFF file in non-supported configuration: JPEG compression used in planar configuration.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(7, linkedList0, 7, 7, byteOrder0);
      int[] intArray0 = new int[9];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 7, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[1];
      byte[] byteArray0 = new byte[1];
      JpegImageData jpegImageData0 = new JpegImageData(7, 7, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 7, intArray0, 0, 7, 6, 7, 6, 7, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(7, 6);
      ImageBuilder imageBuilder0 = dataReaderStrips0.readImageData(rectangle0, false, false);
      assertEquals(7, imageBuilder0.getWidth());
      assertEquals(6, imageBuilder0.getHeight());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[13];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[2];
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 0, intArray0, 8, 2072, 8, 255, 8, 8, tiffPlanarConfiguration0, byteOrder0, 8, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 32, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[6];
      byte[] byteArray0 = new byte[0];
      JpegImageData jpegImageData0 = new JpegImageData(32, 3, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 32, intArray0, 0, 32, 6, 3, 0, 3, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(3, 32);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(24, linkedList0, 24, 24, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 24, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[6];
      byte[] byteArray0 = new byte[0];
      JpegImageData jpegImageData0 = new JpegImageData(24, 3, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 24, intArray0, 0, 24, 6, 3, 0, 3, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(3, 24);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[13];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[2];
      byte[] byteArray0 = new byte[0];
      JpegImageData jpegImageData0 = new JpegImageData(8, 8, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 8, intArray0, 0, 8, 6, 8, 6, 8, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(8, 6);
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // BitInputStream: incomplete bit read
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[12];
      byte[] byteArray0 = new byte[1];
      JpegImageData jpegImageData0 = new JpegImageData(1L, (-3769), byteArray0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[3];
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(8, intArray0, 855, 855, 8);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterRgb0, 8, intArray0, 2, 6, 125, 8, 1267, 8, tiffPlanarConfiguration0, byteOrder0, 125, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(1854, 2);
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // BitInputStream: incomplete bit read
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 8, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[6];
      byte[] byteArray0 = new byte[0];
      JpegImageData jpegImageData0 = new JpegImageData(30L, 8, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 0, intArray0, 331, 2466, (-2070), 111, (-2603), 8, tiffPlanarConfiguration0, byteOrder0, 2573, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(34909, (-402));
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // negative or zero subimage height
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(31, linkedList0, 31, 31, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(6, intArray0, 0, 31, 0);
      AbstractTiffElement.DataElement[] abstractTiffElement_DataElementArray0 = new AbstractTiffElement.DataElement[8];
      byte[] byteArray0 = new byte[1];
      JpegImageData jpegImageData0 = new JpegImageData(31, 4, byteArray0);
      abstractTiffElement_DataElementArray0[0] = (AbstractTiffElement.DataElement) jpegImageData0;
      AbstractTiffImageData.Strips abstractTiffImageData_Strips0 = new AbstractTiffImageData.Strips(abstractTiffElement_DataElementArray0, 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCmyk0, 31, intArray0, 0, 31, 2, 4, 0, 4, tiffPlanarConfiguration0, byteOrder0, 6, abstractTiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(4, 4);
      dataReaderStrips0.readImageData(rectangle0, true, true);
  }
}
