/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 17:47:05 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.datareaders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.nio.ByteOrder;
import java.util.LinkedList;
import org.apache.commons.imaging.common.ImageBuilder;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.datareaders.DataInterpreterJpeg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DataInterpreterJpeg_ESTest extends DataInterpreterJpeg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataInterpreterJpeg dataInterpreterJpeg0 = new DataInterpreterJpeg();
      byte[] byteArray0 = new byte[1];
      dataInterpreterJpeg0.intepretBlock((TiffDirectory) null, (ImageBuilder) null, 485, 485, 485, 485, byteArray0);
      assertEquals(1, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataInterpreterJpeg dataInterpreterJpeg0 = new DataInterpreterJpeg();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        dataInterpreterJpeg0.intepretBlock((TiffDirectory) null, (ImageBuilder) null, 485, 485, 485, 485, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataInterpreterJpeg", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataInterpreterJpeg dataInterpreterJpeg0 = new DataInterpreterJpeg();
      byte[] byteArray0 = new byte[4];
      dataInterpreterJpeg0.intepretBlock((TiffDirectory) null, (ImageBuilder) null, 1471, 0, 0, 1471, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataInterpreterJpeg dataInterpreterJpeg0 = new DataInterpreterJpeg();
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(496, linkedList0, 496, 496, byteOrder0);
      byte[] byteArray0 = new byte[6];
      try { 
        dataInterpreterJpeg0.intepretBlock(tiffDirectory0, (ImageBuilder) null, 496, 496, 496, 496, byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid JPEG File: doesn't begin with 0xffd8
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }
}
