/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:52:54 GMT 2025
 */

package org.apache.commons.imaging.formats.pcx;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.SequenceInputStream;
import org.apache.commons.imaging.ImageFormat;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.RgbBufferedImageFactory;
import org.apache.commons.imaging.common.bytesource.ByteSource;
import org.apache.commons.imaging.common.bytesource.ByteSourceArray;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.common.bytesource.ByteSourceInputStream;
import org.apache.commons.imaging.formats.pcx.PcxImageParser;
import org.apache.commons.imaging.formats.pcx.PcxImagingParameters;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PcxImageParser_ESTest extends PcxImageParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(72, 72, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(8);
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      pcxImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, pcxImagingParameters0);
      assertFalse(bufferedImage0.isAlphaPremultiplied());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockFile mockFile0 = new MockFile("pnm.dumpImageFile");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.writeImage((BufferedImage) null, (OutputStream) mockFileOutputStream0, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageSize((ByteSource) null, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, "Unsupported/invalid image with ");
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-747), 111);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(sequenceInputStream0, (String) null);
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[20];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceArray0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 20 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      MockFile mockFile0 = new MockFile("il32");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pcxImageParser0.getImageSize((ByteSource) byteSourceFile0, pcxImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageInfo((ByteSource) null, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-170), 773);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(byteArrayInputStream0, "pcx");
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getImageInfo((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      try { 
        pcxImageParser0.getImageInfo((ByteSource) byteSourceArray0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 1 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockFile mockFile0 = new MockFile("");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      try { 
        pcxImageParser0.getImageInfo((ByteSource) byteSourceFile0, pcxImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      // Undeclared exception!
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) null, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      byte[] byteArray0 = new byte[1];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) byteSourceArray0, pcxImagingParameters0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 1 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      MockFile mockFile0 = new MockFile("CC#u<`j1Qa@k0tV", "CC#u<`j1Qa@k0tV");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) byteSourceFile0, pcxImagingParameters0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      // Undeclared exception!
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.pcx.PcxImageParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Error reading palette");
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, dataInputStream0);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(sequenceInputStream0, "%al");
      // Undeclared exception!
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) mockPrintWriter0, (ByteSource) byteSourceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 7 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      MockFile mockFile0 = new MockFile("Pcx-Custom");
      ByteSourceFile byteSourceFile0 = new ByteSourceFile(mockFile0);
      try { 
        pcxImageParser0.dumpImageFile((PrintWriter) null, (ByteSource) byteSourceFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteSourceArray byteSourceArray0 = new ByteSourceArray(byteArray0);
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      try { 
        pcxImageParser0.getAllBufferedImages((ByteSource) byteSourceArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Not a Valid PCX File count: -1 read: 8 length: 128
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = new PcxImagingParameters();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      ByteSourceInputStream byteSourceInputStream0 = new ByteSourceInputStream(dataInputStream0, (String) null);
      // Undeclared exception!
      try { 
        pcxImageParser0.getBufferedImage((ByteSource) byteSourceInputStream0, pcxImagingParameters0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      String string0 = pcxImageParser0.getDefaultExtension();
      assertEquals("pcx", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      ImageFormat[] imageFormatArray0 = pcxImageParser0.getAcceptedTypes();
      assertEquals(1, imageFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      ImageMetadata imageMetadata0 = pcxImageParser0.getMetadata((ByteSource) null, pcxImagingParameters0);
      assertNull(imageMetadata0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      String[] stringArray0 = pcxImageParser0.getAcceptedExtensions();
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      RgbBufferedImageFactory rgbBufferedImageFactory0 = new RgbBufferedImageFactory();
      BufferedImage bufferedImage0 = rgbBufferedImageFactory0.getColorBufferedImage(310, 310, false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(310);
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      // Undeclared exception!
      pcxImageParser0.writeImage(bufferedImage0, (OutputStream) byteArrayOutputStream0, pcxImagingParameters0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      String string0 = pcxImageParser0.getName();
      assertEquals("Pcx-Custom", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PcxImageParser pcxImageParser0 = new PcxImageParser();
      PcxImagingParameters pcxImagingParameters0 = pcxImageParser0.getDefaultParameters();
      byte[] byteArray0 = pcxImageParser0.getICCProfileBytes((ByteSource) null, pcxImagingParameters0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[4];
      PcxImageParser.PcxHeader pcxImageParser_PcxHeader0 = new PcxImageParser.PcxHeader(65, 32, 32, 65, 32, 32, 32, 32, (-3232), 65, intArray0, 0, 0, 65, 43, 0, (-942));
      MockFileWriter mockFileWriter0 = new MockFileWriter("*1sTB+=gi:V", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      pcxImageParser_PcxHeader0.dump(mockPrintWriter0);
  }
}
