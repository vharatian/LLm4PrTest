/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 01:45:00 GMT 2025
 */

package org.apache.commons.imaging.palette;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.palette.ColorComponent;
import org.apache.commons.imaging.palette.ColorCount;
import org.apache.commons.imaging.palette.ColorCountComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ColorCountComparator_ESTest extends ColorCountComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.BLUE;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(177);
      int int0 = colorCountComparator0.compare(colorCount0, colorCount0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.BLUE;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(177);
      ColorCount colorCount1 = new ColorCount(0);
      int int0 = colorCountComparator0.compare(colorCount0, colorCount1);
      assertEquals(177, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.GREEN;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(341);
      int int0 = colorCountComparator0.compare(colorCount0, colorCount0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.GREEN;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(341);
      ColorCount colorCount1 = new ColorCount(0);
      int int0 = colorCountComparator0.compare(colorCount0, colorCount1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.ALPHA;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount(981);
      ColorCount colorCount1 = new ColorCount(981);
      int int0 = colorCountComparator0.compare(colorCount1, colorCount0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.RED;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount((-332));
      ColorCount colorCount1 = new ColorCount(255);
      int int0 = colorCountComparator0.compare(colorCount0, colorCount1);
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.RED;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount((-332));
      ColorCount colorCount1 = new ColorCount(255);
      int int0 = colorCountComparator0.compare(colorCount1, colorCount0);
      assertEquals((-255), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.GREEN;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      // Undeclared exception!
      try { 
        colorCountComparator0.compare((ColorCount) null, (ColorCount) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.palette.ColorCountComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ColorComponent colorComponent0 = ColorComponent.ALPHA;
      ColorCountComparator colorCountComparator0 = new ColorCountComparator(colorComponent0);
      ColorCount colorCount0 = new ColorCount((-1));
      int int0 = colorCountComparator0.compare(colorCount0, colorCount0);
      assertEquals(0, int0);
  }
}
