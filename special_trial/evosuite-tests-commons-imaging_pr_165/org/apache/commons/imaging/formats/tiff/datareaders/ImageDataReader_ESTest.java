/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 21:39:50 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff.datareaders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.RasterFormatException;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteOrder;
import java.util.LinkedList;
import org.apache.commons.imaging.formats.tiff.JpegImageData;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffImageData;
import org.apache.commons.imaging.formats.tiff.constants.TiffPlanarConfiguration;
import org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream;
import org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips;
import org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled;
import org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterBiLevel;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCieLab;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterCmyk;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterRgb;
import org.apache.commons.imaging.formats.tiff.photometricinterpreters.PhotometricInterpreterYCbCr;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ImageDataReader_ESTest extends ImageDataReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[5];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb((-722), intArray0, 24, (-722), 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 48, 0);
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled((TiffDirectory) null, photometricInterpreterRgb0, 48, (-722), (-722), intArray0, (-722), 264, 0, 32773, (-722), 48, tiffPlanarConfiguration0, byteOrder0, tiffImageData_Tiles0);
      dataReaderTiled0.transferBlockToRaster(2382, 24, 732, 24, intArray0, 1842, 0, (-722), 48, intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1127, linkedList0, 4L, 0L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 0, 6, 321);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-3603), intArray0, 6, 1127, 0, 12, 64, 0, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      dataReaderStrips0.transferBlockToRaster(4043, 50940, 0, 46, intArray0, 82, 50940, 2498, 2498, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(35, linkedList0, 35, 35, byteOrder0);
      int[] intArray0 = new int[11];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 35);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 35);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 35, intArray0, 1701, 35, 1701, 6, 6, (-985), tiffPlanarConfiguration0, byteOrder0, (-985), tiffImageData_Strips0);
      dataReaderStrips0.transferBlockToRaster(35, 346, 35, 346, intArray0, 35, 35, 35, 35, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 262);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-2), linkedList0, 0L, 0L, byteOrder0);
      int[] intArray0 = new int[9];
      PhotometricInterpreterBiLevel photometricInterpreterBiLevel0 = new PhotometricInterpreterBiLevel((byte)16, intArray0, 4, (-2), (-2), true);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = (DataReaderStrips)tiffImageData_Strips0.getDataReader(tiffDirectory0, photometricInterpreterBiLevel0, 41, intArray0, (byte)16, (byte)64, (byte)64, (-912), (byte)64, tiffPlanarConfiguration0, byteOrder0);
      float[] floatArray0 = new float[3];
      dataReaderStrips0.transferBlockToRaster((-2349), 262, (-912), (byte)16, intArray0, 328, 16, 56, 262, floatArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 8, 8, 8);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 8, 8, 6, 6, 8, 8, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      float[] floatArray0 = new float[2];
      // Undeclared exception!
      try { 
        dataReaderStrips0.transferBlockToRaster(32946, (byte) (-126), 8, 1991, intArray0, 32946, (-1), 8, 6, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1000
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 8);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 8, 0, 6, 6, 8, 8, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      float[] floatArray0 = new float[6];
      dataReaderStrips0.transferBlockToRaster((byte) (-126), (byte) (-126), 62, 64, intArray0, (byte) (-126), (-126), 64, (byte) (-126), floatArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 60, 60, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[5];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 60, 60, 6, 59, 60, 60, tiffPlanarConfiguration0, byteOrder0, 318, tiffImageData_Strips0);
      dataReaderStrips0.unpackIntSamples((byte) (-126), (byte)1, 64, byteArray0, 59, (-331), byteOrder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[8];
      PhotometricInterpreterBiLevel photometricInterpreterBiLevel0 = new PhotometricInterpreterBiLevel(1, intArray0, 1, 5, 5, false);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled((TiffDirectory) null, photometricInterpreterBiLevel0, 301, 1, 301, intArray0, 1, 1, 301, 127, 1, 56, tiffPlanarConfiguration0, byteOrder0, (TiffImageData.Tiles) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)9;
      // Undeclared exception!
      try { 
        dataReaderTiled0.unpackIntSamples(301, 5, 1, byteArray0, (-22), (-22), byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1152, linkedList0, (-19L), (-10L), byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(2368, intArray0, 2368, 6, 321);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 6, intArray0, (-2555), 1152, 291942, (-1449), (-1124), 2368, tiffPlanarConfiguration0, byteOrder0, 1767, (TiffImageData.Strips) null);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        dataReaderStrips0.unpackIntSamples(291942, 12, (-3920), byteArray0, (-2555), 6, byteOrder0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[18];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 6, 6, 60);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[4];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 48, intArray0, 913, 41029, 5, 3103, 3, 60, tiffPlanarConfiguration0, byteOrder0, (-2538), tiffImageData_Strips0);
      try { 
        dataReaderStrips0.unpackFloatingPointSamples(1772, 60, 5, byteArray0, 3, 965, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Imaging does not yet support floating-point data with predictor type 3 for 965 bits per sample
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1152, linkedList0, 0L, 0L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(2368, intArray0, 0, 6, 321);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-3603), intArray0, 6, 0, 0, 0, 705, 0, tiffPlanarConfiguration0, byteOrder0, 6, (TiffImageData.Strips) null);
      byte[] byteArray0 = new byte[0];
      try { 
        dataReaderStrips0.unpackFloatingPointSamples(1152, 0, 520, byteArray0, (-4145), (-4145), byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Imaging does not support floating-point samples with -4145 bits per sample
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[18];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 6, 6, 60);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 2916, 702);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderTiled dataReaderTiled0 = (DataReaderTiled)tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterCieLab0, (-32), intArray0, 60, 59, (-1618), 6, 60, tiffPlanarConfiguration0, byteOrder0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)109;
      // Undeclared exception!
      try { 
        dataReaderTiled0.applyPredictorToBlock(499, 32809, 1, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 21L, (-3399L), byteOrder0);
      int[] intArray0 = new int[0];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(1, intArray0, 0, (-391), 1);
      int[] intArray1 = new int[23];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[4];
      byte[] byteArray0 = new byte[5];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 3445, 0);
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled(tiffDirectory0, photometricInterpreterCieLab0, 0, 255, 64, intArray1, (-391), 6, 6, 0, (-391), 255, tiffPlanarConfiguration0, byteOrder0, tiffImageData_Tiles0);
      dataReaderTiled0.applyPredictorToBlock(1, 3445, (-7), byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[5];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb((-722), intArray0, 24, (-722), 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 48, 0);
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled((TiffDirectory) null, photometricInterpreterRgb0, 48, (-722), (-722), intArray0, (-722), 264, 0, 32773, (-722), 48, tiffPlanarConfiguration0, byteOrder0, tiffImageData_Tiles0);
      byte[] byteArray0 = new byte[2];
      dataReaderTiled0.applyPredictorToBlock(537, (-3), 266, byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[5];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb((-722), intArray0, 24, (-722), 0);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 48, 0);
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled((TiffDirectory) null, photometricInterpreterRgb0, 48, (-722), (-722), intArray0, (-722), 264, 0, 32773, (-722), 48, tiffPlanarConfiguration0, byteOrder0, tiffImageData_Tiles0);
      dataReaderTiled0.applyPredictor(intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(34, linkedList0, 34, 34, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 34);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, 34);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 34, 50177, 34, 34, 34, 34, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      dataReaderStrips0.isHomogenous(34);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2337, linkedList0, 3021L, 0L, byteOrder0);
      int[] intArray0 = new int[0];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(16, intArray0, 2337, 2337, 6);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, (-3182), intArray0, 2, 16, 3, 16, (-2216), 41993, tiffPlanarConfiguration0, byteOrder0, 9, (TiffImageData.Strips) null);
      dataReaderStrips0.applyPredictor(intArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-11), linkedList0, (-11), (-11), byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, (-11));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      byte[] byteArray0 = new byte[4];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, (-11));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, (-11), 50177, (-11), (-11), (-11), (-11), tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      // Undeclared exception!
      dataReaderStrips0.unpackIntSamples((-11), 50177, 6, byteArray0, (-11), 50177, byteOrder0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int[] intArray0 = new int[18];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab((-3929), intArray0, (-3929), (-3929), (-3929));
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-128));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterCieLab0, (-3929), intArray0, 2827, 3, (-930), (-135), 3, (-135), tiffPlanarConfiguration0, byteOrder0, (-930), tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.unpackIntSamples(1027, (-3929), 3, (byte[]) null, 9, 50165, byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32773, linkedList0, 0L, 0L, byteOrder0);
      int[] intArray0 = new int[0];
      PhotometricInterpreterBiLevel photometricInterpreterBiLevel0 = new PhotometricInterpreterBiLevel((-391), intArray0, 6, (-1839), (-1839), false);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled(tiffDirectory0, photometricInterpreterBiLevel0, (-1839), (-4522), 32773, intArray0, (-391), 6, 34892, 6, (-4522), (-1839), tiffPlanarConfiguration0, byteOrder0, (TiffImageData.Tiles) null);
      // Undeclared exception!
      try { 
        dataReaderTiled0.unpackFloatingPointSamples((-1839), 2513, (-4522), (byte[]) null, 2513, (-4522), byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      byte[] byteArray0 = new byte[4];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, (-1687));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, (-1687), intArray0, 60, 4, 60, 60, 14, 60, tiffPlanarConfiguration0, byteOrder0, (-1687), tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.unpackFloatingPointSamples((-1687), 6, (-547), byteArray0, 60, 6, byteOrder0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 6, 6, 32);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[8];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 32, 6, 6, 6, 32, 32, tiffPlanarConfiguration0, byteOrder0, 32, tiffImageData_Strips0);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle rectangle0 = line2D_Float0.getBounds();
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported sample format, value=6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 8, 8, 8);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, (-284), intArray0, 3, 2, 2, 6, 50939, 8, tiffPlanarConfiguration0, byteOrder0, (-2870), tiffImageData_Strips0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle rectangle0 = rectangle2D_Float0.getBounds();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1970), linkedList0, 94L, (-1970), byteOrder0);
      int[] intArray0 = new int[8];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab((-1970), intArray0, (-1970), 6, (-1970));
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 2, intArray0, (-556), 6, 2, 6, 6, 47, tiffPlanarConfiguration0, byteOrder0, 8, tiffImageData_Strips0);
      Polygon polygon0 = new Polygon(intArray0, intArray0, 8);
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readRasterData(rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffImageData$Strips", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2314, linkedList0, 3021L, 2314, byteOrder0);
      int[] intArray0 = new int[1];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(2314, intArray0, 2314, 2314, 6);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 2, 2314, 2, 2314, (-2216), 41993, tiffPlanarConfiguration0, byteOrder0, 9, (TiffImageData.Strips) null);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(700, linkedList0, 700, 700, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 700);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 2337);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, (-978), 3234, 22, 2272, (-4256), 3234, tiffPlanarConfiguration0, byteOrder0, 3234, tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle(3234, 1);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[14];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 60, 64);
      ImageDataReader imageDataReader0 = tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterCieLab0, 50942, intArray0, (-1929), 60, 46, (-1929), 64, tiffPlanarConfiguration0, byteOrder0);
      Point2D.Float point2D_Float0 = new Point2D.Float(247.94F, 705.5947F);
      Line2D.Float line2D_Float0 = new Line2D.Float(point2D_Float0, point2D_Float0);
      Rectangle rectangle0 = line2D_Float0.getBounds();
      // Undeclared exception!
      try { 
        imageDataReader0.readImageData(rectangle0, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderTiled", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte)0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 0, 0, 6, 0, 0, 60, tiffPlanarConfiguration0, byteOrder0, 0, tiffImageData_Strips0);
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.DataReaderStrips", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 8, 8, 8);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 8);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 6, 8, 8, (-540), (-540), 8, tiffPlanarConfiguration0, byteOrder0, (-1351), tiffImageData_Strips0);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        dataReaderStrips0.readImageData(rectangle0, false, true);
        fail("Expecting exception: RasterFormatException");
      
      } catch(RasterFormatException e) {
         //
         // zero or negative width value
         //
         verifyException("org.apache.commons.imaging.common.ImageBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32773, linkedList0, 0L, 0L, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterBiLevel photometricInterpreterBiLevel0 = new PhotometricInterpreterBiLevel(32773, intArray0, 6, (-1839), (-1839), false);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled(tiffDirectory0, photometricInterpreterBiLevel0, (-1839), (-4016), 32773, intArray0, 32773, 6, 3216, 6, (-4016), (-1839), tiffPlanarConfiguration0, byteOrder0, (TiffImageData.Tiles) null);
      BitInputStream bitInputStream0 = new BitInputStream((InputStream) null, byteOrder0);
      // Undeclared exception!
      try { 
        dataReaderTiled0.getSamplesAsBytes(bitInputStream0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[18];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 60);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[4];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (-732));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 0, intArray0, 60, 60, 60, 60, 60, (-732), tiffPlanarConfiguration0, byteOrder0, 1642, tiffImageData_Strips0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2324), 60);
      BitInputStream bitInputStream0 = new BitInputStream(byteArrayInputStream0, byteOrder0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.getSamplesAsBytes(bitInputStream0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2324
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(37, linkedList0, 37, 0L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 37, 6, 321);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 37, intArray0, 0, 37, 37, 321, 321, 0, tiffPlanarConfiguration0, byteOrder0, 6, (TiffImageData.Strips) null);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      dataReaderStrips0.applyPredictorToBlock(37, 65000, (-729), byteArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 50, 102);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(24, linkedList0, 1L, 1L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk((-464), intArray0, 3, 50, 3);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderTiled dataReaderTiled0 = (DataReaderTiled)tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterCmyk0, (-2532), intArray0, 6, 6, 2129760502, 881, 24, tiffPlanarConfiguration0, byteOrder0);
      // Undeclared exception!
      try { 
        dataReaderTiled0.applyPredictorToBlock(50, 764, 3, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(35, linkedList0, 35, 35, byteOrder0);
      int[] intArray0 = new int[11];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 35);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 2337);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 35, intArray0, 6, 2337, 6, 6, 6, (-985), tiffPlanarConfiguration0, byteOrder0, 2337, tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.transferBlockToRaster(2337, 59, 35, 59, intArray0, 35, 35, 2337, 2337, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, 4, byteOrder0);
      int[] intArray0 = new int[16];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 4);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, 4);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 4, 50165, 4, 4, 4, 4, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      dataReaderStrips0.transferBlockToRaster(4, 33437, 2559, 3, intArray0, 2559, 6, 3016, 4, intArray0);
      assertEquals(16, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[19];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 32);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[12];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte)0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 6, 0, 6, 6, 6, 32, tiffPlanarConfiguration0, byteOrder0, 32, tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.transferBlockToRaster(32, (byte)0, 0, 32, intArray0, (-2129760504), (byte)28, (-2129760466), 6, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 60, 60, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 60, 60, 6, 59, 60, 60, tiffPlanarConfiguration0, byteOrder0, 318, tiffImageData_Strips0);
      float[] floatArray0 = new float[6];
      dataReaderStrips0.transferBlockToRaster(60, 8, 60, (byte)1, intArray0, (-123), 530, 8, 6, floatArray0);
      assertEquals(6, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[19];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 32);
      byte[] byteArray0 = new byte[19];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 1472, intArray0, (-764), 6, 32811, 32811, 1472, 56, tiffPlanarConfiguration0, byteOrder0, 1164333175, (TiffImageData.Strips) null);
      // Undeclared exception!
      try { 
        dataReaderStrips0.unpackIntSamples(8, 56, 4934, byteArray0, 2, 1737, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9868
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[6];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 60, 60, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[5];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 60, 60, 6, 59, 60, 60, tiffPlanarConfiguration0, byteOrder0, 318, tiffImageData_Strips0);
      int[] intArray1 = dataReaderStrips0.unpackIntSamples((byte)109, (-331), (byte) (-126), byteArray0, (byte)1, 60, byteOrder0);
      assertEquals(41706, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(37, linkedList0, 4L, 0L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 37, 6, 321);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-3603), intArray0, 6, 37, 37, 12, 59, 0, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      byte[] byteArray0 = new byte[20];
      int[] intArray1 = dataReaderStrips0.unpackIntSamples(0, 3530, 0, byteArray0, 37, 14, byteOrder0);
      assertEquals(0, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      int[] intArray0 = new int[1];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[14];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-3366), 32);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, (byte)102, (-3366), byteOrder0);
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(33445, intArray0, 4, 32, 32);
      DataReaderTiled dataReaderTiled0 = (DataReaderTiled)tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterCmyk0, 32, intArray0, 33445, 32, 32, 33445, 4, tiffPlanarConfiguration0, byteOrder0);
      // Undeclared exception!
      try { 
        dataReaderTiled0.unpackFloatingPointSamples((byte)102, 4, 32, byteArray0, 102, 32, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      int[] intArray0 = new int[1];
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[14];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, (-3366), 32);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, (byte)102, (-3366), byteOrder0);
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk(33445, intArray0, 4, 32, 32);
      DataReaderTiled dataReaderTiled0 = (DataReaderTiled)tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterCmyk0, 32, intArray0, 33445, 32, 32, 33445, 4, tiffPlanarConfiguration0, byteOrder0);
      // Undeclared exception!
      try { 
        dataReaderTiled0.unpackFloatingPointSamples((byte)102, 4, 32, byteArray0, 102, 32, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[19];
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[12];
      TiffImageData.Tiles tiffImageData_Tiles0 = new TiffImageData.Tiles(tiffElement_DataElementArray0, 32, (-962));
      PhotometricInterpreterCmyk photometricInterpreterCmyk0 = new PhotometricInterpreterCmyk((-1305), intArray0, 6, (byte)92, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderTiled dataReaderTiled0 = (DataReaderTiled)tiffImageData_Tiles0.getDataReader(tiffDirectory0, photometricInterpreterCmyk0, (-1518), intArray0, (-1505), 33445, 6, (-962), 92, tiffPlanarConfiguration0, byteOrder0);
      byte[] byteArray0 = new byte[1];
      int[] intArray1 = dataReaderTiled0.unpackFloatingPointSamples(6, 27, 0, byteArray0, 51008, 32, byteOrder0);
      assertEquals(0, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(18, linkedList0, 18, 18, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 6, 6, 18);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      byte[] byteArray0 = new byte[7];
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[4];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte)0);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 18, 6, 6, 59, 18, 18, tiffPlanarConfiguration0, byteOrder0, 32773, tiffImageData_Strips0);
      // Undeclared exception!
      try { 
        dataReaderStrips0.unpackFloatingPointSamples(965, 64, 48, byteArray0, 64, 64, byteOrder0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab((-3929), intArray0, (-3929), (-3929), (-3929));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[0];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte)11);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips((TiffDirectory) null, photometricInterpreterCieLab0, 3, intArray0, (byte)11, 1737, 1737, 255, 3, (-1), tiffPlanarConfiguration0, byteOrder0, (byte)11, tiffImageData_Strips0);
      byte[] byteArray0 = new byte[2];
      try { 
        dataReaderStrips0.unpackFloatingPointSamples(1126, 32, 1, byteArray0, 3, (-1), byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Imaging does not yet support floating-point data with predictor type 3 for -1 bits per sample
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1127, linkedList0, 4L, 0L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 0, 6, 321);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-3603), intArray0, 6, 1127, 0, 12, 64, 0, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        dataReaderStrips0.decompress(byteArray0, 32946, (-1038), 1026, (byte)14);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.ZlibDeflate", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 6, 6, 32);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[2];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 4197);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 621, intArray0, 582, 4197, 6, 582, (-1), 793, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        dataReaderStrips0.decompress(byteArray0, 32773, 994, 1526, (-1513));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.PackBits", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(6, intArray0, 959, 8, (-2129760466));
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled(tiffDirectory0, photometricInterpreterRgb0, (-2129760466), (-1244), 6, intArray0, (-1244), 1472, 6, 6, 8, 1472, tiffPlanarConfiguration0, byteOrder0, (TiffImageData.Tiles) null);
      // Undeclared exception!
      try { 
        dataReaderTiled0.decompress((byte[]) null, 8, (-2507), 600, (-4748));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.Inflater", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1102, linkedList0, 4L, 0L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 0, 6, 314);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 0, intArray0, 314, 0, 1102, 1102, 1102, 16, tiffPlanarConfiguration0, byteOrder0, 64, (TiffImageData.Strips) null);
      byte[] byteArray0 = new byte[6];
      try { 
        dataReaderStrips0.decompress(byteArray0, 5, 682, 14, 5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Bad Code: -1 codes: 258 code_size: 9, table: 4096
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwDecompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[18];
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[4];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(33429, intArray0, 60, 87, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 60);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-1859), intArray0, 60, 961, 2131, (-957), 60, 42032, tiffPlanarConfiguration0, byteOrder0, 33429, tiffImageData_Strips0);
      try { 
        dataReaderStrips0.decompress(byteArray0, 4, 83, 2131, 60);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(2337, linkedList0, 3021L, 3021L, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterRgb photometricInterpreterRgb0 = new PhotometricInterpreterRgb(6, intArray0, 2337, 6, 2337);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderTiled dataReaderTiled0 = new DataReaderTiled(tiffDirectory0, photometricInterpreterRgb0, 2337, 2337, 2337, intArray0, 2337, 2337, 2337, 2337, 2337, 2337, tiffPlanarConfiguration0, byteOrder0, (TiffImageData.Tiles) null);
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = dataReaderTiled0.decompress(byteArray0, (byte)3, (byte)0, (byte)3, (byte)0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1081, linkedList0, 10L, 10L, byteOrder0);
      int[] intArray0 = new int[7];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 6, 6, 314);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, 1081, intArray0, 0, 1081, 1081, 5, 1081, 1081, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      byte[] byteArray0 = new byte[1];
      try { 
        dataReaderStrips0.decompress(byteArray0, 2, 1081, 2, (byte)1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[12];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte)1);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 0, 0, 6, 0, 0, 60, tiffPlanarConfiguration0, byteOrder0, 0, tiffImageData_Strips0);
      byte[] byteArray1 = dataReaderStrips0.decompress(byteArray0, (byte)1, 60, 0, (byte)1);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(35, linkedList0, 35, 0L, byteOrder0);
      int[] intArray0 = new int[1];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 35, 35, 38);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[1];
      byte[] byteArray0 = new byte[3];
      JpegImageData jpegImageData0 = new JpegImageData(38, 6, byteArray0);
      tiffElement_DataElementArray0[0] = (TiffElement.DataElement) jpegImageData0;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 35);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, (-199), intArray0, (-1488), 3056, (-1960), (byte)28, 1737, (-1960), tiffPlanarConfiguration0, byteOrder0, (byte)28, tiffImageData_Strips0);
      Dimension dimension0 = new Dimension(2129760536, 50941);
      Rectangle rectangle0 = new Rectangle(dimension0);
      try { 
        dataReaderStrips0.readImageData(rectangle0, true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Tiff: unknown/unsupported compression: -1960
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.ImageDataReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 2002L, byteOrder0);
      int[] intArray0 = new int[8];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(56, intArray0, 9, 8, 6);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 9, intArray0, 2, 56, 32946, 9, (-2216), 346, tiffPlanarConfiguration0, byteOrder0, 2380, (TiffImageData.Strips) null);
      int[] intArray1 = dataReaderStrips0.applyPredictor(intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray1);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(37, linkedList0, 4L, 0L, byteOrder0);
      int[] intArray0 = new int[2];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(6, intArray0, 37, 6, 321);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-3603), intArray0, 6, 37, 37, 12, 59, 0, tiffPlanarConfiguration0, byteOrder0, 0, (TiffImageData.Strips) null);
      int[] intArray1 = dataReaderStrips0.applyPredictor((int[]) null);
      assertNull(intArray1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[1];
      intArray0[0] = 32;
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 32, 32, 32);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[8];
      byte[] byteArray0 = new byte[19];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 32, 32, 6, 32, 32, 32, tiffPlanarConfiguration0, byteOrder0, 32, tiffImageData_Strips0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 32, 32);
      BitInputStream bitInputStream0 = new BitInputStream(byteArrayInputStream0, byteOrder0);
      dataReaderStrips0.getSamplesAsBytes(bitInputStream0, intArray0);
      assertEquals(4L, bitInputStream0.getBytesRead());
      assertArrayEquals(new int[] {(-1)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(32, linkedList0, 32, 32, byteOrder0);
      int[] intArray0 = new int[1];
      intArray0[0] = 6;
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 6, 6, 32);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[8];
      byte[] byteArray0 = new byte[19];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, (byte) (-126));
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 32, 6, 6, 6, 32, 32, tiffPlanarConfiguration0, byteOrder0, 32, tiffImageData_Strips0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 6, 32);
      BitInputStream bitInputStream0 = new BitInputStream(byteArrayInputStream0, byteOrder0);
      dataReaderStrips0.getSamplesAsBytes(bitInputStream0, intArray0);
      assertEquals(1L, bitInputStream0.getBytesRead());
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 1, 1, byteOrder0);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 1, 1, 1);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[1];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 1);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 6, 1, 1, (-540), (-540), 1, tiffPlanarConfiguration0, byteOrder0, (-1351), tiffImageData_Strips0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 6, 1);
      BitInputStream bitInputStream0 = new BitInputStream(byteArrayInputStream0, byteOrder0);
      try { 
        dataReaderStrips0.getSamplesAsBytes(bitInputStream0, intArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // BitInputStream: incomplete bit read
         //
         verifyException("org.apache.commons.imaging.formats.tiff.datareaders.BitInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[1];
      intArray0[0] = 8;
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 8, 8, 8);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      byte[] byteArray0 = new byte[1];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 8);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 6, 8, 8, 8, 8, 8, tiffPlanarConfiguration0, byteOrder0, (-1351), tiffImageData_Strips0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 6, 8);
      BitInputStream bitInputStream0 = new BitInputStream(byteArrayInputStream0, byteOrder0);
      dataReaderStrips0.getSamplesAsBytes(bitInputStream0, intArray0);
      assertEquals(1L, bitInputStream0.getBytesRead());
      assertArrayEquals(new int[] {(-1)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(60, linkedList0, 60, 60, byteOrder0);
      int[] intArray0 = new int[18];
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      PhotometricInterpreterYCbCr photometricInterpreterYCbCr0 = new PhotometricInterpreterYCbCr(33429, intArray0, 60, 87, 60);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 60);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterYCbCr0, (-1886), intArray0, 60, 913, 2131, (-957), 5, 42032, tiffPlanarConfiguration0, byteOrder0, (-807), tiffImageData_Strips0);
      boolean boolean0 = dataReaderStrips0.isHomogenous((-957));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(8, linkedList0, 8, 8, byteOrder0);
      int[] intArray0 = new int[1];
      intArray0[0] = 8;
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 8, 8, 8);
      TiffElement.DataElement[] tiffElement_DataElementArray0 = new TiffElement.DataElement[3];
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips(tiffElement_DataElementArray0, 8);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.CHUNKY;
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 6, 8, 8, (-540), (-540), 8, tiffPlanarConfiguration0, byteOrder0, (-1351), tiffImageData_Strips0);
      boolean boolean0 = dataReaderStrips0.isHomogenous(8);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, 4, byteOrder0);
      int[] intArray0 = new int[16];
      PhotometricInterpreterCieLab photometricInterpreterCieLab0 = new PhotometricInterpreterCieLab(6, intArray0, 0, 0, 4);
      TiffPlanarConfiguration tiffPlanarConfiguration0 = TiffPlanarConfiguration.PLANAR;
      TiffImageData.Strips tiffImageData_Strips0 = new TiffImageData.Strips((TiffElement.DataElement[]) null, 4);
      DataReaderStrips dataReaderStrips0 = new DataReaderStrips(tiffDirectory0, photometricInterpreterCieLab0, 6, intArray0, 4, 50165, 4, 4, 4, 4, tiffPlanarConfiguration0, byteOrder0, 6, tiffImageData_Strips0);
      dataReaderStrips0.resetPredictor();
  }
}
