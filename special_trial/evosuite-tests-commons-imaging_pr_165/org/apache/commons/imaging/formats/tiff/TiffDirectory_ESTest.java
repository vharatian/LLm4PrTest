/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 21:17:17 GMT 2025
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.apache.commons.imaging.common.RationalNumber;
import org.apache.commons.imaging.formats.tiff.JpegImageData;
import org.apache.commons.imaging.formats.tiff.TiffDirectory;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.TiffImageData;
import org.apache.commons.imaging.formats.tiff.constants.TiffDirectoryType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAscii;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoByte;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDoubles;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloat;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoLongs;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRational;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoRationals;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSByte;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSBytes;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSLongs;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRational;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSShorts;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShortOrLong;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoShorts;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TiffDirectory_ESTest extends TiffDirectory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(279, 279, fieldTypeFloat0, (-29L), (-1L), (byte[]) null, byteOrder0, (-2207));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2151), linkedList0, 0L, (-2207), byteOrder0);
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("org.apache.commons.imaging.formats.tiff.TiffDirectory", (-14), (-14), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-14), linkedList0, (-1), (-14), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"org.apache.commons.imaging.formats.tiff.TiffDirectory\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2132), fieldTypeFloat0, 7, 1L, (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(359, linkedList0, 359, 255L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("", 7, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"\" has wrong count 7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(37379, linkedList0, 37379, 37379, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("S=j", 37379, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"S=j\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte)6, fieldTypeRational0, (-1633L), 2146L, byteArray0, byteOrder0, 6);
      linkedList0.add(tiffField0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational(") != byteCounts.length(", (-1), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-204), linkedList0, 2146L, (byte)6, byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \") != byteCounts.length(\" has wrong count -1633
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1700, linkedList0, 1700, 1700, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("W*!i'cY", 1700, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"W*!i'cY\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("[FaD", 6, 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSBytes0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"[FaD\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483637L), byteArray0, byteOrder0, 2992);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRational tagInfoRational0 = new TagInfoRational("GQal6$~Q~", (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(50972, linkedList0, 1779L, 1, byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"GQal6$~Q~\" has wrong count 6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2085), linkedList0, (-2085), (-2085), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoRational tagInfoRational0 = new TagInfoRational("\"d5MM>]B", (-2085), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\"d5MM>]B\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("", (-2132), (-2132), tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1626), (-1626), fieldTypeAscii0, (-1626), 2, byteArray0, (ByteOrder) null, (byte) (-64));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-64), linkedList0, (byte)37, 4125L, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("'<TvcWMQJJ", (-1626), 18, tiffDirectoryType0);
      TagInfoLong tagInfoLong0 = new TagInfoLong("'<TvcWMQJJ", (-1626), tagInfoAscii0.dataTypes, 18, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"'<TvcWMQJJ\" has wrong count -1626
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(433, linkedList0, 433, 433, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShort tagInfoShort0 = new TagInfoShort((String) null, 433, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"null\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-1L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("b|:xdS|miF\\dRzJGI", 6, 0, tiffDirectoryType0);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"b|:xdS|miF\\dRzJGI\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-40), (byte) (-40), fieldTypeRational0, (byte) (-40), (byte) (-40), byteArray0, byteOrder0, (byte) (-40));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-40), linkedList0, (byte) (-40), (byte) (-40), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoByte tagInfoByte0 = new TagInfoByte("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble", (byte) (-40), fieldTypeRational0, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDouble\" has wrong count -40
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(41491, "Interoperability");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41491, (-2037), fieldTypeDouble0, 5, (-2037), byteArray0, byteOrder0, 812);
      linkedList0.addFirst(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-11), linkedList0, (byte)14, 73L, byteOrder0);
      tiffDirectory0.dump();
      assertEquals((-11), tiffDirectory0.type);
      assertEquals(73L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeAscii0, (byte)0, (-4812L), byteArray0, byteOrder0, 37345);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)0, linkedList0, 37345, 37345, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("$", (byte)0, (byte)0, tiffDirectoryType0);
      tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
      assertEquals(37345L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (byte)6, byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("#i\")I| k", 6, (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-1), (-1), byteOrder0);
      tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
      assertEquals(6, tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)31, 2, fieldTypeRational0, 2, (-2207), byteArray0, byteOrder0, (byte)31);
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TiffDirectory tiffDirectory0 = new TiffDirectory(31, linkedList0, 31, 1, byteOrder0);
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("GQal6$~Q~", (byte)31, 250, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoRationals0, true);
      assertEquals(31, tiffDirectory0.type);
      assertEquals(1L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-1993L), (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", 6, 514, tiffDirectoryType0);
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", (byte)6, 404, tagInfoAscii0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoRationals0, true);
      assertEquals((-1993L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, 2992);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-1993L), (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", (byte)6, fieldTypeRational0.SHORT_OR_RATIONAL, 12, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoBytes0, true);
      assertEquals((-1993L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)78;
      TiffField tiffField0 = new TiffField(462, 1, fieldTypeShort0, 1, 0L, byteArray0, (ByteOrder) null, 663);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-836), linkedList0, (-286L), (byte)56, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoByte tagInfoByte0 = new TagInfoByte("s=N:<_Wv<Cz*->WG", 462, fieldTypeShort0, tiffDirectoryType0);
      byte byte0 = tiffDirectory0.getFieldValue(tagInfoByte0);
      assertEquals((-836), tiffDirectory0.type);
      assertEquals((byte)78, byte0);
      assertEquals(56L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2085, (byte) (-107), fieldTypeLong0, 2961L, 882L, (byte[]) null, byteOrder0, (byte)57);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(2085, linkedList0, (-1429L), 882L, byteOrder0);
      tiffDirectory0.getDirectoryEntries();
      assertEquals(2085, tiffDirectory0.type);
      assertEquals(882L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-1L), byteOrder0);
      tiffDirectory0.getByteOrder();
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, 732, (FieldType) null, 2147483647L, 0, byteArray0, byteOrder0, 167);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("Ta|xFrDo\"b\"3y", 0, 0, tiffDirectoryType0, true);
      tiffDirectory0.findField((TagInfo) tagInfoShortOrLong0, true);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2132), (-2132), fieldTypeFloat0, 0L, (-7L), (byte[]) null, byteOrder0, (-2132));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("ilt$:jS", (-2132), tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoSShort0, true);
      assertEquals((-2132L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-2132), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-9), (byte) (-9), fieldTypeRational0, (byte) (-9), (-2147483696L), byteArray0, byteOrder0, (byte) (-9));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-9), linkedList0, (-1993L), (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals((String) null, (-9), 18, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoSRationals0, true);
      assertEquals((-1993L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-9), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(33, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)4);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 12L, 0L, byteArray0, byteOrder0, (byte)32);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 34152L, (-532L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("]ek4IvQ)F", 1, (-790), tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoSShorts0);
      assertEquals(1, tiffDirectory0.type);
      assertEquals((-532L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2132), (-2132), fieldTypeFloat0, 0L, 15L, (byte[]) null, byteOrder0, (-2132));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat(";", (-2132), tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoFloat0);
      assertEquals((-2132L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-2132), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483637L), byteArray0, byteOrder0, 2992);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRational tagInfoRational0 = new TagInfoRational("GQal6$~Q~", (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2038), linkedList0, 2792L, 12L, byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoRational0);
      assertEquals(12L, tiffDirectory0.nextDirectoryOffset);
      assertEquals((-2038), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1626), (-1626), fieldTypeAscii0, (-1626), 2, byteArray0, (ByteOrder) null, (byte) (-108));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-108), linkedList0, (byte)37, 4125L, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("'<TvcWMQJJ", (-1626), 18, tiffDirectoryType0);
      tiffDirectory0.findField((TagInfo) tagInfoAscii0);
      assertEquals((-108), tiffDirectory0.type);
      assertEquals(4125L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, (-639L), byteOrder0);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2122), linkedList0, (-2122), (-2122), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffRasterData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-736), linkedList0, (-736), (-736), byteOrder0);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffImageData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2198), linkedList0, 1L, (-1604L), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasTiffFloatingPointRasterData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-28), linkedList0, (-28), (-28), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.hasJpegImageData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2443), linkedList0, 374, 374, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1457), linkedList0, (-1457), (-1457), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("K:#9[;e6N1o:QWb*15#", (-1457), (-1457), tiffDirectoryType0);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoShortOrLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"K:#9[;e6N1o:QWb*15#\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-14), linkedList0, (-14), (-14), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue((TagInfoShortOrLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1646), (-1646), fieldTypeAscii0, (-1646), 2, byteArray0, (ByteOrder) null, (byte) (-24));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-24), linkedList0, (byte)37, (byte) (-24), (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("'<TvcWMQJJ", (-1646), 18, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        tiffDirectory0.getRasterData(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      linkedList0.add((TiffField) null);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-14), linkedList0, (-14), (-14), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getJpegRawImageDataElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoXpString) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(3677, linkedList0, 3677, 3677, (ByteOrder) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSShort) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSRationals) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-14), (byte) (-14), fieldTypeRational0, (byte) (-14), (-2147483645L), byteArray0, byteOrder0, (byte) (-14));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals(") != byteCouts.length(", (byte) (-14), (byte) (-14), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-14), linkedList0, (-14), (byte) (-14), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(71, linkedList0, 71, 71, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSRational) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5, linkedList0, 5, 5, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-14), linkedList0, (-14), (-14), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSByte) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 3436L, 273, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoRationals) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 1, 1, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoLong) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoGpsText) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2133, linkedList0, 2133, 2133, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoDoubles) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 5346, 5346, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoDouble) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 1, 1, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoBytes) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-40), (byte) (-40), fieldTypeRational0, (byte) (-40), (byte) (-40), byteArray0, byteOrder0, (byte) (-40));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-40), linkedList0, (byte) (-40), (byte) (-40), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", (-40), fieldTypeRational0.SHORT_OR_RATIONAL, (byte) (-40), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoByte) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2085, 2085, fieldTypeFloat0, 2085, 2085, (byte[]) null, byteOrder0, 2085);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("", 2085, 2085, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, 2085, 2085, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfo) tagInfoSBytes0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-3), (byte) (-3), fieldTypeRational0, (byte) (-3), (byte) (-3), byteArray0, byteOrder0, (byte) (-3));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-3), linkedList0, (-2023L), (-2023L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", (byte) (-3), (-3279), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfo) tagInfoRationals0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(433, linkedList0, 433, 433, byteOrder0);
      linkedList0.add((TiffField) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.getElementDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1626), (-1626), fieldTypeAscii0, (-1626), 2, byteArray0, (ByteOrder) null, (byte) (-82));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-82), linkedList0, (byte)37, 4130L, (ByteOrder) null);
      // Undeclared exception!
      try { 
        tiffDirectory0.getElementDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2132), (-2132), fieldTypeFloat0, 0L, 8L, (byte[]) null, byteOrder0, (-2132));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(513, linkedList0, (-2132), 8L, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.findField((TagInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(465, 465, fieldTypeShort0, (-1655L), 465, (byte[]) null, byteOrder0, 465);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(465, linkedList0, 465, 465, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), 0L, byteOrder0);
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2037), "Interoperability");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(5, 6, fieldTypeDouble0, (-2132), 0L, byteArray0, byteOrder0, (-2132));
      linkedList0.addFirst(tiffField0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = null;
      try {
        tiffDirectory0 = new TiffDirectory((-3), (List<TiffField>) null, (-3), (-3), byteOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffRasterData();
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(2, tiffDirectory0.type);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      try { 
        tiffDirectory0.getJpegRawImageDataElement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1919), linkedList0, (-1919), (-1919), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("", (-1919), (-1919), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-656), linkedList0, (-656), (-656), byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoShorts) null, false);
      assertEquals((-656L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-656), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeAscii0, (byte)0, (-4812L), byteArray0, byteOrder0, 37345);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)0, linkedList0, 2L, (-2147483648L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("Required field \"", (byte)0, (byte)0, tiffDirectoryType0);
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii((String) null, (byte)0, 160, tagInfoRationals0.directoryType);
      tiffDirectory0.getFieldValue(tagInfoAscii0, false);
      assertEquals((-2147483648L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(71, linkedList0, 71, 71, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoAscii) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-736), linkedList0, (-736), (-736), byteOrder0);
      tiffDirectory0.findField((TagInfo) null, false);
      assertEquals((-736), tiffDirectory0.type);
      assertEquals((-736L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 0, (FieldType) null, 0L, 1123L, byteArray0, byteOrder0, (-2443));
      linkedList0.add(tiffField0);
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("Ta|xFrDo\"b\"3y", 0, 0, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.findField((TagInfo) tagInfoShortOrLong0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing expected field: 0 (0x0: Ta|xFrDo\"b\"3y): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, 2992);
      linkedList0.add(tiffField0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational(") != byteCounts.length(", (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, 2992, (-1), byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoSRational0, true);
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, (-2147483648L), 0, byteOrder0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      tiffDirectory0.getTiffImage(byteOrder0, (Map<String, Object>) hashMap0);
      assertEquals(0L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(453, (String) null);
      TiffField tiffField0 = new TiffField(273, (-637), fieldTypeShort0, 0L, 273, (byte[]) null, byteOrder0, 453);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-637), linkedList0, (-637), 453, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffImageData();
      assertEquals((-637), tiffDirectory0.type);
      assertEquals(453L, tiffDirectory0.nextDirectoryOffset);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-637), linkedList0, (-637), 453, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffImageData();
      assertFalse(boolean0);
      assertEquals(453L, tiffDirectory0.nextDirectoryOffset);
      assertEquals((-637), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = TiffDirectory.description((-97));
      assertEquals("Bad Type", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRational tagInfoRational0 = new TagInfoRational("GQal6$~Q~", (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2038), linkedList0, 2792L, 12L, byteOrder0);
      tiffDirectory0.findField((TagInfo) tagInfoRational0);
      assertEquals(12L, tiffDirectory0.nextDirectoryOffset);
      assertEquals((-2038), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1447, (String) null);
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeShort0, 0L, 273, (byte[]) null, byteOrder0, 453);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 453, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffRasterData();
      assertEquals(273, tiffDirectory0.type);
      assertEquals(453L, tiffDirectory0.nextDirectoryOffset);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffFloatingPointRasterData();
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
      assertFalse(boolean0);
      assertEquals(2, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeRational0, 513, 513, (byte[]) null, byteOrder0, 513);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1382), linkedList0, 513, (-1655L), byteOrder0);
      try { 
        tiffDirectory0.getJpegRawImageDataElement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1447, (String) null);
      TiffField tiffField0 = new TiffField(273, (-637), fieldTypeShort0, 0L, 273, (byte[]) null, byteOrder0, 453);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-637), linkedList0, (-637), 453, byteOrder0);
      try { 
        tiffDirectory0.imageDataInStrips();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeShort0, 273, 273, (byte[]) null, byteOrder0, 462);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 273, 273, byteOrder0);
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-312), linkedList0, 4L, 12L, (ByteOrder) null);
      try { 
        tiffDirectory0.getTiffRawImageDataElements();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Couldn't find image data.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString(">ev", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoXpString0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \">ev\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 1295L, 1295L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString((String) null, 0, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoXpString0, false);
      assertEquals(0, tiffDirectory0.type);
      assertEquals(1295L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, 2992);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-2530L), (-2147483648L), byteOrder0);
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString("po D@", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoXpString0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoGpsText) null, false);
      assertEquals((-2132L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-2132), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 1295L, 1295L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoXpString tagInfoXpString0 = new TagInfoXpString((String) null, 0, tiffDirectoryType0);
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("~lr{Tu*LUUu$", 0, 0, tagInfoXpString0.directoryType);
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText("", 6, tagInfoRationals0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoGpsText0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2207), fieldTypeFloat0, 0L, 0L, (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2207), linkedList0, 2190L, 2190L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoGpsText tagInfoGpsText0 = new TagInfoGpsText((String) null, 7, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoGpsText0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2184), (-2184), fieldTypeFloat0, (-2184), (-2184), (byte[]) null, byteOrder0, (-2184));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2184), linkedList0, (-2184), (-2184), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("", (-2184), (-2184), tiffDirectoryType0);
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("", (-2184), (-2184), tagInfoSShorts0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDoubles0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoDoubles) null, false);
      assertEquals((-2132), tiffDirectory0.type);
      assertEquals((-2132L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("", (-2132), (-2132), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDoubles0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, 2992);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-2147483648L), (-2147483648L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("z8q</", (byte)6, (byte)6, tiffDirectoryType0);
      double[] doubleArray0 = tiffDirectory0.getFieldValue(tagInfoDoubles0, false);
      assertEquals((-2147483648L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 5346, 5346, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("zR*", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"zR*\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2132), fieldTypeFloat0, 0L, (-16L), (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(7, linkedList0, 255L, 255L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoDouble tagInfoDouble0 = new TagInfoDouble("tPUI!Vy4E{,h|8^0t", 7, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoDouble0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"tPUI!Vy4E{,h|8^0t\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(472, 472, fieldTypeShort0, 0L, 472, (byte[]) null, byteOrder0, 472);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(472, linkedList0, 472, 472, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("\" has incorrect length ", 472, (-3462), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect length \" has incorrect type Short
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2132), (-2132), fieldTypeFloat0, (-2132), (-7L), (byte[]) null, byteOrder0, (-2132));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("", 3057, (-545), tiffDirectoryType0);
      TagInfoFloats tagInfoFloats1 = new TagInfoFloats("", (-2132), (-1751), tagInfoFloats0.directoryType);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloats1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 0, 0, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("", 0, 2358, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoFloats0, false);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2992, "org.apache.commons.io.filefilter.EmptyFileFilter");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2992, 2992, fieldTypeRational0, (-2147483648L), 6L, byteArray0, byteOrder0, (byte)27);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1202), linkedList0, (-1873L), 1540L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoFloats tagInfoFloats0 = new TagInfoFloats("]\"rHrohy*", 2992, (byte)27, tiffDirectoryType0);
      float[] floatArray0 = tiffDirectory0.getFieldValue(tagInfoFloats0, false);
      assertNull(floatArray0);
      assertEquals((-1202), tiffDirectory0.type);
      assertEquals(1540L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2086), (-2086), fieldTypeFloat0, 1L, 1L, (byte[]) null, byteOrder0, (-2086));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2086), linkedList0, (-2086), 1L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("org.apache.commons.imaging.formats.tiff.TiffDirectory", (-2086), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1619), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1619), (-1619), fieldTypeFloat0, (-1619), 12L, (byte[]) null, byteOrder0, 1494);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1619), linkedList0, (-1619), 2147483647L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("", (-1619), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1619), (-1619), fieldTypeFloat0, (-1619), 12L, (byte[]) null, byteOrder0, (-2067));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1619), linkedList0, (-1619), 1356L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoFloat tagInfoFloat0 = new TagInfoFloat("", (-1619), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoFloat0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"\" has wrong count -1619
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (byte)6, byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("#i\")I| k", 6, (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-1), (-1), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"#i\")I| k\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (byte)6, byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("#i\")I| k", 6, (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-1), (-1), byteOrder0);
      RationalNumber[] rationalNumberArray0 = tiffDirectory0.getFieldValue(tagInfoSRationals0, false);
      assertEquals(6, tiffDirectory0.type);
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
      assertNull(rationalNumberArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoSRationals) null, false);
      assertEquals((-2132), tiffDirectory0.type);
      assertEquals((-2132L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2158), linkedList0, (-2158), (-2158), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals("", (-2158), (-2158), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeRational0, (byte)3, (byte)3, byteArray0, byteOrder0, (byte)3);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals(") != byteCouts.lR;gth(", (byte)3, (byte)3, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, linkedList0, 3, (byte)3, byteOrder0);
      tiffDirectory0.getFieldValue(tagInfoSRationals0, true);
      assertEquals(3L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(3, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483645L), byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational(") != byteCounts.length(", (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (byte)6, (-1), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \") != byteCounts.length(\" has wrong count 6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 5346, 1L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("j2imc$18rq`&%fn", 6, 6, tiffDirectoryType0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("j2imc$18rq`&%fn", 5346, tagInfoSShorts0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"j2imc$18rq`&%fn\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 5346, 1L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(5346, 6, fieldTypeRational0, (-1751L), 0L, byteArray0, byteOrder0, (byte)3);
      linkedList0.add(tiffField0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational("j2imc$18rq`&%fn", 5346, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"j2imc$18rq`&%fn\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2132), fieldTypeFloat0, 0L, 1L, (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TiffDirectory tiffDirectory0 = new TiffDirectory(7, linkedList0, (-312L), (-1), byteOrder0);
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", 7, 12, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSLongs0, false);
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(7, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2132), (-2132), fieldTypeFloat0, 0L, (-7L), (byte[]) null, byteOrder0, (-2132));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("ilt$:jS", (-2132), tiffDirectoryType0);
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("", (-2132), (-2132), tagInfoSShort0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoSLongs) null, false);
      assertEquals((-2132L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-2132), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2133, linkedList0, 2133, 2133, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSLongs) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2331), 4, fieldTypeLong0, 2961L, 4, byteArray0, byteOrder0, (-2331));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-113), linkedList0, (-30L), 3197L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSLongs tagInfoSLongs0 = new TagInfoSLongs("j", (-2331), (-2331), tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSLongs0, true);
      assertEquals((-113), tiffDirectory0.type);
      assertEquals(3197L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, linkedList0, 3, 3, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong((String) null, 3, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"null\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2207), (-2207), fieldTypeFloat0, (-2207), (-2207), (byte[]) null, byteOrder0, (-2207));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2207), linkedList0, (-2207), (-2207), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("9J", (-2207), (-2207), tiffDirectoryType0);
      TagInfoSLong tagInfoSLong0 = new TagInfoSLong("0\"$:Q4zydSZHp2", (-2207), tagInfoSShorts0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"0\"$:Q4zydSZHp2\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-1993L), (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("", 6, 240, tiffDirectoryType0);
      short[] shortArray0 = tiffDirectory0.getFieldValue(tagInfoSShorts0, false);
      assertNull(shortArray0);
      assertEquals(6, tiffDirectory0.type);
      assertEquals((-1993L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(465, 465, fieldTypeShort0, (-1655L), 465, (byte[]) null, byteOrder0, 465);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(465, linkedList0, 465, 465, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("P.9", 465, 465, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShorts0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, linkedList0, 3, 3, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("v>@xc", 3, 3, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"v>@xc\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 5346, 1L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("j2imc$18rq`&%fn", 6, 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSShorts0, false);
      assertEquals(5346, tiffDirectory0.type);
      assertEquals(1L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2132), fieldTypeFloat0, 0L, 1L, (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(359, linkedList0, 359, 255L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoSShorts tagInfoSShorts0 = new TagInfoSShorts("", 7, (-2067), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("org.apache.commons.imaging.formats.tiff.TiffRasterDataType", (-2132), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"org.apache.commons.imaging.formats.tiff.TiffRasterDataType\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-80), (byte) (-80), fieldTypeRational0, (byte) (-80), (byte) (-80), byteArray0, byteOrder0, (byte) (-80));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-80), linkedList0, (byte) (-80), (byte) (-80), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSShort tagInfoSShort0 = new TagInfoSShort("", (byte) (-80), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(490, 490, fieldTypeShort0, 490, 490, (byte[]) null, byteOrder0, 490);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("ls+$`rH8r#oQh+2b", 490, 490, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(490, linkedList0, 490, (-1692L), byteOrder0);
      tiffDirectory0.getFieldValue(tagInfoSBytes0, false);
      assertEquals(490, tiffDirectory0.type);
      assertEquals((-1692L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("TIFF integer data uses unsupported horizontal-differencing predictor", 2, 2, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoSBytes0, false);
      assertEquals(2, tiffDirectory0.type);
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2618), linkedList0, (-2618), (-2618), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoSBytes) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2132), fieldTypeFloat0, 0L, 1L, (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("b4H=", 7, (-587), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(7, linkedList0, 0L, (-1), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSBytes0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"b4H=\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("org.apache.commons.imaging.formats.tiff.TiffDirectory", 262, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1), linkedList0, 262, 262, byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"org.apache.commons.imaging.formats.tiff.TiffDirectory\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2132), fieldTypeFloat0, 0L, 1L, (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoSBytes tagInfoSBytes0 = new TagInfoSBytes("b4H=", 7, (-587), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(7, linkedList0, (-312L), (-1), byteOrder0);
      TagInfoSByte tagInfoSByte0 = new TagInfoSByte("b4H=", 7, tagInfoSBytes0.directoryType);
      try { 
        tiffDirectory0.getFieldValue(tagInfoSByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"b4H=\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2086), fieldTypeFloat0, 0L, (-14L), (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-932), linkedList0, (-2086), (-14L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("S0Z/", 7, (-1927), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"S0Z/\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-3), (byte) (-3), fieldTypeRational0, (byte) (-3), (byte) (-3), byteArray0, byteOrder0, (byte) (-3));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-3), linkedList0, (byte) (-3), (byte) (-3), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", (byte) (-3), (byte) (-3), tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals0, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5, linkedList0, 5, 5, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("", 5, 5, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRationals0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(37379, linkedList0, 37379, 37379, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("S=j", 37379, 37379, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoRationals0, false);
      assertEquals(37379L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(37379, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-312), (-2106), (FieldType) null, (-2106), (-312), byteArray0, (ByteOrder) null, (-3211));
      linkedList0.offer(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-312), linkedList0, 4L, 12L, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRationals tagInfoRationals0 = new TagInfoRationals("S0Z/", (-312), 32845, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoRationals0, false);
      assertEquals((-312), tiffDirectory0.type);
      assertEquals(12L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (-62), fieldTypeRational0, 1L, 1911L, byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRational tagInfoRational0 = new TagInfoRational("GQal6$~Q~", (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-1), (-1), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-2132), fieldTypeFloat0, 0L, 1L, (byte[]) null, byteOrder0, 7);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-4329), linkedList0, 279, 0L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoRational tagInfoRational0 = new TagInfoRational("mc%[ ]CWC%Np", 7, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"mc%[ ]CWC%Np\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2133, linkedList0, 2133, 2133, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoRational) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-9), (byte) (-9), fieldTypeRational0, (byte) (-9), (-2147483696L), byteArray0, byteOrder0, (byte) (-9));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-9), linkedList0, (-1983L), (-1983L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoRational tagInfoRational0 = new TagInfoRational("}0c4O{,H.)>rn", (-9), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoRational0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"}0c4O{,H.)>rn\" has wrong count -9
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(453, (String) null);
      TiffField tiffField0 = new TiffField(1447, 2992, fieldTypeShort0, 1447, 2992, (byte[]) null, byteOrder0, 453);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1447, linkedList0, 764L, 1447, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong(",H3&e,", 1447, 2992, tiffDirectoryType0, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \",H3&e,\" has incorrect type null
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-3), (byte) (-3), fieldTypeRational0, (byte) (-3), (byte) (-3), byteArray0, byteOrder0, (byte) (-3));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-3), linkedList0, (-2025L), (-2025L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong((String) null, (-3), (byte) (-3), tiffDirectoryType0, true);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, false);
      assertEquals((-3), tiffDirectory0.type);
      assertEquals((-2025L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShortOrLong) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-1018), linkedList0, (-1018), (-1018), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong("\" has incorrect length ", (-1018), 6, tiffDirectoryType0, false);
      tiffDirectory0.getFieldValue(tagInfoShortOrLong0, false);
      assertEquals((-1018L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-1018), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(490, (-284), fieldTypeShort0, 0L, 490, (byte[]) null, byteOrder0, (-284));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-284), linkedList0, 490, (-466L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoShortOrLong tagInfoShortOrLong0 = new TagInfoShortOrLong(";H 7+3<=<>>", 490, 31, tiffDirectoryType0, true);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoShortOrLong0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)15, (byte)15, fieldTypeRational0, (byte)15, (-2147483648L), byteArray0, byteOrder0, (byte)15);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)15, linkedList0, (-1993L), (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("S?ny", 15, (-1647), tiffDirectoryType0, false);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLongs0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"S?ny\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 5346, 5346, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoLongs) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoLongs) null, false);
      assertEquals((-2132L), tiffDirectory0.nextDirectoryOffset);
      assertEquals((-2132), tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)15, (byte)15, fieldTypeRational0, (byte)15, (-2147483648L), byteArray0, byteOrder0, (byte)15);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)15, linkedList0, 7L, (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoLongs tagInfoLongs0 = new TagInfoLongs("S?ny", 15, 15, tiffDirectoryType0, false);
      int[] intArray0 = tiffDirectory0.getFieldValue(tagInfoLongs0, false);
      assertEquals((-1993L), tiffDirectory0.nextDirectoryOffset);
      assertNull(intArray0);
      assertEquals(15, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2132), (-2132), fieldTypeFloat0, 0L, (-2132), (byte[]) null, byteOrder0, (-2132));
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", (-2132), tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-3561), linkedList0, (-2132), (-2132), byteOrder0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type Float
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoLong tagInfoLong0 = new TagInfoLong("", (-2132), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (byte)6, byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (byte)6, (byte)6, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoDoubles tagInfoDoubles0 = new TagInfoDoubles("z8q</", (byte)6, (byte)6, tiffDirectoryType0);
      TagInfoLong tagInfoLong0 = new TagInfoLong("z8q</", 6, fieldTypeRational0.SHORT_OR_RATIONAL, 6, tagInfoDoubles0.directoryType, true);
      try { 
        tiffDirectory0.getFieldValue(tagInfoLong0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"z8q</\" has wrong count 6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2132), (-2132), fieldTypeFloat0, 0L, 26L, (byte[]) null, byteOrder0, (-2132));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, 0L, (-867L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts((String) null, (-2132), 18, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoShorts0, false);
      assertEquals((-2132), tiffDirectory0.type);
      assertEquals((-867L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(231, 231, fieldTypeShort0, 472, 231, (byte[]) null, byteOrder0, 472);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(231, linkedList0, 231, 472, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts("+P'if", 231, 18, tiffDirectoryType0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue(tagInfoShorts0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-90), (byte) (-90), fieldTypeRational0, (byte) (-90), (byte) (-90), byteArray0, byteOrder0, (byte) (-90));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-90), linkedList0, (byte) (-90), (byte) (-90), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoShorts tagInfoShorts0 = new TagInfoShorts((String) null, (byte) (-90), (-90), tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShorts0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"null\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getFieldValue((TagInfoShort) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)39, (byte)39, fieldTypeRational0, (byte)39, (byte)39, byteArray0, byteOrder0, (byte)39);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, (byte)39, (byte)39, byteOrder0);
      TagInfoShort tagInfoShort0 = new TagInfoShort(") != byteCounts.length(", 39, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoShort0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \") != byteCounts.length(\" has incorrect type Rational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-1993L), (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("", 6, 514, tiffDirectoryType0);
      String[] stringArray0 = tiffDirectory0.getFieldValue(tagInfoAscii0, false);
      assertEquals((-1993L), tiffDirectory0.nextDirectoryOffset);
      assertNull(stringArray0);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, 0L, (byte)6, byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-1950L), 0L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_INTEROP_IFD;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("Thumbnail", 6, 50727, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoAscii0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"Thumbnail\" has incorrect type SRational
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(50733, linkedList0, 50733, 50733, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD3;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii((String) null, 50733, 50733, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoAscii0, false);
      assertEquals(50733, tiffDirectory0.type);
      assertEquals(50733L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-36), linkedList0, (-36), (-36), byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.getSingleFieldValue((TagInfoAscii) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1447, "\"4k%s5`=uoSr");
      TiffField tiffField0 = new TiffField(273, (-873), fieldTypeShort0, (-637), (-873), (byte[]) null, byteOrder0, 75);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(273, linkedList0, 0L, 4294967295L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("iL+l", 273, fieldTypeShort0.ANY, (-873), tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoBytes0, false);
      assertEquals(273, tiffDirectory0.type);
      assertEquals(4294967295L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (byte)6, byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, (-1993L), (-1993L), byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", (byte)6, fieldTypeRational0.SHORT_OR_RATIONAL, 19, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoBytes0, true);
      assertEquals((-1993L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(3, linkedList0, 3, 3, byteOrder0);
      tiffDirectory0.getFieldValue((TagInfoBytes) null, false);
      assertEquals(3, tiffDirectory0.type);
      assertEquals(3L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 5346, 5346, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("3xJ< FZ})W", 6, 5346, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"3xJ< FZ})W\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3315, "\" has incorrect length ");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(5346, 1162, fieldTypeAscii0, 3315, 0L, byteArray0, byteOrder0, 12);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(5346, linkedList0, 0L, 0L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD0;
      TagInfoBytes tagInfoBytes0 = new TagInfoBytes("", 5346, 18, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoBytes0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"\" has incorrect type \" has incorrect length 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, (byte)6);
      linkedList0.add(tiffField0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TiffDirectory tiffDirectory0 = new TiffDirectory(37522, linkedList0, 37522, 675L, byteOrder0);
      TagInfoByte tagInfoByte0 = new TagInfoByte("", 6, fieldTypeRational0, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"\" has wrong count 6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(490, 490, fieldTypeShort0, 0L, 490, (byte[]) null, byteOrder0, 490);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(490, linkedList0, 490, 490, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoByte tagInfoByte0 = new TagInfoByte("Unknown data type: ", 490, fieldTypeShort0.ASCII_OR_RATIONAL, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"Unknown data type: \" has incorrect type Short
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2133, linkedList0, 2133, 2133, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD1;
      TagInfoByte tagInfoByte0 = new TagInfoByte("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", 6, tiffDirectoryType0);
      try { 
        tiffDirectory0.getFieldValue(tagInfoByte0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(462, 1, fieldTypeShort0, 1, 0L, byteArray0, (ByteOrder) null, 663);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((-836), linkedList0, (-286L), (byte)56, (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_EXIF_IFD;
      TagInfoByte tagInfoByte0 = new TagInfoByte("s=N:<_Wv<Cz*->WG", 462, fieldTypeShort0, tiffDirectoryType0);
      tiffDirectory0.getFieldValue(tagInfoByte0);
      assertEquals((-836), tiffDirectory0.type);
      assertEquals(56L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(4626, 4626, fieldTypeAscii0, 4626, 2, byteArray0, (ByteOrder) null, (byte) (-24));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-24), linkedList0, (byte)37, (byte) (-24), (ByteOrder) null);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.TIFF_DIRECTORY_IFD2;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("'<TvcWMQJJ", 4626, 18, tiffDirectoryType0);
      try { 
        tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field \"'<TvcWMQJJ\" has incorrect length 2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte)17;
      byteArray0[5] = (byte)17;
      TiffField tiffField0 = new TiffField((byte)17, 2, fieldTypeAscii0, 7L, (-4812L), byteArray0, byteOrder0, 37380);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)17, linkedList0, 37380, 37380, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoAscii tagInfoAscii0 = new TagInfoAscii("$", (byte)17, (byte)17, tiffDirectoryType0);
      tiffDirectory0.getSingleFieldValue(tagInfoAscii0);
      assertEquals(17, tiffDirectory0.type);
      assertEquals(37380L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1, linkedList0, 1, 1L, byteOrder0);
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_MAKER_NOTES;
      TagInfoSRationals tagInfoSRationals0 = new TagInfoSRationals(">>0z", 1, 6, tiffDirectoryType0);
      tiffDirectory0.getFieldValue((TagInfo) tagInfoSRationals0);
      assertEquals(1, tiffDirectory0.type);
      assertEquals(1L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectoryType tiffDirectoryType0 = TiffDirectoryType.EXIF_DIRECTORY_GPS;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeRational0, (byte)6, (-2147483648L), byteArray0, byteOrder0, 2992);
      linkedList0.add(tiffField0);
      TagInfoSRational tagInfoSRational0 = new TagInfoSRational(") != byteCounts.length(", (byte)6, tiffDirectoryType0);
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte)6, linkedList0, 2992, (-1), byteOrder0);
      Object object0 = tiffDirectory0.getFieldValue((TagInfo) tagInfoSRational0);
      assertEquals((-1L), tiffDirectory0.nextDirectoryOffset);
      assertEquals(6, tiffDirectory0.type);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(300, linkedList0, 300, 300, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.findField((TagInfo) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(12, linkedList0, (byte) (-117), (-835L), byteOrder0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      tiffDirectory0.getTiffImage((Map<String, Object>) hashMap0);
      assertEquals(12, tiffDirectory0.type);
      assertEquals((-835L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2085), linkedList0, (-2085), (-2085), byteOrder0);
      tiffDirectory0.getTiffImage();
      assertEquals((-2085), tiffDirectory0.type);
      assertEquals((-2085L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeShort0, 273, 273, (byte[]) null, byteOrder0, 465);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(465, linkedList0, 273, 273, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffFloatingPointRasterData();
      assertEquals(465, tiffDirectory0.type);
      assertEquals(273L, tiffDirectory0.nextDirectoryOffset);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(324, (-2473), fieldTypeShort0, (-2473), (-2473), (byte[]) null, byteOrder0, 273);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(6, linkedList0, (-2473), 6, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasTiffFloatingPointRasterData();
      assertEquals(6L, tiffDirectory0.nextDirectoryOffset);
      assertFalse(boolean0);
      assertEquals(6, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(513, 1976, fieldTypeShort0, 7, 7, (byte[]) null, byteOrder0, 273);
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(34021, linkedList0, 34021, (-955L), byteOrder0);
      boolean boolean0 = tiffDirectory0.hasJpegImageData();
      assertEquals(34021, tiffDirectory0.type);
      assertEquals((-955L), tiffDirectory0.nextDirectoryOffset);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      boolean boolean0 = tiffDirectory0.hasJpegImageData();
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
      assertFalse(boolean0);
      assertEquals(2, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      linkedList0.add((TiffField) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((byte) (-11), linkedList0, (byte)14, 73L, byteOrder0);
      // Undeclared exception!
      try { 
        tiffDirectory0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String string0 = TiffDirectory.description(2);
      assertEquals("Thumbnail", string0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String string0 = TiffDirectory.description(1);
      assertEquals("Sub", string0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      String string0 = TiffDirectory.description(0);
      assertEquals("Root", string0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String string0 = TiffDirectory.description((-1));
      assertEquals("Unknown", string0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String string0 = TiffDirectory.description((-2));
      assertEquals("Exif", string0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      String string0 = TiffDirectory.description((-3));
      assertEquals("Gps", string0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      String string0 = TiffDirectory.description((-4));
      assertEquals("Interoperability", string0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4989, 4989, fieldTypeByte0, 0L, 4989, byteArray0, byteOrder0, (-860));
      linkedList0.add(tiffField0);
      TiffDirectory tiffDirectory0 = new TiffDirectory(12, linkedList0, (byte) (-117), (-835L), byteOrder0);
      String string0 = tiffDirectory0.getElementDescription();
      assertEquals(12, tiffDirectory0.type);
      assertEquals("\t[-115]: Unknown Tag (4989, 0x137d), Undefined, 0: \n", string0);
      assertEquals((-835L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(12, linkedList0, (byte) (-117), (-835L), byteOrder0);
      tiffDirectory0.getElementDescription();
      assertEquals(12, tiffDirectory0.type);
      assertEquals((-835L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      TiffDirectory.ImageDataElement tiffDirectory_ImageDataElement0 = new TiffDirectory.ImageDataElement((-2147483648L), 1);
      String string0 = tiffDirectory_ImageDataElement0.getElementDescription();
      assertEquals("ImageDataElement", string0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      tiffDirectory0.setTiffImageData((TiffImageData) null);
      assertEquals(2, tiffDirectory0.type);
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(2, linkedList0, 2, 2, byteOrder0);
      tiffDirectory0.getTiffImage(byteOrder0);
      assertEquals(2L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(2, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      TiffDirectory tiffDirectory0 = new TiffDirectory(4, linkedList0, 4, 4, (ByteOrder) null);
      tiffDirectory0.getByteOrder();
      assertEquals(4L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(4, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 1295L, 1295L, byteOrder0);
      tiffDirectory0.getJpegImageData();
      assertEquals(0, tiffDirectory0.type);
      assertEquals(1295L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(0, linkedList0, 1295L, 1295L, byteOrder0);
      tiffDirectory0.setJpegImageData((JpegImageData) null);
      assertEquals(1295L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(0, tiffDirectory0.type);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(1623, linkedList0, 1623, 1623, byteOrder0);
      tiffDirectory0.getTiffImageData();
      assertEquals(1623, tiffDirectory0.type);
      assertEquals(1623L, tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffDirectory tiffDirectory0 = new TiffDirectory(12, linkedList0, (byte) (-117), (-835L), byteOrder0);
      tiffDirectory0.getDirectoryEntries();
      assertEquals(12, tiffDirectory0.type);
      assertEquals((-835L), tiffDirectory0.nextDirectoryOffset);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory((-2132), linkedList0, (-2132), (-2132), byteOrder0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      try { 
        tiffDirectory0.getRasterData(hashMap0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required field \"SampleFormat\" is missing
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      LinkedList<TiffField> linkedList0 = new LinkedList<TiffField>();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffDirectory tiffDirectory0 = new TiffDirectory(262, linkedList0, 262, 262, byteOrder0);
      String string0 = tiffDirectory0.description();
      assertEquals(262L, tiffDirectory0.nextDirectoryOffset);
      assertEquals(262, tiffDirectory0.type);
      assertEquals("Bad Type", string0);
  }
}
