/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 00:41:50 GMT 2025
 */

package org.apache.commons.imaging.formats.jpeg.iptc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IptcBlock_ESTest extends IptcBlock_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      IptcBlock iptcBlock0 = new IptcBlock(3282, byteArray0, byteArray0);
      boolean boolean0 = iptcBlock0.isIPTCBlock();
      assertFalse(boolean0);
      assertEquals(3282, iptcBlock0.getBlockType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      IptcBlock iptcBlock0 = new IptcBlock(0, byteArray0, byteArray0);
      int int0 = iptcBlock0.getBlockType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      IptcBlock iptcBlock0 = new IptcBlock(3282, byteArray0, byteArray0);
      int int0 = iptcBlock0.getBlockType();
      assertEquals(3282, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      IptcBlock iptcBlock0 = new IptcBlock(0, byteArray0, byteArray0);
      iptcBlock0.getBlockNameBytes();
      assertEquals(0, iptcBlock0.getBlockType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      IptcBlock iptcBlock0 = new IptcBlock(1028, byteArray0, byteArray0);
      iptcBlock0.getBlockData();
      assertEquals(1028, iptcBlock0.getBlockType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      IptcBlock iptcBlock0 = new IptcBlock(0, byteArray0, byteArray0);
      iptcBlock0.getBlockData();
      assertEquals(0, iptcBlock0.getBlockType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IptcBlock iptcBlock0 = null;
      try {
        iptcBlock0 = new IptcBlock((-122), (byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Block name bytes must not be null.
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      IptcBlock iptcBlock0 = new IptcBlock(1028, byteArray0, byteArray0);
      boolean boolean0 = iptcBlock0.isIPTCBlock();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      IptcBlock iptcBlock0 = new IptcBlock((-3303), byteArray0, byteArray0);
      boolean boolean0 = iptcBlock0.isIPTCBlock();
      assertFalse(boolean0);
      assertEquals((-3303), iptcBlock0.getBlockType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      IptcBlock iptcBlock0 = new IptcBlock((byte) (-61), byteArray0, byteArray0);
      int int0 = iptcBlock0.getBlockType();
      assertEquals((-61), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      IptcBlock iptcBlock0 = new IptcBlock((-1), byteArray0, (byte[]) null);
      // Undeclared exception!
      try { 
        iptcBlock0.getBlockData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.jpeg.iptc.IptcBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      IptcBlock iptcBlock0 = new IptcBlock((byte) (-24), byteArray0, byteArray0);
      iptcBlock0.getBlockNameBytes();
      assertEquals((-24), iptcBlock0.getBlockType());
  }
}
