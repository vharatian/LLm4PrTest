/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 20:35:39 GMT 2025
 */

package org.apache.commons.codec.digest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.digest.MurmurHash3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MurmurHash3_ESTest extends MurmurHash3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-108);
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      // Undeclared exception!
      try { 
        murmurHash3_IncrementalHash32_0.add(byteArray0, 0, 1536);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)91;
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      // Undeclared exception!
      try { 
        murmurHash3_IncrementalHash32_0.add(byteArray0, 0, 1536);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)2;
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      // Undeclared exception!
      try { 
        murmurHash3_IncrementalHash32_0.add(byteArray0, 0, 1536);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)25;
      murmurHash3_IncrementalHash32_0.add(byteArray0, 3, 3);
      murmurHash3_IncrementalHash32_0.end();
      int int0 = murmurHash3_IncrementalHash32_0.end();
      assertEquals((-1204489477), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-1);
      murmurHash3_IncrementalHash32_0.add(byteArray0, 1, 3);
      int int0 = murmurHash3_IncrementalHash32_0.end();
      assertEquals(67749580, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-20);
      murmurHash3_IncrementalHash32_0.add(byteArray0, 1, 3);
      int int0 = murmurHash3_IncrementalHash32_0.end();
      assertEquals((-1247833867), int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      byte[] byteArray0 = new byte[8];
      murmurHash3_IncrementalHash32_0.tailLen = (-1);
      // Undeclared exception!
      try { 
        murmurHash3_IncrementalHash32_0.add(byteArray0, (byte) (-103), 158);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -103
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      byte[] byteArray0 = new byte[6];
      murmurHash3_IncrementalHash32_0.add(byteArray0, (byte)0, 6);
      murmurHash3_IncrementalHash32_0.add(byteArray0, 0, 3);
      // Undeclared exception!
      try { 
        murmurHash3_IncrementalHash32_0.add(byteArray0, 5, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      // Undeclared exception!
      try { 
        murmurHash3_IncrementalHash32_0.add(byteArray0, (-1424967105), (-1424967105));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte) (-27);
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals(1759198256782235819L, long0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte)9;
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals(7364579721733584995L, long0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-8);
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals(7270877102856108284L, long0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-27);
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals(6646828644212525515L, long0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-27);
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals((-4017044119925554502L), long0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-27);
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals((-6376996266525594720L), long0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      long long0 = MurmurHash3.hash64(0L);
      assertEquals((-8620514229188030809L), long0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      long long0 = MurmurHash3.hash64(byteArray0, 104729, 0, (int) (byte) (-4));
      assertEquals(6996891656862880743L, long0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      long long0 = MurmurHash3.hash64(byteArray0, (-1), (int) (byte)0, (-1141));
      assertEquals((-737672211421162991L), long0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      long long0 = MurmurHash3.hash64(byteArray0, 220, (int) (byte) (-112));
      assertEquals((-7017582384741357989L), long0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      long long0 = MurmurHash3.hash64((short)14);
      assertEquals((-9158675433270687490L), long0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      long long0 = MurmurHash3.hash64(2L);
      assertEquals(5399219604308156419L, long0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      long long0 = MurmurHash3.hash64(26);
      assertEquals((-6668633201860061850L), long0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = MurmurHash3.hash32(byteArray0, 1, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int int0 = MurmurHash3.hash32(byteArray0, 0, 0, 27);
      assertEquals(1159698088, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      int int0 = MurmurHash3.hash32(byteArray0, (-8), (-8));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = MurmurHash3.hash32(byteArray0, (int) (byte)1, (-1));
      assertEquals(2039857924, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = MurmurHash3.hash32(byteArray0, 0, 486);
      assertEquals((-1242665442), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      int int0 = MurmurHash3.hash32(byteArray0, 2);
      assertEquals(134891328, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = MurmurHash3.hash32(byteArray0, (int) (byte) (-4));
      assertEquals((-725375980), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = MurmurHash3.hash32(byteArray0);
      assertEquals((-965378730), int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = MurmurHash3.hash32("p=(");
      assertEquals(462615778, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = MurmurHash3.hash32("fr)&g_bq");
      assertEquals((-47671868), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = MurmurHash3.hash32(0L, 0L, (-1746));
      assertEquals(72137803, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = MurmurHash3.hash32(1L, 1L);
      assertEquals(1037298354, int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = MurmurHash3.hash32((long) (byte) (-17), 4);
      assertEquals((-1651278648), int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = MurmurHash3.hash32(664L);
      assertEquals((-1504250047), int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      long[] longArray0 = MurmurHash3.hash128(byteArray0);
      assertArrayEquals(new long[] {(-4654978917449141626L), 4100248936650863565L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, 104729, 104729);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 104729
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MurmurHash3.hash32(byteArray0, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash32(byteArray0, (-1424967105));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1424967106
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash32((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, (int) (byte)108, (-2651), 1294);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2544
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, 4181, (int) (byte)2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4182
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, (int) (byte) (-122), (-1141), (-3631));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1264
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, 1382455499, (-280), 33);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1382455218
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, 4, 14, (int) (byte) (-49));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, (int) (byte)2, (-4455), (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4454
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, (-1028477387), (int) (byte) (-122), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1028477510
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, (-2395), 7, (-3222));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2389
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128((byte[]) null, (-33), 10, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, (int) (short)1423, (-1164), (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 258
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      long[] longArray0 = MurmurHash3.hash128((byte[]) null, (-33), 0, 0);
      assertArrayEquals(new long[] {0L, 0L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, 862523047, (-1), (-645));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 862523045
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, 33, (-4), (-4));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 28
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(murmurHash3_IncrementalHash32_0.tail, (int) (byte) (-3), (int) (byte) (-3), 108);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -7
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128((byte[]) null, (-1715), (-862048943), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128((byte[]) null, 2350, 2350, 2350);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128(byteArray0, (-1052), (-1901), (-1901));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2954
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, 32, (int) (byte) (-4), 56);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, (-5130), (-5130), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -10261
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, (-1), (-1), (-151));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, (int) (byte)28, (int) (byte) (-115), 2479);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -88
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, (int) (byte) (-46), (-773), (-983));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -820
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, (int) (byte) (-55), (int) (byte) (-55), (-1141));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -111
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        MurmurHash3.hash64(byteArray0, (int) (byte)38, (-286), (-2663));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -249
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash64((byte[]) null, (int) (byte)74, (int) (byte)74, (int) (byte)74);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      long long0 = MurmurHash3.hash64(byteArray0, (int) (byte) (-72), (int) (byte) (-72), (int) (byte) (-72));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      // Undeclared exception!
      try { 
        MurmurHash3.hash32(byteArray0, (-99431253), (-99431253), (-99431253));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -198862507
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MurmurHash3.hash32(byteArray0, (-2048144789), (-1954), (-756));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2048146744
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        MurmurHash3.hash32(byteArray0, (int) (short) (-900), (int) (byte)1, (int) (byte)1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -900
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash32((byte[]) null, 297, 297, 297);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = MurmurHash3.hash32((-346L), 2862933555777941757L, (-826));
      assertEquals((-1043162749), int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = MurmurHash3.hash32((-1290L), 0);
      assertEquals(661102279, int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      byte[] byteArray0 = new byte[6];
      murmurHash3_IncrementalHash32_0.add(byteArray0, (byte)0, 6);
      int int0 = murmurHash3_IncrementalHash32_0.end();
      assertEquals((-229235619), int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      int int0 = murmurHash3_IncrementalHash32_0.end();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      byte[] byteArray0 = new byte[7];
      murmurHash3_IncrementalHash32_0.add(byteArray0, (byte)3, 1);
      int int0 = murmurHash3_IncrementalHash32_0.end();
      assertEquals(1364076727, int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      murmurHash3_IncrementalHash32_0.tailLen = 6;
      // Undeclared exception!
      try { 
        murmurHash3_IncrementalHash32_0.add(byteArray0, 6, 6);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // 6
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      murmurHash3_IncrementalHash32_0.add(byteArray0, 7, 7);
      murmurHash3_IncrementalHash32_0.add(byteArray0, 7, 7);
      assertEquals(40, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      murmurHash3_IncrementalHash32_0.add(byteArray0, 13, 13);
      murmurHash3_IncrementalHash32_0.add(byteArray0, 13, 13);
      assertEquals(40, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      murmurHash3_IncrementalHash32_0.add(byteArray0, 6, (byte)0);
      assertEquals(11, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      long[] longArray0 = MurmurHash3.hash128("");
      assertArrayEquals(new long[] {(-7122613646888064702L), (-8341524471658347240L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      long[] longArray0 = MurmurHash3.hash128("NTX.CLVVo;< h0I");
      assertArrayEquals(new long[] {(-4285335344257709884L), 5381655702440401048L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      long[] longArray0 = MurmurHash3.hash128("org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32");
      assertArrayEquals(new long[] {(-742232871320251871L), 3514328791191277926L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals((-1745291335331381054L), long0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash64((byte[]) null, (-235), (-235));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      long long0 = MurmurHash3.hash64(byteArray0);
      assertEquals((-4732748198369729955L), long0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      int int0 = MurmurHash3.hash32(byteArray0, (int) (byte) (-1), (int) (byte)0, 11);
      assertEquals((-1818165756), int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash32((byte[]) null, (-706), (-706));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      long long0 = MurmurHash3.hash64((short) (byte) (-49));
      assertEquals(5805010536905192286L, long0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash32((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      murmurHash3_IncrementalHash32_0.add(byteArray0, 20, 20);
      assertEquals(40, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      long long0 = MurmurHash3.hash64((-1L));
      assertEquals((-6995933311723732776L), long0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash32((byte[]) null, (-1271));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      long long0 = MurmurHash3.hash64(1);
      assertEquals(501179666091440628L, long0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      long long0 = MurmurHash3.hash64(byteArray0, (int) (byte) (-49), (int) (byte)0);
      assertEquals(8404154273843829576L, long0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = MurmurHash3.hash32(2186L, (long) 3);
      assertEquals((-74195976), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      int int0 = MurmurHash3.hash32(byteArray0);
      assertEquals(1099407327, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = MurmurHash3.hash32(0L);
      assertEquals(1754797035, int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MurmurHash3.IncrementalHash32 murmurHash3_IncrementalHash32_0 = new MurmurHash3.IncrementalHash32();
      murmurHash3_IncrementalHash32_0.start(3);
  }
}
