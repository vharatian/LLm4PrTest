/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:55:39 GMT 2025
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.InputStream;
import org.apache.commons.codec.CodecPolicy;
import org.apache.commons.codec.binary.Base16InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Base16InputStream_ESTest extends Base16InputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;
      Base16InputStream base16InputStream0 = new Base16InputStream((InputStream) null, true, true, codecPolicy0);
      assertFalse(base16InputStream0.markSupported());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Base16InputStream base16InputStream0 = new Base16InputStream((InputStream) null, false, true);
      assertEquals(1, base16InputStream0.available());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Base16InputStream base16InputStream0 = new Base16InputStream((InputStream) null);
      Base16InputStream base16InputStream1 = new Base16InputStream(base16InputStream0, false);
      assertEquals(1, base16InputStream1.available());
  }
}
