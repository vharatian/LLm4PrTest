/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:26:35 GMT 2025
 */

package org.apache.commons.codec.digest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import java.util.regex.PatternSyntaxException;
import org.apache.commons.codec.digest.Md5Crypt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Md5Crypt_ESTest extends Md5Crypt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      MockRandom mockRandom0 = new MockRandom();
      String string0 = Md5Crypt.md5Crypt(byteArray0, (Random) mockRandom0);
      assertEquals("$1$........$9rlgAhSf6RVXdB10k0d1g.", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = Md5Crypt.md5Crypt(byteArray0, (String) null);
      assertEquals("$1$........$9rlgAhSf6RVXdB10k0d1g.", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      MockRandom mockRandom0 = new MockRandom();
      String string0 = Md5Crypt.apr1Crypt(byteArray0, (Random) mockRandom0);
      assertEquals("$apr1$........$Ay34HyTjwraC4wp1XfYNy.", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = Md5Crypt.apr1Crypt(byteArray0);
      assertEquals("$apr1$........$7DPFf0mVu8RHaTUUmUaFT.", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt(byteArray0, "$apr1$J\"J:qLoKI8[j*^hZTlX", "$apr1$J\"J:qLoKI8[j*^hZTlX", (Random) mockRandom0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 51
         // ^\\$apr1\\$J\"J:qLoKI8[j*^hZTlX([\\.\\/a-zA-Z0-9]{1,8}).*
         //                                                    ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt((byte[]) null, "]oWxT *Q|oXJd4", "]oWxT *Q|oXJd4", (Random) mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt(byteArray0, "okj82[ ,=&c@JzkJ", "okj82[ ,=&c@JzkJ");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 40
         // ^okj82[ ,=&c@JzkJ([\\.\\/a-zA-Z0-9]{1,8}).*
         //                                         ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt((byte[]) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt(byteArray0, "$aRr;$&StnI@(K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid salt value: $aRr;$&StnI@(K
         //
         verifyException("org.apache.commons.codec.digest.Md5Crypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Md5Crypt.apr1Crypt("u+g~nI]sY7!{>;+  =1");
      Md5Crypt.apr1Crypt("$apr1$........$6cx8VIK0WEwC40je.98ny.");
      byte[] byteArray0 = new byte[0];
      Md5Crypt.md5Crypt(byteArray0);
      Md5Crypt.apr1Crypt(byteArray0, "$apr1$........$c0mwGSR9oL6I48BmlvGPQ0");
      Md5Crypt.md5Crypt(byteArray0, (String) null, "u+g~nI]sY7!{>;+  =1");
      Md5Crypt.apr1Crypt(byteArray0, "$apr1$........$c0mwGSR9oL6I48BmlvGPQ0");
      Md5Crypt.apr1Crypt("u+g~nI]sY7!{>;+  =1", "u+g~nI]sY7!{>;+  =1");
      byte[] byteArray1 = new byte[9];
      Md5Crypt.apr1Crypt(byteArray1, "org.apache.commons.codec.digest.Md5Crypt");
      Md5Crypt.apr1Crypt(byteArray0, "$apr1$........$7DPFf0mVu8RHaTUUmUaFT.");
      // Undeclared exception!
      Md5Crypt.apr1Crypt(byteArray0, "p(kP3 TOn~D4q");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Md5Crypt.apr1Crypt("u+g~nI]sY7!{>;+  =1");
      Md5Crypt.apr1Crypt("$apr1$........$6cx8VIK0WEwC40je.98ny.");
      byte[] byteArray0 = new byte[0];
      Md5Crypt.md5Crypt(byteArray0);
      Md5Crypt.apr1Crypt(byteArray0, "$apr1$........$c0mwGSR9oL6I48BmlvGPQ0");
      Md5Crypt.md5Crypt(byteArray0, (String) null, "u+g~nI]sY7!{>;+  =1");
      Md5Crypt.apr1Crypt(byteArray0, "$apr1$........$c0mwGSR9oL6I48BmlvGPQ0");
      byte[] byteArray1 = new byte[9];
      Md5Crypt.apr1Crypt(byteArray1, "org.apache.commons.codec.digest.Md5Crypt");
      Md5Crypt.apr1Crypt(byteArray0, "$apr1$........$7DPFf0mVu8RHaTUUmUaFT.");
      Md5Crypt.apr1Crypt(byteArray0, "p(kP3 TOn~D4q");
      // Undeclared exception!
      Md5Crypt.apr1Crypt("$apr1$........$7DPFf0mVu8RHaTUUmUaFT.", "p(kP3 TOn~D4q");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.apr1Crypt((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.Md5Crypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.apr1Crypt((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.Md5Crypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt(byteArray0, "$apr1$........$kOUeZDlJkiBj2WGI.nnHb1", "$apr1$........$kOUeZDlJkiBj2WGI.nnHb1", (Random) mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid salt value: $apr1$........$kOUeZDlJkiBj2WGI.nnHb1
         //
         verifyException("org.apache.commons.codec.digest.Md5Crypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      MockRandom mockRandom0 = new MockRandom();
      String string0 = Md5Crypt.md5Crypt(byteArray0, (String) null, "$apr1$////////$2B1Qe3bNDggkWR5mdXnfo.", (Random) mockRandom0);
      assertEquals("$apr1$////////$2B1Qe3bNDggkWR5mdXnfo.........$usG6tNnyFGlJ9rrDizsVO1", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = Md5Crypt.apr1Crypt(byteArray0, (String) null);
      assertEquals("$apr1$........$7DPFf0mVu8RHaTUUmUaFT.", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt((byte[]) null, "Z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt(byteArray0, "SHA-512", "SHA-512");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid salt value: SHA-512
         //
         verifyException("org.apache.commons.codec.digest.Md5Crypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      byte[] byteArray0 = new byte[21];
      String string0 = Md5Crypt.md5Crypt(byteArray0, "V]X>Bes)}]av%&x", "([./a-zA-Z0-9]{1,8}).*", (Random) mockRandom0);
      assertEquals("([./a-zA-Z0-9]{1,8}).*V$MAeDtZof9iOtvdZhMuil30", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.apr1Crypt((byte[]) null, "SHA-512/224");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.apr1Crypt("$apr1$$pr1$e\"", "$apr1$$pr1$e\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid salt value: $apr1$$pr1$e\"
         //
         verifyException("org.apache.commons.codec.digest.Md5Crypt", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Md5Crypt.apr1Crypt(byteArray0, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.digest.B64", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Md5Crypt md5Crypt0 = new Md5Crypt();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt((byte[]) null, (Random) mockRandom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.apr1Crypt((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Md5Crypt.md5Crypt((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
