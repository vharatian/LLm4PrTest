/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 14:51:31 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.net.URLClassLoader;
import org.apache.commons.lang3.ClassLoaderUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ClassLoaderUtils_ESTest extends ClassLoaderUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassLoaderUtils.toString((URLClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.ClassLoaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URL[] uRLArray0 = new URL[2];
      URLClassLoader uRLClassLoader0 = new URLClassLoader(uRLArray0);
      String string0 = ClassLoaderUtils.toString(uRLClassLoader0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassLoaderUtils.toString((ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URL[] uRLArray0 = new URL[2];
      URLClassLoader uRLClassLoader0 = new URLClassLoader(uRLArray0);
      String string0 = ClassLoaderUtils.toString((ClassLoader) uRLClassLoader0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassLoaderUtils classLoaderUtils0 = new ClassLoaderUtils();
  }
}
