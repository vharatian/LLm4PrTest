/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 03:06:29 GMT 2025
 */

package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.Delayed;
import org.apache.commons.lang3.concurrent.Computable;
import org.apache.commons.lang3.concurrent.Memoizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Memoizer_ESTest extends Memoizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      Computable<Error, Object> computable0 = (Computable<Error, Object>) mock(Computable.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(computable0).compute(any(java.lang.Error.class));
      Memoizer<Error, Object> memoizer0 = new Memoizer<Error, Object>(computable0, true);
      MockError mockError0 = new MockError();
      Object object1 = memoizer0.compute(mockError0);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Memoizer<Error, CompletableFuture<Delayed>> memoizer0 = new Memoizer<Error, CompletableFuture<Delayed>>((Computable<Error, CompletableFuture<Delayed>>) null);
      // Undeclared exception!
      try { 
        memoizer0.compute((Error) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = true;
      Memoizer<Error, Delayed> memoizer0 = new Memoizer<Error, Delayed>((Computable<Error, Delayed>) null, true);
      Memoizer<Error, Delayed> memoizer1 = new Memoizer<Error, Delayed>(memoizer0);
      MockError mockError0 = new MockError("org.junitpioneer.jupiter.cartesian.CartesianValueArgumentsProvider");
      // Undeclared exception!
      try { 
        memoizer0.compute(mockError0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.concurrent.Memoizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockError mockError0 = new MockError();
      Computable<Error, Object> computable0 = (Computable<Error, Object>) mock(Computable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(computable0).compute(any(java.lang.Error.class));
      Memoizer<Error, Object> memoizer0 = new Memoizer<Error, Object>(computable0, true);
      memoizer0.compute(mockError0);
      Object object0 = memoizer0.compute(mockError0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Memoizer<Error, CompletableFuture<Delayed>> memoizer0 = new Memoizer<Error, CompletableFuture<Delayed>>((Computable<Error, CompletableFuture<Delayed>>) null);
      MockError mockError0 = new MockError();
      // Undeclared exception!
      try { 
        memoizer0.compute(mockError0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.concurrent.Memoizer", e);
      }
  }
}
