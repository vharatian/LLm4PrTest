/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 20:28:01 GMT 2025
 */

package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ThresholdCircuitBreaker_ESTest extends ThresholdCircuitBreaker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      Long long0 = new Long((-1087L));
      boolean boolean0 = thresholdCircuitBreaker0.incrementAndCheckState(long0);
      assertTrue(thresholdCircuitBreaker0.checkState());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker((-1L));
      // Undeclared exception!
      try { 
        thresholdCircuitBreaker0.incrementAndCheckState((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      long long0 = thresholdCircuitBreaker0.getThreshold();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(185L);
      long long0 = thresholdCircuitBreaker0.getThreshold();
      assertEquals(185L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      Long long0 = new Long(2112L);
      boolean boolean0 = thresholdCircuitBreaker0.incrementAndCheckState(long0);
      boolean boolean1 = thresholdCircuitBreaker0.checkState();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(2693L);
      // Undeclared exception!
      try { 
        thresholdCircuitBreaker0.incrementAndCheckState((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      Long long0 = new Long(0L);
      boolean boolean0 = thresholdCircuitBreaker0.incrementAndCheckState(long0);
      assertFalse(thresholdCircuitBreaker0.isClosed());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(2693L);
      Long long0 = new Long(2693L);
      thresholdCircuitBreaker0.incrementAndCheckState(long0);
      boolean boolean0 = thresholdCircuitBreaker0.incrementAndCheckState(long0);
      assertFalse(thresholdCircuitBreaker0.isClosed());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(0L);
      thresholdCircuitBreaker0.close();
      assertFalse(thresholdCircuitBreaker0.checkState());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker(1101L);
      thresholdCircuitBreaker0.checkState();
      assertEquals(1101L, thresholdCircuitBreaker0.getThreshold());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThresholdCircuitBreaker thresholdCircuitBreaker0 = new ThresholdCircuitBreaker((-1L));
      long long0 = thresholdCircuitBreaker0.getThreshold();
      assertEquals((-1L), long0);
  }
}
