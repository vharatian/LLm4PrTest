/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 09:15:22 GMT 2025
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle;
import org.apache.commons.lang3.builder.RecursiveToStringStyle;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      toStringStyle0.appendSummarySize(stringBuffer0, "\"<", 0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=0>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[9];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendSummary(stringBuffer0, ".Y@D!Un??", booleanArray0);
      assertEquals("<size=9>", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      short[] shortArray0 = new short[1];
      multilineRecursiveToStringStyle0.appendSummary(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", shortArray0);
      assertEquals("<size=1>", stringBuffer0.toString());
      assertEquals(8, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      Object[] objectArray0 = new Object[9];
      recursiveToStringStyle0.appendSummary(stringBuffer0, "", objectArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=9>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("\u0399");
      long[] longArray0 = new long[0];
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "\u0399", longArray0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("\u0399<size=0>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[9];
      toStringStyle0.appendSummary(stringBuffer0, "", intArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=9>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[0];
      toStringStyle0.appendSummary(stringBuffer0, "Report entries can't have blank key or value: { key=\"%s\", value=\"%s\" }", doubleArray0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("\"<size=0>\"", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[9];
      standardToStringStyle0.appendSummary(stringBuffer0, "j4D]$rwpqES go9>n_>", charArray0);
      assertEquals(8, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      byte[] byteArray0 = new byte[2];
      toStringStyle0.SHORT_PREFIX_STYLE.appendSummary(stringBuffer0, (String) null, byteArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=2>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      Object object0 = new Object();
      recursiveToStringStyle0.appendSummary(stringBuffer0, ">", object0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("><Object>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("{java.lang.Onject@0000000002");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendNullText(stringBuffer0, ",");
      assertEquals(34, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      recursiveToStringStyle0.appendInternal(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle", linkedList0, false);
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals(8, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("E80]`|!0;67TXL^");
      standardToStringStyle0.appendIdentityHashCode(stringBuffer0, (Object) null);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("E80]`|!0;67TXL^", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      multilineRecursiveToStringStyle0.appendFieldStart(stringBuffer0, "Cannot assign a %s to a %s");
      assertEquals(27, stringBuffer0.length());
      assertEquals("Cannot assign a %s to a %s=", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.appendFieldSeparator(stringBuffer0);
      assertEquals(",", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2409);
      standardToStringStyle0.MULTI_LINE_STYLE.appendFieldEnd(stringBuffer0, "");
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      long[] longArray0 = new long[20];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "{org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle@0000000001", longArray0);
      assertEquals(144, stringBuffer0.length());
      assertEquals("{\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  }", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[0];
      recursiveToStringStyle0.appendDetail(stringBuffer0, "o", intArray0);
      assertEquals("{}", stringBuffer0.toString());
      assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      double[] doubleArray0 = new double[9];
      toStringStyle0.NO_CLASS_NAME_STYLE.appendDetail(stringBuffer0, "{", doubleArray0);
      assertEquals(37, stringBuffer0.length());
      assertEquals("{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2409);
      char[] charArray0 = new char[6];
      standardToStringStyle0.appendDetail(stringBuffer0, ",", charArray0);
      assertEquals("{\u0000,\u0000,\u0000,\u0000,\u0000,\u0000}", stringBuffer0.toString());
      assertEquals(13, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "\u00D0", false);
      assertEquals("false", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      standardToStringStyle0.appendDetail(stringBuffer0, "{java.lang.Object@0000000003", (short)76);
      assertEquals(3, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      recursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendDetail(stringBuffer0, "", 1L);
      assertEquals(1, stringBuffer0.length());
      assertEquals("1", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2409);
      standardToStringStyle0.appendDetail(stringBuffer0, "cG", 0);
      assertEquals(1, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2409);
      standardToStringStyle0.appendDetail(stringBuffer0, ",", 0.0F);
      assertEquals(3, stringBuffer0.length());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("OtrA9Im");
      standardToStringStyle0.appendDetail(stringBuffer0, "=>'#.[.,", 590.69);
      assertEquals(13, stringBuffer0.length());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("p2XQd1V(X$#4C#");
      recursiveToStringStyle0.appendDetail(stringBuffer0, "  ", '_');
      assertEquals("p2XQd1V(X$#4C#_", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("Expected exception %s was not thrown.");
      standardToStringStyle0.appendDetail(stringBuffer0, "!&r#`w-AV\".)d", (byte) (-127));
      assertEquals(41, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.NO_CLASS_NAME_STYLE.appendCyclicObject(stringBuffer0, "F:e7#rL8bf('8", "F:e7#rL8bf('8");
      assertEquals(18, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.DEFAULT_STYLE.appendContentStart(stringBuffer0);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      recursiveToStringStyle0.DEFAULT_STYLE.appendContentEnd(stringBuffer0);
      assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.setUseShortClassName(true);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.DEFAULT_STYLE.setUseIdentityHashCode(false);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isUseFieldNames());
      
      standardToStringStyle0.setUseFieldNames(false);
      assertFalse(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.setSummaryObjectEndText(" MR");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.DEFAULT_STYLE.setSizeStartText("");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.setNullText("a");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.setFieldSeparatorAtStart(true);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.setFieldSeparatorAtEnd(false);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      
      standardToStringStyle0.setDefaultFullDetail(false);
      assertFalse(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.setContentEnd("[");
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayEnd("0=v}*");
      assertEquals("0=v}*", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("J");
      recursiveToStringStyle0.NO_CLASS_NAME_STYLE.removeLastFieldSeparator(stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals("J", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ToStringStyle.register((Object) null);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendDetail(stringBuffer0, "fPe+&.,<xQ``Yy2NM", (Object) null);
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "\u00F5", (Object) stringBuffer0, boolean0);
      assertEquals("\u00F5=<StringBuffer>,\n  ", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("\"!tlr]3k5+H/O^/");
      multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.append(stringBuffer0, "\"!tlr]3k5+H/O^/", (short)2012);
      assertEquals("\"!tlr]3k5+H/O^/\"!tlr]3k5+H/O^/=2012,", stringBuffer0.toString());
      assertEquals(36, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "[java.lang.StringBuffer@0000000004", (-1678L));
      assertEquals(41, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "", (-280.8564F));
      assertEquals("\"\":-280.8564,", stringBuffer0.toString());
      assertEquals(13, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      boolean boolean0 = toStringStyle0.isUseShortClassName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      boolean boolean0 = toStringStyle0.isUseShortClassName();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseIdentityHashCode();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(boolean0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseIdentityHashCode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      boolean boolean0 = multilineRecursiveToStringStyle0.isUseClassName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseClassName();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      boolean boolean0 = ToStringStyle.isRegistered("MCpeljava.lang.StringBuffer@0000000004");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFullDetail((Boolean) null);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(boolean0);
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.isFullDetail(boolean0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean boolean0 = recursiveToStringStyle0.isFieldSeparatorAtStart();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean boolean0 = recursiveToStringStyle0.isFieldSeparatorAtEnd();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setArrayContentDetail(false);
      boolean boolean0 = multilineRecursiveToStringStyle0.isArrayContentDetail();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      Class<Object> class0 = Object.class;
      String string0 = toStringStyle0.getShortClassName(class0);
      assertEquals("Object", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      String string0 = recursiveToStringStyle0.getFieldNameValueSeparator();
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getContentStart();
      assertEquals("[\n  ", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getContentStart();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getContentEnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getArrayStart();
      assertEquals("{\n  ", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart("");
      standardToStringStyle0.getArrayStart();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      String string0 = toStringStyle0.getArraySeparator();
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      String string0 = toStringStyle0.getArrayEnd();
      assertEquals("}", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<size=");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, "<size=", "<size=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendToString((StringBuffer) null, "\n]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendToString(stringBuffer0, "\n]");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 3, end 0, s.length() 2
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SIMPLE_STYLE.appendSuper((StringBuffer) null, "&alpha;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendSummarySize((StringBuffer) null, "/sg8rJOYxbZxR", (-1316));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(1128);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.appendSummary(stringBuffer0, "java.lang.Object@0000000002", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("{java.langObject@0000000003");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "{java.langObject@0000000003", (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendSummary(stringBuffer0, "<wize'", (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle", (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "D71Y=VX\"Xs<", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SIMPLE_STYLE.appendSummary((StringBuffer) null, "Pg]$1)A]v#MO$ QL", linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Integer integer0 = new Integer((-1711));
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendStart((StringBuffer) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendNullText((StringBuffer) null, ":=_(O#IC>V1|L;'RHR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendIdentityHashCode((StringBuffer) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.appendFieldStart(stringBuffer0, (String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendFieldStart((StringBuffer) null, "V a<J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SHORT_PREFIX_STYLE.appendFieldSeparator((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendFieldEnd((StringBuffer) null, "&alpha;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail(stringBuffer0, "SKN=`E#^f,MohZ", (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "SD^?r<G4yv^`@=?gHK", (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) multilineRecursiveToStringStyle0;
      objectArray0[1] = (Object) stringBuffer0;
      objectArray0[2] = (Object) stringBuffer0;
      // Undeclared exception!
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "<null>", objectArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "{java.lang.StringBuffer@0000000003", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail(stringBuffer0, "", (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<wize'");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "<wize'", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "[org.apache.commons.lang3.builder.vecursiveTo~tringStyle@0000000001", (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(1);
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "Field names are mandatory when using JsonToStringStyle", (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "\u00F5", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail(stringBuffer0, "ZbI3R#X6", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.appendDetail((StringBuffer) null, "9Tc*3u%/,", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      HashMap<StringBuffer, StringBuffer> hashMap0 = new HashMap<StringBuffer, StringBuffer>();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail((StringBuffer) null, "<null>", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendDetail((StringBuffer) null, "<wize'", 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Integer integer0 = new Integer(99);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail((StringBuffer) null, "QVQj|g$glF|\"cvFXtC", 99, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail((StringBuffer) null, "[java.lang.Object@0000000002", (-1183), linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, "WmviD/R;1B_", (-1564));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendDetail((StringBuffer) null, "{java.lang.Object@0000000002", 100.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, "{java.lang.Object@0000000002", '3');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.appendDetail((StringBuffer) null, "{java.lang.Object@0000000003", (byte)30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendCyclicObject(stringBuffer0, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot get the toString of a null object
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendContentStart((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendContentEnd((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendClassName((StringBuffer) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.append((StringBuffer) null, "PB=q! +", booleanArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[1];
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "", shortArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      Object[] objectArray0 = new Object[9];
      objectArray0[1] = (Object) multilineRecursiveToStringStyle0;
      objectArray0[2] = (Object) stringBuffer0;
      objectArray0[4] = (Object) stringBuffer0;
      // Undeclared exception!
      multilineRecursiveToStringStyle0.append(stringBuffer0, (String) null, objectArray0, boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object[] objectArray0 = new Object[1];
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "lQ_CY-s6vi(W^)[Q", objectArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      long[] longArray0 = new long[0];
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.SHORT_PREFIX_STYLE.append((StringBuffer) null, "t-@<]N~OE/PG", longArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.append((StringBuffer) null, "{java.lang.StringBuffer@0000000003", intArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, ",\n  ", (float[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      char[] charArray0 = new char[1];
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.append((StringBuffer) null, "=", charArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "<njl0>", (byte[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.append((StringBuffer) null, ":", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.append((StringBuffer) null, "c", (short)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.valueOf("org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle");
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle", (Object) stringBuffer0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 991L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 9);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.append((StringBuffer) null, "{java.langObject@0000000003", (-4990));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, ":", (-1.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 1.5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, "{java.lang.Str&ngBuffer@0000000006", 1216.195412);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.append((StringBuffer) null, "&!mwuR:D", 'A');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (byte) (-122));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, "", (byte) (-95));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[8];
      standardToStringStyle0.appendDetail(stringBuffer0, "tV'f?1(6K4{", booleanArray0);
      assertEquals("{false,false,false,false,false,false,false,false}", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.valueOf("j67y;$Q#!Yk");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "j67y;$Q#!Yk", (float[]) null, boolean0);
      assertEquals("j67y;$Q#!Yk=<null>\n  ", stringBuffer0.toString());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("OtrA9Im");
      short[] shortArray0 = new short[1];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, "OtrA9Im", shortArray0, boolean0);
      assertEquals(19, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      recursiveToStringStyle0.appendToString(stringBuffer0, "+l&z=d^v.(J6");
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object object0 = new Object();
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "K", object0, (Boolean) null);
      assertEquals(34, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer(0);
      hashMap0.put(integer0, (Integer) null);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.appendDetail(stringBuffer0, "[org.apache.commons.lang3.builder.StandardToStringStyle@0000000001", hashMap0);
      assertEquals("{\"0\":null}", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer((-2));
      hashMap0.put(integer0, integer0);
      Integer integer1 = new Integer(82);
      hashMap0.put(integer1, integer1);
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "", hashMap0);
      assertEquals("{\"-2\":-2,\"82\":82}", stringBuffer0.toString());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, ")xle:V,6$%z+X1Z", hashMap0);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "{java.lngObjct@0000000003", (Map<?, ?>) null);
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      Boolean boolean0 = Boolean.TRUE;
      linkedList0.addLast(boolean0);
      multilineRecursiveToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "[\n  ", linkedList0);
      assertEquals("[true]", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      recursiveToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "<null>", linkedList0);
      assertEquals("[]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.appendDetail(stringBuffer0, "1PEAst&{Rw#e", (Collection<?>) null);
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object[] objectArray0 = new Object[7];
      objectArray0[4] = (Object) stringBuffer0;
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "IkDk8g6Z?'f", objectArray0);
      assertEquals(61, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = new Boolean("@<EaXNnA");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "@<EaXNnA", (Object) "@<EaXNnA", boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (Object) boolean0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[0];
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, ";6y@3.-", booleanArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("J");
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, booleanArray0, (Boolean) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      recursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "bH(w:u", (boolean[]) null, (Boolean) null);
      assertEquals(14, stringBuffer0.length());
      assertEquals("\"bH(w:u\":null,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("B:+>2");
      float[] floatArray0 = new float[0];
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "B:+>2", floatArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, (String) null, floatArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "\"<", doubleArray0, boolean0);
      assertEquals("\"\\\"<\":[],", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[1];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, doubleArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle", doubleArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1149);
      Boolean boolean0 = new Boolean(true);
      toStringStyle0.append(stringBuffer0, "[java.lang.Object@0000000003", (char[]) null, boolean0);
      assertEquals(36, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("\n]");
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, charArray0, (Boolean) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "[java.lang.StringBuffer@0000000003", (char[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "Fy@Zq'Ae8[m", byteArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, byteArray0, (Boolean) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[0];
      toStringStyle0.append(stringBuffer0, "[java.lang.StringBu(f=r@|000000006", byteArray0, boolean0);
      assertEquals(40, stringBuffer0.length());
      assertEquals("\"[java.lang.StringBu(f=r@|000000006\":[],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[13];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "", shortArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[3];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, shortArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "<null>", intArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[0];
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, intArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[0];
      toStringStyle0.append(stringBuffer0, "b+Uft)]\"YWFjVqoYs}", intArray0, boolean0);
      assertEquals("\"b+Uft)]\\\"YWFjVqoYs}\":[],", stringBuffer0.toString());
      assertEquals(25, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      long[] longArray0 = new long[7];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "F", longArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[7];
      Boolean boolean0 = new Boolean("");
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, longArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",");
      long[] longArray0 = new long[7];
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.append(stringBuffer0, "F", longArray0, boolean0);
      assertEquals(21, stringBuffer0.length());
      assertEquals(",\"F\":[0,0,0,0,0,0,0],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      Boolean boolean0 = Boolean.TRUE;
      Object[] objectArray0 = new Object[14];
      toStringStyle0.JSON_STYLE.append(stringBuffer0, "", objectArray0, boolean0);
      assertEquals("\"\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null],", stringBuffer0.toString());
      assertEquals(75, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(11);
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, objectArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object[] objectArray0 = new Object[1];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "IvbT\"C)&", objectArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      standardToStringStyle0.setSummaryObjectEndText((String) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.setSummaryObjectStartText((String) null);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectStartText("%/yQ_+B<i9dT)VJ^.(");
      assertEquals("%/yQ_+B<i9dT)VJ^.(", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.setSizeEndText((String) null);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeEndText("&hArr;");
      assertEquals("&hArr;", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      standardToStringStyle0.setSizeStartText((String) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setNullText((String) null);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.NO_CLASS_NAME_STYLE.setFieldSeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setFieldNameValueSeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.setFieldNameValueSeparator("[java.lang.Object@0000000009");
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd((String) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.JSON_STYLE.setContentStart((String) null);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setArraySeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      
      standardToStringStyle0.setArrayEnd((String) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.setArrayStart((String) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, ",8tKWsbKwW3:j(4Nid", (Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.RecursiveToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_CLASS_NAME_STYLE.appendClassName(stringBuffer0, stringBuffer0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(0, stringBuffer0.length());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[0];
      recursiveToStringStyle0.append(stringBuffer0, (String) null, booleanArray0, (Boolean) null);
      assertEquals("{},", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("java.lang.StringBuffer@00000");
      multilineRecursiveToStringStyle0.append(stringBuffer0, "java.lang.StringBuffer@00000", (boolean[]) null, (Boolean) null);
      assertEquals(67, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      boolean[] booleanArray0 = new boolean[1];
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "", booleanArray0, (Boolean) false);
      assertEquals("=<size=1>,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      float[] floatArray0 = new float[6];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "CE):,ckkhx", floatArray0);
      assertEquals("{\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0\n  }", stringBuffer0.toString());
      assertEquals(58, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      float[] floatArray0 = new float[4];
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "[java.lang.Object@0000000002", floatArray0, boolean0);
      assertEquals("<size=4>,", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle", (float[]) null, (Boolean) null);
      assertEquals(74, stringBuffer0.length());
      assertEquals("\"org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle\":null,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\n]");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      float[] floatArray0 = new float[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "\n]", floatArray0, boolean0);
      assertEquals("\n]{},", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[3];
      Boolean boolean0 = Boolean.TRUE;
      recursiveToStringStyle0.append(stringBuffer0, ">\"vwhohX$W", doubleArray0, boolean0);
      assertEquals(">\"vwhohX$W={0.0,0.0,0.0},", stringBuffer0.toString());
      assertEquals(25, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2409);
      Boolean boolean0 = new Boolean("cw+`+8aimF)ab/PJF0H");
      standardToStringStyle0.append(stringBuffer0, "\u03C6", (double[]) null, boolean0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[1];
      Boolean boolean0 = Boolean.valueOf("%>8l%,4p\"bT_2");
      standardToStringStyle0.append(stringBuffer0, "%>8l%,4p\"bT_2", charArray0, boolean0);
      assertEquals(23, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "]b3AdUz'O^5Uy)sfT*n", (char[]) null, boolean0);
      assertEquals("]b3AdUz'O^5Uy)sfT*n=<null>\n  ", stringBuffer0.toString());
      assertEquals(29, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("2SS6L]^");
      byte[] byteArray0 = new byte[5];
      standardToStringStyle0.appendDetail(stringBuffer0, "2SS6L]^", byteArray0);
      assertEquals(18, stringBuffer0.length());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[1];
      recursiveToStringStyle0.append(stringBuffer0, "&Omega;", byteArray0, (Boolean) null);
      assertEquals(12, stringBuffer0.length());
      assertEquals("&Omega;={0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, ";$'r%FxIjq]\"608]", (byte[]) null, boolean0);
      assertEquals(";$'r%FxIjq]\"608]=<null>,\n  ", stringBuffer0.toString());
      assertEquals(27, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      short[] shortArray0 = new short[16];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, (String) null, shortArray0);
      assertEquals("{\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  }", stringBuffer0.toString());
      assertEquals(116, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[0];
      Boolean boolean0 = new Boolean("org.junitpioneer.jupiter.params.Range");
      multilineRecursiveToStringStyle0.append(stringBuffer0, "org.junitpioneer.jupiter.params.Range", shortArray0, boolean0);
      assertEquals(50, stringBuffer0.length());
      assertEquals("org.junitpioneer.jupiter.params.Range=<size=0>,\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.append(stringBuffer0, "D8N:v.PS;eT2Le", (short[]) null, (Boolean) null);
      assertEquals(22, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[1];
      toStringStyle0.append(stringBuffer0, "\u200C", shortArray0, boolean0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("\"\\u200C\":[0],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[9];
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.append(stringBuffer0, (String) null, intArray0, boolean0);
      assertEquals("<size=9>,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "&Uacute;", (int[]) null, boolean0);
      assertEquals("&Uacute;=<null>,\n  ", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[9];
      standardToStringStyle0.append(stringBuffer0, (String) null, intArray0, boolean0);
      assertEquals(20, stringBuffer0.length());
      assertEquals("{0,0,0,0,0,0,0,0,0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "[");
      long[] longArray0 = new long[1];
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "[", longArray0, boolean0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("[[={0}\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.valueOf((String) null);
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, (String) null, (long[]) null, boolean0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.append(stringBuffer0, "[java.lang.Object@0000000003", (Object[]) null, (Boolean) null);
      assertEquals(36, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      recursiveToStringStyle0.appendDetail(stringBuffer0, "[", stringBuffer0);
      assertEquals(73, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Map<Object, Object> map0 = ToStringStyle.getRegistry();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      recursiveToStringStyle0.appendDetail(stringBuffer0, "h@(8`ci\"HAGKxS+", (-758), linkedList0);
      String string0 = "IP";
      StringBuffer stringBuffer2 = new StringBuffer("IP");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "h@(8`ci\"HAGKxS+";
      objectArray0[1] = (Object) map0;
      objectArray0[1] = (Object) "IP";
      objectArray0[3] = (Object) map0;
      objectArray0[4] = (Object) recursiveToStringStyle0;
      objectArray0[6] = (Object) stringBuffer1;
      recursiveToStringStyle0.appendDetail(stringBuffer2, "{java.lang.StringBuffer@0000000003", objectArray0);
      recursiveToStringStyle0.appendDetail(stringBuffer2, string0, linkedList0);
      Boolean boolean0 = Boolean.FALSE;
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Map<Object, Object> map0 = ToStringStyle.getRegistry();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer();
      String string0 = "h@(8`ci\"\\HAGKxS+";
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      recursiveToStringStyle0.appendDetail(stringBuffer0, "h@(8`ci\"HAGKxS+", (-758), linkedList0);
      //  // Unstable assertion: assertEquals(24, stringBuffer0.length());
      
      StringBuffer stringBuffer2 = new StringBuffer("h@(8`ci\"HAGKxS+");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "h@(8`ci\"HAGKxS+";
      objectArray0[1] = (Object) "h@(8`ci\"HAGKxS+";
      objectArray0[3] = (Object) map0;
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.append(stringBuffer2, "h@(8`ci\"HAGKxS+", objectArray0[3], boolean0);
       //  fail("Expecting exception: StackOverflowError");
       // Unstable assertion
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Integer integer0 = new Integer((-399));
      Boolean boolean0 = Boolean.valueOf(true);
      multilineRecursiveToStringStyle0.append(stringBuffer0, "[\n   h  ", (Object) integer0, boolean0);
      assertEquals("[\n   h  =-399,\n  ", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      multilineRecursiveToStringStyle0.append(stringBuffer0, "[java.lang.StringBuffer@0000000002", (Object) null, (Boolean) null);
      assertEquals(45, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = new Boolean(false);
      multilineRecursiveToStringStyle0.append(stringBuffer0, "", doubleArray0, boolean0);
      Object object0 = new Object();
      multilineRecursiveToStringStyle0.appendEnd(stringBuffer0, object0);
      assertEquals("=<size=0>\n]", stringBuffer0.toString());
      assertEquals(11, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldSeparatorAtEnd(true);
      HashMap<Boolean, Boolean> hashMap0 = new HashMap<Boolean, Boolean>();
      standardToStringStyle0.appendEnd(stringBuffer0, hashMap0);
      assertEquals(1, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object object0 = new Object();
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendStart(stringBuffer0, object0);
      assertEquals(22, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SIMPLE_STYLE.appendStart(stringBuffer0, (Object) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendSuper(stringBuffer0, "psHqiH<bRXc/:f=hj");
      assertEquals("psHqiH<bRXc/:f=hj,", stringBuffer0.toString());
      assertEquals(18, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      recursiveToStringStyle0.appendToString(stringBuffer0, "]");
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.appendToString(stringBuffer0, (String) null);
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      ToStringStyle.unregister(multilineRecursiveToStringStyle0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendInternal(stringBuffer0, "|ZyM;iu)dL1s<W", (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      LinkedList<StringBuffer> linkedList0 = new LinkedList<StringBuffer>();
      boolean boolean0 = ToStringStyle.isRegistered(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getSizeStartText();
      assertEquals("<size=", string0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "w\"Q7QG1%w;v4WE,", byteArray0, boolean0);
      assertEquals(28, stringBuffer0.length());
      assertEquals("w\"Q7QG1%w;v4WE,=<size=0>,\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.appendEnd((StringBuffer) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      double[] doubleArray0 = new double[1];
      Boolean boolean0 = Boolean.valueOf((String) null);
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, (String) null, doubleArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      float[] floatArray0 = new float[0];
      multilineRecursiveToStringStyle0.JSON_STYLE.appendSummary(stringBuffer0, "cPK[", floatArray0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("\"<size=0>\"", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[1];
      Boolean boolean0 = Boolean.valueOf("<");
      multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "<", longArray0, boolean0);
      assertEquals(11, stringBuffer0.length());
      assertEquals("<=<size=1>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (short) (-763));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SIMPLE_STYLE.appendSummary(stringBuffer0, "ava.lang.Obect@000000003", (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendDetail((StringBuffer) null, "%>8l%,4p\"bT_2", (-1.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      hashMap0.put((Integer) null, (Integer) null);
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "<njlb0>", hashMap0);
      assertEquals(2, stringBuffer0.length());
      assertEquals("{}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      boolean boolean0 = multilineRecursiveToStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, (String) null, false);
      assertEquals(6, stringBuffer0.length());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getContentEnd();
      assertEquals("\n]", string0);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object[] objectArray0 = new Object[3];
      Boolean boolean0 = new Boolean("4CIhzUUStdF]DE %`7v");
      multilineRecursiveToStringStyle0.append(stringBuffer0, "r-gE]", objectArray0, boolean0);
      assertEquals("r-gE]=<size=3>,\n  ", stringBuffer0.toString());
      assertEquals(18, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      
      standardToStringStyle0.setFieldSeparatorAtEnd(true);
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertTrue(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "[java.lang.Object@0000000002", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "{java.lang.StringBuffer@0000000004", (byte)2);
      assertEquals(2, stringBuffer0.length());
      assertEquals("2,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = new Boolean((String) null);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.append((StringBuffer) null, (String) null, (Object) "  ", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      LinkedList<RecursiveToStringStyle> linkedList0 = new LinkedList<RecursiveToStringStyle>();
      multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "8>", 1, linkedList0);
      assertEquals(",[]", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      String string0 = toStringStyle0.getNullText();
      assertEquals("<null>", string0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "V'f?16e4O", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getSummaryObjectEndText();
      assertEquals(">", string0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getFieldSeparator();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.SHORT_PREFIX_STYLE.appendStart(stringBuffer0, stringBuffer0);
      assertEquals("StringBuffer[", stringBuffer0.toString());
      assertEquals(13, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "S", (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeEndText();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "]", (-2629.193811551637));
      assertEquals("-2629.193811551637,", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (-1.0F));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.append((StringBuffer) null, "1t}Y", (-1317L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("{java.lang.Object@0000000002");
      standardToStringStyle0.append(stringBuffer0, "^8<8NF", 476);
      assertEquals(39, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      char[] charArray0 = new char[1];
      recursiveToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "t-@*<]Nu~OE/PG", charArray0, (Boolean) null);
      assertEquals(4, stringBuffer0.length());
      assertEquals("{\u0000},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.JSON_STYLE.setUseClassName(false);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getSummaryObjectStartText();
      assertEquals("<", string0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isArrayContentDetail();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.appendDetail((StringBuffer) null, "=", (short) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.appendDetail((StringBuffer) null, "&alpha;", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "", 'a');
      assertEquals(7, stringBuffer0.length());
      assertEquals("\"\":\"a\",", stringBuffer0.toString());
  }
}
