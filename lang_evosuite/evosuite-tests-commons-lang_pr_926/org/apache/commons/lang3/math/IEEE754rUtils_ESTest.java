/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 00:42:50 GMT 2025
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.IEEE754rUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IEEE754rUtils_ESTest extends IEEE754rUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float[] floatArray0 = new float[2];
      floatArray0[0] = 64.89F;
      floatArray0[1] = 1.0F;
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-992.84F);
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals((-992.84F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 810.475349321;
      doubleArray0[1] = 1709.271345017019;
      doubleArray0[2] = 810.475349321;
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(810.475349321, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-837.398);
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals((-837.398), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      float float0 = IEEE754rUtils.min(1.0F, 1547.5F, 2714.2866F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float float0 = IEEE754rUtils.min(0.0F, (-343.5551F), 1.0F);
      assertEquals((-343.5551F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      float float0 = IEEE754rUtils.min(0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float float0 = IEEE754rUtils.min(1.0F, 1.0F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = IEEE754rUtils.min(0.0, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) (-1482.9368F), 0.0, 0.0);
      assertEquals((-1482.936767578125), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = IEEE754rUtils.min(1620.3, 1620.3);
      assertEquals(1620.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = IEEE754rUtils.min(2629.7906565, (-698.723033));
      assertEquals((-698.723033), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[3];
      floatArray0[0] = 1293.0F;
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(1293.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-343.5551F);
      floatArray0[2] = (-1.0F);
      floatArray0[3] = (-1.0F);
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 4231.429F;
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(4231.42919921875, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) (-1426.4167F);
      doubleArray0[1] = (double) (-1426.4167F);
      doubleArray0[2] = (double) (-1426.4167F);
      doubleArray0[3] = (double) (-1426.4167F);
      doubleArray0[4] = (double) (-1426.4167F);
      doubleArray0[5] = (double) (-1426.4167F);
      doubleArray0[6] = (double) (-1426.4167F);
      doubleArray0[7] = (double) (-1426.4167F);
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals((-1426.416748046875), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-1907.7113F), 884.0F, 1.0F);
      assertEquals(884.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-1.7798171F), (-1.7798171F), (-1.7798171F));
      assertEquals((-1.7798171F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      float float0 = IEEE754rUtils.max(0.0F, (-1.0F));
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      float float0 = IEEE754rUtils.max(1.0F, 1.0F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = IEEE754rUtils.max(447.5512764088, 447.5512764088, 447.5512764088);
      assertEquals(447.5512764088, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-1.0), (double) (-1476.4686F), (double) (-1476.4686F));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = IEEE754rUtils.max(0.0, (double) (-1482.9368F));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = IEEE754rUtils.max(0.0, 4425.3464901097);
      assertEquals(4425.3464901097, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-1143.6815F), (-1.0F));
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-31.626714), (-913.8754229586307));
      assertEquals((-31.626714), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      float float0 = IEEE754rUtils.min((-1476.4686F), 1.0F);
      assertEquals((-1476.4686F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = IEEE754rUtils.min(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      float[] floatArray0 = new float[6];
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float[] floatArray0 = new float[6];
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      float float0 = IEEE754rUtils.min(0.0F, 0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = IEEE754rUtils.min(810.475349321, 810.475349321, 1709.271345017019);
      assertEquals(810.475349321, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-1.0), (double) 0.0F, (-1.0));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-612.331F), 0.0F, (-304.0F));
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IEEE754rUtils iEEE754rUtils0 = new IEEE754rUtils();
  }
}
