/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 00:36:02 GMT 2025
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle;
import org.apache.commons.lang3.builder.RecursiveToStringStyle;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "r2G2eBrsrA8e+%");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendToString(stringBuffer0, "\n]");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 3, end 0, s.length() 2
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<null>");
      multilineRecursiveToStringStyle0.appendToString(stringBuffer0, "<null>");
      assertEquals("<null>", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(">");
      recursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummarySize(stringBuffer0, ">", 5);
      assertEquals(9, stringBuffer0.length());
      assertEquals("><size=5>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(169);
      boolean[] booleanArray0 = new boolean[0];
      multilineRecursiveToStringStyle0.appendSummary(stringBuffer0, "[java.lang.Object@0000000001", booleanArray0);
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals(8, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",\n  ");
      short[] shortArray0 = new short[0];
      multilineRecursiveToStringStyle0.appendSummary(stringBuffer0, "[java.lang.Object@0000000001", shortArray0);
      assertEquals(12, stringBuffer0.length());
      assertEquals(",\n  <size=0>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(367);
      Object[] objectArray0 = new Object[1];
      recursiveToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, ":", objectArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=1>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      long[] longArray0 = new long[7];
      standardToStringStyle0.appendSummary(stringBuffer0, "", longArray0);
      assertEquals("<size=7>", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("");
      int[] intArray0 = new int[6];
      toStringStyle0.JSON_STYLE.appendSummary(stringBuffer0, "org.junitpioneer.jupiter.params.ShortRange", intArray0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("\"<size=6>\"", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(">");
      float[] floatArray0 = new float[6];
      recursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendSummary(stringBuffer0, ">", floatArray0);
      assertEquals("><size=6>", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "[\n  ");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      double[] doubleArray0 = new double[2];
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendSummary(stringBuffer0, "[\n  ", doubleArray0);
      assertEquals(12, stringBuffer0.length());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("s_0bRi~pD,Du5-");
      char[] charArray0 = new char[9];
      standardToStringStyle0.appendSummary(stringBuffer0, "&sigmaf;", charArray0);
      assertEquals("s_0bRi~pD,Du5-<size=9>", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[7];
      standardToStringStyle0.DEFAULT_STYLE.appendSummary(stringBuffer0, "{org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle@0000000004", byteArray0);
      assertEquals("<size=7>", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\"<size=");
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.appendSummary(stringBuffer0, "", boolean0);
      assertEquals("\"<size=\"<Boolean>\"", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      standardToStringStyle0.appendNullText(stringBuffer0, "[6/z|-X[,p+G4qT04");
      assertEquals("<null>", stringBuffer0.toString());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendIdentityHashCode(stringBuffer0, stringBuffer0);
      assertEquals("@2", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\"<size=");
      toStringStyle0.MULTI_LINE_STYLE.appendFieldStart(stringBuffer0, "\"<size=");
      assertEquals(15, stringBuffer0.length());
      assertEquals("\"<size=\"<size==", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendFieldSeparator(stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(169);
      multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendFieldEnd(stringBuffer0, "{");
      assertEquals(1, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[6];
      toStringStyle0.appendDetail(stringBuffer0, (String) null, shortArray0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("{0,0,0,0,0,0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("}");
      long[] longArray0 = new long[9];
      toStringStyle0.appendDetail(stringBuffer0, (String) null, longArray0);
      assertEquals(20, stringBuffer0.length());
      assertEquals("}{0,0,0,0,0,0,0,0,0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      char[] charArray0 = new char[4];
      toStringStyle0.appendDetail(stringBuffer0, "\"", charArray0);
      assertEquals(37, stringBuffer0.length());
      assertEquals("[\"\\u0000\",\"\\u0000\",\"\\u0000\",\"\\u0000\"]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[0];
      standardToStringStyle0.appendDetail(stringBuffer0, "r~l]K1`SaYt3XY", byteArray0);
      assertEquals("{}", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, (String) null, true);
      assertEquals("true", stringBuffer0.toString());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "jVr*R.N]/5~x", 0L);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Double double0 = new Double(101);
      toStringStyle0.appendDetail(stringBuffer0, "|~ Xcp>z_^M&`M'V", 101, double0);
      assertEquals(",101.0", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "Boolean", (-46));
      assertEquals("-46", stringBuffer0.toString());
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<null>");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendDetail(stringBuffer0, "\u2009", (byte)50);
      //  // Unstable assertion: assertEquals("<null>50.0", stringBuffer0.toString());
      //  // Unstable assertion: assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      recursiveToStringStyle0.appendDetail(stringBuffer0, "", 0.0);
      assertEquals(">0.0", stringBuffer0.toString());
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      toStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, (String) null, '&');
      assertEquals(3, stringBuffer0.length());
      assertEquals("\"&\"", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("2JPs0i");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, "blank_blank_blank_2014", (byte)6);
      assertEquals(7, stringBuffer0.length());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("}G]");
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      recursiveToStringStyle0.SIMPLE_STYLE.appendCyclicObject(stringBuffer0, "j", hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("{");
      standardToStringStyle0.appendContentStart(stringBuffer0);
      assertEquals("{[", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.NO_CLASS_NAME_STYLE.appendContentEnd(stringBuffer0);
      assertEquals("]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      toStringStyle0.setUseShortClassName(true);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.setUseIdentityHashCode(true);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.setUseFieldNames(false);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setUseClassName(false);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.setFieldSeparatorAtEnd(false);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.setFieldSeparator("");
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      toStringStyle0.setArrayStart("k");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.setArrayEnd((String) null);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.removeLastFieldSeparator((StringBuffer) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle.register(object0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, (String) null, (Map<?, ?>) null);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.DEFAULT_STYLE.appendSuper(stringBuffer0, "&Ccedil;");
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.append(stringBuffer0, ";.A}g4*+>o", false);
      assertEquals(19, stringBuffer0.length());
      assertEquals("\";.A}g4*+>o\":false,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "{org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle@0000000005", (short)145);
      assertEquals(4, stringBuffer0.length());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, (String) null, 0L);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(">");
      multilineRecursiveToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, ">", 0);
      assertEquals(3, stringBuffer0.length());
      assertEquals(">0,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "U~q@06gbR(ycu>oGv%", (-1.0F));
      assertEquals("-1.0,", stringBuffer0.toString());
      assertEquals(5, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("[");
      multilineRecursiveToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "[", 1604.5182295931425);
      assertEquals("[1604.5182295931425,", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "[", (byte) (-114));
      assertEquals(5, stringBuffer0.length());
      assertEquals("-114,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean boolean0 = recursiveToStringStyle0.isUseShortClassName();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseIdentityHashCode();
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      boolean boolean0 = toStringStyle0.isUseIdentityHashCode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      boolean boolean0 = multilineRecursiveToStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean boolean0 = recursiveToStringStyle0.isUseClassName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseClassName();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LinkedList<StringBuffer> linkedList0 = new LinkedList<StringBuffer>();
      boolean boolean0 = ToStringStyle.isRegistered(linkedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      Boolean boolean0 = new Boolean(true);
      boolean boolean1 = recursiveToStringStyle0.isFullDetail(boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.valueOf("g\"rzKr_K(8");
      standardToStringStyle0.isFullDetail(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtStart();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtStart();
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(boolean0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      boolean boolean0 = multilineRecursiveToStringStyle0.isArrayContentDetail();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      
      standardToStringStyle0.setArrayContentDetail(false);
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertFalse(standardToStringStyle0.isArrayContentDetail());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Class<Object> class0 = Object.class;
      standardToStringStyle0.getShortClassName(class0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      String string0 = recursiveToStringStyle0.getFieldSeparator();
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getContentStart();
      assertEquals("[\n  ", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.setContentStart("");
      String string0 = toStringStyle0.getContentStart();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getContentEnd();
      assertEquals("\n]", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getContentEnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getArrayStart();
      assertEquals("{\n  ", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, "null", "null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendToString((StringBuffer) null, "p\"'38j=H;qt4p%`fcB ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendSummarySize((StringBuffer) null, "UEyp}o+v38z", (-1178));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendSummary(stringBuffer0, ">", (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.NO_CLASS_NAME_STYLE.appendSummary(stringBuffer0, "r2A2eBrsrA8H+%", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendSummary(stringBuffer0, "HDoh1J{#BTdh?<OJ", (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.appendSummary(stringBuffer0, "7\"LR@{1oH5", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SIMPLE_STYLE.appendSummary(stringBuffer0, "{", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.appendSummary((StringBuffer) null, "{\n  ", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      Integer integer0 = new Integer(102);
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.DEFAULT_STYLE.appendStart((StringBuffer) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendNullText((StringBuffer) null, "}!7_U?)cd!:U`p!A4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LinkedList<StringBuffer> linkedList0 = new LinkedList<StringBuffer>();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendIdentityHashCode((StringBuffer) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.JSON_STYLE.appendFieldStart(stringBuffer0, (String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.NO_CLASS_NAME_STYLE.appendFieldStart((StringBuffer) null, "{org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle@0000000010");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.SIMPLE_STYLE.appendFieldSeparator((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendFieldEnd((StringBuffer) null, "b]hU$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendEnd((StringBuffer) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "gD`-oD m/0TN", (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "gD`-oD m/0TN", (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = (Object) stringBuffer0;
      objectArray0[4] = (Object) stringBuffer0;
      // Undeclared exception!
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, ">", objectArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, "Fe=LPSASyzx", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail((StringBuffer) null, "o", longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("m,5:");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "m,5:", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail(stringBuffer0, "", (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "AOWF", (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "nP=lf");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "nP=lf", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail(stringBuffer0, "{java.lang.Object@0000000009", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail((StringBuffer) null, "=", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle", (short)22291);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      HashMap<StringBuffer, StringBuffer> hashMap0 = new HashMap<StringBuffer, StringBuffer>();
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail((StringBuffer) null, "%s %s.", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<StringBuffer> linkedList0 = new LinkedList<StringBuffer>();
      linkedList0.add(stringBuffer0);
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[3] = (Object) linkedList0;
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, (String) null, objectArray0);
      // Undeclared exception!
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "+", linkedList0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        toStringStyle0.MULTI_LINE_STYLE.appendDetail((StringBuffer) null, "VkkYWr+$H#", object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendDetail((StringBuffer) null, "\u2227", 267L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(64);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, "Cketwo,", 64, stringBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.appendDetail((StringBuffer) null, "", 139);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, "4", (-1547.53F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.NO_CLASS_NAME_STYLE.appendDetail((StringBuffer) null, "Bd0R4OGYY+9A", (-4519.725));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, "  ", 'C');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, "{z/}<(]6g{SQ+W@", (byte) (-119));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendCyclicObject(stringBuffer0, "dAcirc;", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot get the toString of a null object
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendContentStart((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendContentEnd((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      HashMap<StringBuffer, StringBuffer> hashMap0 = new HashMap<StringBuffer, StringBuffer>();
      // Undeclared exception!
      try { 
        toStringStyle0.MULTI_LINE_STYLE.appendClassName((StringBuffer) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, ":", (boolean[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = objectArray0[0];
      objectArray0[2] = (Object) stringBuffer0;
      // Undeclared exception!
      multilineRecursiveToStringStyle0.append(stringBuffer0, "\"O;", objectArray0, (Boolean) null);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.append((StringBuffer) null, "iPC ", (Object[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "s&</g$/8BD4>6v", (long[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      int[] intArray0 = new int[0];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        toStringStyle0.SIMPLE_STYLE.append((StringBuffer) null, "\u00D8", intArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "2JPs0i", (float[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.append((StringBuffer) null, "\u2207", (double[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      char[] charArray0 = new char[6];
      Boolean boolean0 = Boolean.valueOf("{java.lang.StringBuffer@0000000002");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.append((StringBuffer) null, "{java.lang.StringBuffer@0000000002", charArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.valueOf("YiMVz7s2iJPc~T.}[>:");
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "YiMVz7s2iJPc~T.}[>:", (byte[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (short)9012);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "org.junitpioneer.jupiter.cartesian.CartesianValueArgumentsProvider", (Object) hashMap0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "n", (Object) linkedList0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, "", (-1905L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, (String) null, 153);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, "java.lan", (-556.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 'u');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.SHORT_PREFIX_STYLE.append((StringBuffer) null, "[org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle@0000000010", 'P');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.append((StringBuffer) null, "[java.lang.Object@0000000004", (byte)34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Map<Object, Object> map0 = ToStringStyle.getRegistry();
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.appendDetail(stringBuffer0, (String) null, map0);
      //  // Unstable assertion: assertEquals("{}", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[4];
      recursiveToStringStyle0.append(stringBuffer0, ">", booleanArray0, (Boolean) true);
      assertEquals(28, stringBuffer0.length());
      assertEquals(">={false,false,false,false},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Boolean");
      Boolean boolean0 = Boolean.valueOf("Boolean");
      toStringStyle0.NO_CLASS_NAME_STYLE.append(stringBuffer0, "", (boolean[]) null, boolean0);
      assertEquals(15, stringBuffer0.length());
      assertEquals("Boolean=<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      recursiveToStringStyle0.append(stringBuffer0, (String) null, (float[]) null, boolean0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[7];
      multilineRecursiveToStringStyle0.append(stringBuffer0, ">\"", doubleArray0, boolean0);
      assertEquals(74, stringBuffer0.length());
      assertEquals(">\"={\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0\n  },\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "{jhva.lang.Class@0000000c", (char[]) null, (Boolean) null);
      assertEquals(33, stringBuffer0.length());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.NO_CLASS_NAME_STYLE.append(stringBuffer0, "\"<size=", byteArray0, boolean0);
      assertEquals("\"<size=={},", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "<size=", (long[]) null, boolean0);
      assertEquals("<size==<null>,\n  ", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[0];
      standardToStringStyle0.append(stringBuffer0, "&cent;", objectArray0, (Boolean) null);
      assertEquals("&cent;={},", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "\n}", stringBuffer0);
      assertEquals(203, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      standardToStringStyle0.appendInternal(stringBuffer0, "org.junitpioneer.vintage.ExpectedExceptionExtension", hashMap0, false);
      assertEquals("<size=0>", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Class<Boolean> class0 = Boolean.TYPE;
      ToStringStyle.isRegistered(class0);
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.getArraySeparator();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",\n  ");
      Boolean.valueOf("[java.lang.Object@0000000001");
      Object[] objectArray0 = new Object[5];
      objectArray0[3] = (Object) multilineRecursiveToStringStyle0;
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "\"ZDY9Sq>\"Yx7tGE,mtN", objectArray0);
      assertEquals(726, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.append(stringBuffer0, "Field names are mandatory when using JsonToStringStyle", (Object) stringBuffer0, (Boolean) null);
      assertEquals("Field names are mandatory when using JsonToStringStyle=Field names are mandatory when using JsonToStringStyle=,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Object object0 = new Object();
      ToStringStyle.unregister(object0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      standardToStringStyle0.appendDetail(stringBuffer0, "%s: Could not resolve parameter by name (%s).", hashMap0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getArrayEnd();
      assertEquals("}", string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Object[] objectArray0 = new Object[7];
      toStringStyle0.setContentStart("");
      objectArray0[0] = (Object) toStringStyle0;
      toStringStyle0.append(stringBuffer0, "iPC ", objectArray0, (Boolean) null);
      assertEquals(69, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) toStringStyle0;
      toStringStyle0.append(stringBuffer0, "iPC ", objectArray0, (Boolean) null);
      assertEquals(69, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>(1);
      hashMap0.put((Integer) null, (Integer) null);
      toStringStyle0.appendDetail(stringBuffer0, "a P[HFXIJ9|C\u0002&", hashMap0);
      assertEquals("{}", stringBuffer0.toString());
      assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      HashMap<StringBuffer, StringBuffer> hashMap0 = new HashMap<StringBuffer, StringBuffer>();
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.appendDetail((StringBuffer) null, (String) null, (-2423), hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.setContentStart("");
      Boolean boolean0 = Boolean.valueOf(true);
      Object[] objectArray0 = new Object[9];
      toStringStyle0.JSON_STYLE.setContentEnd("");
      objectArray0[0] = (Object) stringBuffer0;
      toStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle", objectArray0, boolean0);
      assertEquals("\"org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle\":[\"org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle\":[,null,null,null,null,null,null,null,null],", stringBuffer0.toString());
      assertEquals(192, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Boolean boolean0 = Boolean.valueOf(true);
      Object[] objectArray0 = new Object[9];
      objectArray0[1] = (Object) boolean0;
      toStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle", objectArray0, boolean0);
      assertEquals(121, stringBuffer0.length());
      assertEquals("\"org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle\":[null,true,null,null,null,null,null,null,null],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      int[] intArray0 = new int[6];
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      hashMap0.put((Integer) intArray0[0], (Integer) intArray0[1]);
      toStringStyle0.appendDetail(stringBuffer0, "w?.<ff'wWGf1H", hashMap0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("{\"0\":0}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) '*';
      toStringStyle0.appendDetail(stringBuffer0, (String) null, objectArray0);
      assertEquals(54, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(3231);
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "&ugrave;", (Object) null);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "n", (Object) stringBuffer0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, (Object) stringBuffer0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.append(stringBuffer0, "ep1wty", (Object) stringBuffer0, boolean0);
      assertEquals(39, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "", (boolean[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean[] booleanArray0 = new boolean[1];
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, booleanArray0, (Boolean) booleanArray0[0]);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("=");
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "=", (float[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, (float[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "Providing both method-level and parameter-level argument sources for @CartesianTest is not supported.", (double[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, doubleArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "", charArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[2];
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, charArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean("org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle");
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "{org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle@0000000002", (byte[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("&2psilon;");
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, (byte[]) null, (Boolean) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1465);
      short[] shortArray0 = new short[0];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "[java.lang.StringBuffer@0000000006", shortArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (short[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[0];
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.append(stringBuffer0, "[java.lang.StringBuffer@0000000006", shortArray0, boolean0);
      assertEquals(40, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.append(stringBuffer0, "p>Y>1#<x[>l?T", (int[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      int[] intArray0 = new int[3];
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, intArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      int[] intArray0 = new int[0];
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle", intArray0, boolean0);
      assertEquals("\"org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle\":[],", stringBuffer0.toString());
      assertEquals(75, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "ku>69n,ysR@b", (long[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      long[] longArray0 = new long[5];
      Boolean boolean0 = Boolean.valueOf("{org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle@0000000001");
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, longArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Object[] objectArray0 = new Object[0];
      Boolean boolean0 = Boolean.valueOf("iPC ");
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "iPC ", objectArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, (Object[]) null, (Boolean) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.setSummaryObjectEndText((String) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.setSummaryObjectEndText("&uarr;");
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setSummaryObjectStartText((String) null);
      String string0 = multilineRecursiveToStringStyle0.getSummaryObjectStartText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setSummaryObjectStartText("{java.lang.Object@0000000001");
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setSizeEndText((String) null);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.SIMPLE_STYLE.setSizeEndText("%S]sS\"?USD]gR6vtw");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.setSizeStartText((String) null);
      String string0 = recursiveToStringStyle0.getSizeStartText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      recursiveToStringStyle0.setSizeStartText(":)GDr");
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.JSON_STYLE.setNullText((String) null);
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.setNullText("&perp;");
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.setFieldSeparator((String) null);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.setFieldNameValueSeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldNameValueSeparator("dMQS|=w!:B:");
      assertEquals("dMQS|=w!:B:", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd((String) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      standardToStringStyle0.setContentStart((String) null);
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.SIMPLE_STYLE.setArraySeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart((String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      Integer integer0 = new Integer((-2615));
      toStringStyle0.appendStart(stringBuffer0, integer0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("Integer[", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail((StringBuffer) null, "De&_:X|h)fZ", (Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.RecursiveToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendClassName(stringBuffer0, stringBuffer0);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[9];
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      Boolean boolean0 = new Boolean(false);
      toStringStyle0.append(stringBuffer0, "b)J6[", booleanArray0, boolean0);
      assertEquals("<size=9>,", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.append(stringBuffer0, "", (boolean[]) null, boolean0);
      assertEquals("\"\":null,", stringBuffer0.toString());
      assertEquals(8, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      float[] floatArray0 = new float[7];
      toStringStyle0.appendDetail(stringBuffer0, ":", floatArray0);
      assertEquals(29, stringBuffer0.length());
      assertEquals("[0.0,0.0,0.0,0.0,0.0,0.0,0.0]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      float[] floatArray0 = new float[0];
      standardToStringStyle0.append(stringBuffer0, "<size=", floatArray0, boolean0);
      assertEquals("<size==<size=0>,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",\n  ");
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, ",\n  ", (float[]) null, boolean0);
      assertEquals(17, stringBuffer0.length());
      assertEquals(",\n  \",\\n  \":null,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      float[] floatArray0 = new float[0];
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "[java.lang.Object@0000000008", floatArray0, (Boolean) null);
      assertEquals(32, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[4];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "9", doubleArray0);
      assertEquals("{\n    0.0,\n    0.0,\n    0.0,\n    0.0\n  }", stringBuffer0.toString());
      assertEquals(40, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Boolean boolean0 = new Boolean(true);
      double[] doubleArray0 = new double[0];
      toStringStyle0.append(stringBuffer0, "\"R-Ef#>/7bss&_>2h@~", doubleArray0, boolean0);
      assertEquals(27, stringBuffer0.length());
      assertEquals("\"\\\"R-Ef#>\\/7bss&_>2h@~\":[],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "qX!(shL'", (double[]) null, (Boolean) null);
      assertEquals("qX!(shL'=<null>\n  ", stringBuffer0.toString());
      assertEquals(18, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "java.lang.Object@0000000007}", charArray0, boolean0);
      assertEquals(32, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "ynX^t]WeJ/54}{.m'o", (char[]) null, boolean0);
      assertEquals("\"ynX^t]WeJ\\/54}{.m'o\":null,", stringBuffer0.toString());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.append(stringBuffer0, "sopG", (byte[]) null, boolean0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<null>");
      Boolean boolean0 = Boolean.TRUE;
      short[] shortArray0 = new short[3];
      recursiveToStringStyle0.append(stringBuffer0, "<null>", shortArray0, boolean0);
      assertEquals(21, stringBuffer0.length());
      assertEquals("<null><null>={0,0,0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.append((StringBuffer) null, (String) null, (short[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      int[] intArray0 = new int[10];
      Boolean boolean0 = Boolean.valueOf(true);
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "(7f_lk*Ejava.lang.StringBuffer@0000000004", intArray0, boolean0);
      assertEquals(66, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "[java.lang.StringBuffer@0000000004", (int[]) null, (Boolean) null);
      assertEquals(42, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      long[] longArray0 = new long[10];
      Boolean boolean0 = Boolean.valueOf("FullDetail must be true when using JsonToStringStyle");
      standardToStringStyle0.append(stringBuffer0, "FullDetail must be true when using JsonToStringStyle", longArray0, boolean0);
      assertEquals(63, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.append(stringBuffer0, "\"", (long[]) null, boolean0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("\"\\\"\":null,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object[] objectArray0 = new Object[0];
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "", objectArray0, boolean0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("=<size=0>,\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.valueOf("dAcirc;");
      standardToStringStyle0.append(stringBuffer0, "dAcirc;", (Object[]) null, boolean0);
      assertEquals(15, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      LinkedList<StringBuffer> linkedList0 = new LinkedList<StringBuffer>();
      linkedList0.add(stringBuffer0);
      standardToStringStyle0.appendDetail(stringBuffer0, (String) null, linkedList0);
      assertEquals(3, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendDetail(stringBuffer0, "{", linkedList0);
      assertEquals("[]", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendDetail(stringBuffer0, "<null>", (Collection<?>) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendInternal(stringBuffer0, "d:$qu2XAolx[\"[p", (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      standardToStringStyle0.appendInternal(stringBuffer0, "\n    }", linkedList0, false);
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals(8, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Integer integer0 = new Integer(34);
      standardToStringStyle0.appendInternal(stringBuffer0, "5CkLs/`1<p{f", integer0, true);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "(f$S-V5i%Z3", (Object) null, boolean0);
      assertEquals("(f$S-V5i%Z3=<null>,\n  ", stringBuffer0.toString());
      assertEquals(22, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendEnd(stringBuffer0, linkedList0);
      assertEquals("\n]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendStart(stringBuffer0, stringBuffer0);
      assertEquals(28, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendStart(stringBuffer0, (Object) null);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendToString(stringBuffer0, "\u03C7");
      assertEquals("\u03C7,", stringBuffer0.toString());
      assertEquals(2, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.appendToString(stringBuffer0, "}");
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendToString(stringBuffer0, (String) null);
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeStartText();
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<size=", string0);
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "n+~", byteArray0, boolean0);
      assertEquals("n+~=<size=0>,", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[0];
      Boolean boolean0 = new Boolean("`_");
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "`_", doubleArray0, boolean0);
      assertEquals(9, stringBuffer0.length());
      assertEquals("<size=0>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_CLASS_NAME_STYLE.appendSummary((StringBuffer) null, "org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", floatArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "&nabla;", (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, (String) null, (short)2064);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      byte[] byteArray0 = new byte[9];
      Boolean boolean0 = new Boolean(true);
      toStringStyle0.append(stringBuffer0, "mG#z'/u<5?8lphv", byteArray0, boolean0);
      assertEquals(39, stringBuffer0.length());
      assertEquals("\"mG#z'\\/u<5?8lphv\":[0,0,0,0,0,0,0,0,0],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.JSON_STYLE.setDefaultFullDetail(false);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "t@bMCE~q", (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 8171);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      long[] longArray0 = new long[3];
      standardToStringStyle0.append(stringBuffer0, "&clubs;", longArray0, boolean0);
      assertEquals("&clubs;={0,0,0},", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.setArrayContentDetail(true);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      boolean boolean0 = toStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.appendSuper((StringBuffer) null, "I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.NO_FIELD_NAMES_STYLE.appendClassName(stringBuffer0, stringBuffer0);
      Object[] objectArray0 = new Object[5];
      objectArray0[2] = (Object) stringBuffer0;
      toStringStyle0.appendDetail(stringBuffer0, "org.junitpioneer.jupiter.ReportEntryExtension", objectArray0);
      assertEquals(68, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.append((StringBuffer) null, "{java.lang.StringBuffer@0000000004", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("2JPs0i");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      boolean[] booleanArray0 = new boolean[5];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "2JPs0i", booleanArray0);
      assertEquals(65, stringBuffer0.length());
      assertEquals("2JPs0i{\n    false,\n    false,\n    false,\n    false,\n    false\n  }", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.setFieldSeparatorAtStart(false);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      boolean boolean0 = toStringStyle0.isUseShortClassName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.appendSummary(stringBuffer0, "", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      char[] charArray0 = new char[7];
      Boolean boolean0 = new Boolean("W'Gc*3wjd'h-");
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, ";h1'`uS#>/EOVE", charArray0, boolean0);
      assertEquals(";h1'`uS#>/EOVE=<size=7>,", stringBuffer0.toString());
      assertEquals(24, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (byte) (-94));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendInternal(stringBuffer0, "org.junitpioneer.vintage.ExpectedExceptionExtension", "org.junitpioneer.vintage.ExpectedExceptionExtension", false);
      assertEquals(8, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getNullText();
      assertEquals("<null>", string0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      String string0 = toStringStyle0.getSummaryObjectEndText();
      assertEquals(">", string0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getFieldNameValueSeparator();
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[0];
      Boolean boolean0 = new Boolean("6X\"Tl8C@Y*\"n|1^F>");
      standardToStringStyle0.append(stringBuffer0, (String) null, shortArray0, boolean0);
      assertEquals("<size=0>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getSizeEndText();
      assertEquals(">", string0);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.append((StringBuffer) null, "[java.lang.Object@0000000003", 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (-3566L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      int[] intArray0 = new int[6];
      toStringStyle0.appendDetail(stringBuffer0, "w?.<ff'wWGf1H", intArray0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("[0,0,0,0,0,0]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtEnd();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getSummaryObjectStartText();
      assertEquals("<", string0);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle", (short)0);
      assertEquals("0", stringBuffer0.toString());
      assertEquals(1, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.JSON_STYLE.append(stringBuffer0, "nv(yNC6.$/| ,`HB,D", '1');
      assertEquals(26, stringBuffer0.length());
      assertEquals("\"nv(yNC6.$\\/| ,`HB,D\":\"1\",", stringBuffer0.toString());
  }
}
