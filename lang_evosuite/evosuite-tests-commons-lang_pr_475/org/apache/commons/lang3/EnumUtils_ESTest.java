/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 14:15:51 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EnumSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import org.apache.commons.lang3.EnumUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class EnumUtils_ESTest extends EnumUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      EnumUtils.getEnumIgnoreCase(class0, "n^dpYJOY", (Locale.FilteringMode) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode locale_FilteringMode0 = EnumUtils.getEnumIgnoreCase(class0, "reject_extended_ranges");
      assertEquals(Locale.FilteringMode.REJECT_EXTENDED_RANGES, locale_FilteringMode0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode[] locale_FilteringModeArray0 = new Locale.FilteringMode[0];
      long long0 = EnumUtils.generateBitVector(class0, locale_FilteringModeArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode[] locale_FilteringModeArray0 = new Locale.FilteringMode[2];
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      locale_FilteringModeArray0[0] = locale_FilteringMode0;
      locale_FilteringModeArray0[1] = locale_FilteringMode0;
      long long0 = EnumUtils.generateBitVector(class0, locale_FilteringModeArray0);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      // Undeclared exception!
      try { 
        EnumUtils.processBitVectors(class0, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.processBitVector((Class<Locale.FilteringMode>) null, 18L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // EnumClass must be defined.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.isValidEnumIgnoreCase((Class<Locale.FilteringMode>) null, "63t.okevp'w;j0\"&r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.isValidEnum((Class<Locale.FilteringMode>) null, "h^S;ocO^U)j|y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.getEnumMap((Class<Locale.FilteringMode>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.getEnumList((Class<Locale.FilteringMode>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      // Undeclared exception!
      try { 
        EnumUtils.getEnumIgnoreCase((Class<Locale.FilteringMode>) null, "63t.okevp'w;j0\"&r", locale_FilteringMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.EnumUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnumUtils.getEnum((Class<Locale.FilteringMode>) null, "K|.8G@7^U~HE$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVectors(class0, (Locale.FilteringMode[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode[] locale_FilteringModeArray0 = new Locale.FilteringMode[1];
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVectors(class0, locale_FilteringModeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The validated array contains null element at index: 0
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVectors(class0, (Iterable<? extends Locale.FilteringMode>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVector(class0, (Locale.FilteringMode[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVector(class0, (Iterable<? extends Locale.FilteringMode>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The validated object is null
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      long[] longArray0 = new long[9];
      longArray0[8] = (-3494L);
      EnumSet<Locale.FilteringMode> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      assertEquals(3, enumSet0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.FilteringMode locale_FilteringMode1 = EnumUtils.getEnumIgnoreCase(class0, "map_extended_ranges", locale_FilteringMode0);
      assertEquals(Locale.FilteringMode.MAP_EXTENDED_RANGES, locale_FilteringMode1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      EnumUtils.getEnum(class0, "<'-2", (Locale.FilteringMode) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      EnumUtils.getEnum(class0, "");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      EnumUtils.getEnumIgnoreCase(class0, "");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      long[] longArray0 = new long[0];
      EnumSet<Locale.FilteringMode> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      assertEquals(0, enumSet0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode[] locale_FilteringModeArray0 = new Locale.FilteringMode[5];
      locale_FilteringModeArray0[0] = locale_FilteringMode0;
      locale_FilteringModeArray0[1] = locale_FilteringMode0;
      locale_FilteringModeArray0[2] = locale_FilteringModeArray0[0];
      locale_FilteringModeArray0[3] = locale_FilteringMode0;
      locale_FilteringModeArray0[4] = locale_FilteringMode0;
      long[] longArray0 = EnumUtils.generateBitVectors(class0, locale_FilteringModeArray0);
      assertEquals(1, longArray0.length);
      assertArrayEquals(new long[] {8L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Stack<Locale.FilteringMode> stack0 = new Stack<Locale.FilteringMode>();
      stack0.add((Locale.FilteringMode) null);
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVectors(class0, (Iterable<? extends Locale.FilteringMode>) stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null elements not permitted
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      List<Locale.FilteringMode> list0 = EnumUtils.getEnumList(class0);
      long[] longArray0 = EnumUtils.generateBitVectors(class0, (Iterable<? extends Locale.FilteringMode>) list0);
      assertEquals(1, longArray0.length);
      assertArrayEquals(new long[] {31L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      PriorityQueue<Locale.FilteringMode> priorityQueue0 = new PriorityQueue<Locale.FilteringMode>();
      LinkedList<Locale.FilteringMode> linkedList0 = new LinkedList<Locale.FilteringMode>(priorityQueue0);
      linkedList0.add((Locale.FilteringMode) null);
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVector(class0, (Iterable<? extends Locale.FilteringMode>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null elements not permitted
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      long[] longArray0 = new long[5];
      EnumSet<Locale.FilteringMode> enumSet0 = EnumUtils.processBitVectors(class0, longArray0);
      long long0 = EnumUtils.generateBitVector(class0, (Iterable<? extends Locale.FilteringMode>) enumSet0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = EnumUtils.getEnumIgnoreCase(class0, (String) null, locale_FilteringMode0);
      assertEquals(Locale.FilteringMode.REJECT_EXTENDED_RANGES, locale_FilteringMode1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode1 = EnumUtils.getEnum(class0, (String) null, locale_FilteringMode0);
      assertSame(locale_FilteringMode0, locale_FilteringMode1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      boolean boolean0 = EnumUtils.isValidEnumIgnoreCase(class0, "map_extended_ranges");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Map<String, Locale.FilteringMode> map0 = EnumUtils.getEnumMap(class0);
      assertEquals(5, map0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      List<Locale.FilteringMode> list0 = EnumUtils.getEnumList(class0);
      long long0 = EnumUtils.generateBitVector(class0, (Iterable<? extends Locale.FilteringMode>) list0);
      assertEquals(31L, long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      EnumSet<Locale.FilteringMode> enumSet0 = EnumUtils.processBitVector(class0, 1314L);
      assertEquals(1, enumSet0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      Locale.FilteringMode[] locale_FilteringModeArray0 = new Locale.FilteringMode[2];
      // Undeclared exception!
      try { 
        EnumUtils.generateBitVector(class0, locale_FilteringModeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The validated array contains null element at index: 0
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      boolean boolean0 = EnumUtils.isValidEnumIgnoreCase(class0, "*L 2'2=nqis9ym-:x");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      boolean boolean0 = EnumUtils.isValidEnum(class0, "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EnumUtils enumUtils0 = new EnumUtils();
  }
}
