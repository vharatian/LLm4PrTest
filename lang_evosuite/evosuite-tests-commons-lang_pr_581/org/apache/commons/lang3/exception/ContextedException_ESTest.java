/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 09:33:08 GMT 2025
 */

package org.apache.commons.lang3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import java.util.Set;
import org.apache.commons.lang3.exception.ContextedException;
import org.apache.commons.lang3.exception.ContextedRuntimeException;
import org.apache.commons.lang3.exception.ExceptionContext;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ContextedException_ESTest extends ContextedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      String string0 = contextedException0.getRawMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("HoQ5YX3aO9;\"Al;g");
      String string0 = contextedException0.getMessage();
      assertEquals("HoQ5YX3aO9;\"Al;g", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("org.apache.commons.lang3.exception.ContextedException");
      String string0 = contextedException0.getFormattedExceptionMessage("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("HoQ5YX3aO9;\"Al;g");
      ContextedException contextedException1 = contextedException0.setContextValue("HoQ5YX3aO9;\"Al;g", "org.apache.commons.lang3.exception.ContextedException");
      Object object0 = contextedException1.getFirstContextValue("HoQ5YX3aO9;\"Al;g");
      assertEquals("org.apache.commons.lang3.exception.ContextedException", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("^8MS?3>m*'c9%^?,)", (Throwable) null);
      ContextedException contextedException1 = contextedException0.addContextValue("", "^8MS?3>m*'c9%^?,)");
      List<Object> list0 = contextedException1.getContextValues("");
      assertFalse(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("^8MS?3>m*'c9%^?,)", (Throwable) null);
      ContextedException contextedException1 = contextedException0.addContextValue("", "^8MS?3>m*'c9%^?,)");
      Set<String> set0 = contextedException1.getContextLabels();
      assertTrue(set0.contains(""));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("HoQ5YX3aO9;\"Al;g");
      contextedException0.setContextValue("HoQ5YX3aO9;\"Al;g", "org.apache.commons.lang3.exception.ContextedException");
      List<Pair<String, Object>> list0 = contextedException0.getContextEntries();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("^8MS?3>m*'c9%^?,)", (Throwable) null);
      String string0 = contextedException0.getFormattedExceptionMessage("^8MS?3>m*'c9%^?,)");
      assertEquals("^8MS?3>m*'c9%^?,)", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException(")6+3u$j");
      ContextedException contextedException0 = new ContextedException(")6+3u$j", contextedRuntimeException0, contextedRuntimeException0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      List<Object> list0 = contextedException0.getContextValues((String) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException((Throwable) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("");
      String string0 = contextedException0.getRawMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      List<Pair<String, Object>> list0 = contextedException0.getContextEntries();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextedRuntimeException contextedRuntimeException0 = new ContextedRuntimeException();
      MockThrowable mockThrowable0 = new MockThrowable("Q^ab4D02>S~", contextedRuntimeException0);
      ContextedException contextedException0 = new ContextedException(")6+3u$j", mockThrowable0, (ExceptionContext) null);
      Object object0 = new Object();
      ContextedException contextedException1 = contextedException0.addContextValue("", object0);
      assertSame(contextedException0, contextedException1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      Set<String> set0 = contextedException0.getContextLabels();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      Object object0 = contextedException0.getFirstContextValue("]\n");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException("^8MS?3>m*'c9%^?,)", (Throwable) null);
      String string0 = contextedException0.getRawMessage();
      assertEquals("^8MS?3>m*'c9%^?,)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContextedException contextedException0 = new ContextedException();
      String string0 = contextedException0.getMessage();
      assertEquals("", string0);
  }
}
