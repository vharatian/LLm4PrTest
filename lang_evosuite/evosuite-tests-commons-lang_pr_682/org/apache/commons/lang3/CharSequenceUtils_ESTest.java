/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 07:49:00 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.lang3.CharSequenceUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CharSequenceUtils_ESTest extends CharSequenceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 0, charBuffer0, 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = CharSequenceUtils.regionMatches("v", false, (-2313), "v", 28, 1161);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("F.{YVq}drpM[5da");
      Object object0 = new Object();
      stringBuilder0.append(object0);
      stringBuilder0.append('e');
      char[] charArray0 = CharSequenceUtils.toCharArray(stringBuilder0);
      StringBuilder stringBuilder1 = stringBuilder0.insert(16, 100.0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder1, charBuffer0, 29);
      assertEquals((-1), int0);
      assertEquals(41, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("v");
      int int0 = CharSequenceUtils.lastIndexOf("0vv0", stringBuilder0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer0, 16);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = CharSequenceUtils.lastIndexOf("', !as a aengtZ less than 2", charBuffer0, 5);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = CharSequenceUtils.lastIndexOf("v", "", 577);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(1);
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(1);
      stringBuilder1.append((-1.0F));
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder1, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(5);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 5, 5);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, 65536, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1360);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 1114111, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = CharSequenceUtils.lastIndexOf("0vv0", 10, 452);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(13);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, stringBuffer0, 872);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, stringBuilder0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("F.{YVq}drpM[5da");
      StringBuilder stringBuilder1 = new StringBuilder();
      int int0 = CharSequenceUtils.indexOf(stringBuilder1, stringBuilder0, 16);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+*du@h wnIs[");
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(65536);
      stringBuffer1.reverse();
      int int0 = CharSequenceUtils.indexOf(stringBuffer0, 65568, (-3201));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(562);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 1114111, 562);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(0);
      stringBuilder0.append(1.0);
      stringBuilder0.reverse();
      int int0 = CharSequenceUtils.indexOf(stringBuilder1, 0, (-1102));
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("v");
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, 117, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 861, 21);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = CharSequenceUtils.indexOf("org.apache.commons.lang3.CharSequenceUtils", (-2786), (-3016));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      CharSequence charSequence0 = CharSequenceUtils.subSequence(stringBuilder0, 0);
      assertEquals("", charSequence0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("v");
      CharSequence charSequence0 = CharSequenceUtils.subSequence(stringBuilder0, 0);
      assertEquals("v", charSequence0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 0, 1114111);
      assertEquals(1114110, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(1361);
      int int0 = CharSequenceUtils.indexOf("v", stringBuilder0, 1361);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      // Undeclared exception!
      CharSequenceUtils.toCharArray(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      // Undeclared exception!
      try { 
        CharSequenceUtils.subSequence(charBuffer0, 2796);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114022);
      // Undeclared exception!
      CharSequenceUtils.regionMatches(charBuffer0, true, 10, charBuffer0, 10, 65536);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches((CharSequence) null, true, 25, (CharSequence) null, 25, 25);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      // Undeclared exception!
      CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer0, 1114111);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf((CharSequence) null, (CharSequence) null, 493);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      // Undeclared exception!
      CharSequenceUtils.lastIndexOf(charBuffer0, 1114111, 65536);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf((CharSequence) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65551);
      // Undeclared exception!
      CharSequenceUtils.indexOf(charBuffer0, 65551, (-1));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf((CharSequence) null, 7, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("F{YVq}drpM[5da");
      Object object0 = new Object();
      stringBuilder0.append(object0);
      StringBuilder stringBuilder1 = stringBuilder0.append('e');
      stringBuilder0.append('E');
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      StringBuilder stringBuilder2 = stringBuilder0.insert(13, charArray0);
      StringBuilder stringBuilder3 = stringBuilder1.append((CharSequence) stringBuilder2);
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder3, true, 41, stringBuilder3, 13, 41);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("\"+Udu@C <nIs[");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder1, false, 6, "\"+Udu@C <nIs[", 6, 6);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(548);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 1, charBuffer0, 548, 16);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 0, charBuffer0, 0, (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 1728, charBuffer0, (-1), 9980);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+*du@h wnIs[");
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuffer0, true, (-1), stringBuffer0, (-937), 65536);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = CharSequenceUtils.regionMatches("([y#:PI~$", true, 2, "\"+*du@h wnIs[", 2, (-2385));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("\"+Udu@C <nIs[");
      boolean boolean0 = CharSequenceUtils.regionMatches("\"+Udu@C <nIs[", true, 3, stringBuilder0, 3, 3);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("F.{YVq}drpM[5da");
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder0, true, 29, stringBuilder0, 13, 13);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = CharSequenceUtils.toCharArray("F.{YVq}drpM[5da");
      assertEquals(15, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      char[] charArray0 = CharSequenceUtils.toCharArray(stringBuilder0);
      assertArrayEquals(new char[] {}, charArray0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      StringBuilder stringBuilder0 = new StringBuilder(charBuffer0);
      stringBuilder0.insert(1728, true);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, charBuffer0, 1843);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("\"+Udu@C <nIs[");
      stringBuilder0.append((-1591.0));
      StringBuffer stringBuffer0 = new StringBuffer("\"+Udu@C <nIs[");
      stringBuffer0.append(1545);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, stringBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+*du@h wnIs[");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer0, stringBuffer0, 16);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("v");
      StringBuilder stringBuilder1 = new StringBuilder();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, stringBuilder1, 1860);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(1098);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer0, charBuffer0, 1098);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, stringBuilder0, (-2986));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(256);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, "\"+Udu@C <nIs[", 256);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("\"Y+*du@h wnIs[");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, "\"Y+*du@h wnIs[", 91);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+*du@h w<nIs[");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer0, "\"+*du@h w<nIs[", 28);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("F.{YVq}drpM[5da");
      char[] charArray0 = CharSequenceUtils.toCharArray(stringBuilder0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, charBuffer0, 29);
      assertEquals(15, charArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+Ud&u@C <nIs[");
      stringBuffer0.appendCodePoint(65536);
      StringBuffer stringBuffer1 = stringBuffer0.reverse();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer1, 65536, 10);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+Udu@C <nI");
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(65551);
      stringBuffer0.reverse();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer1, 65536, 10);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114128);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 1114128, 1114128);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("F.{YVq}drpM[5da");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, 2511, (-2016));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf((CharSequence) null, (CharSequence) null, 65536);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(4118);
      int int0 = CharSequenceUtils.indexOf(stringBuffer0, charBuffer0, 4118);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+Ud&u@C <nIs[");
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(65536);
      int int0 = CharSequenceUtils.indexOf(stringBuffer1, 65536, (-1));
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("\"+*du@h wnIs[");
      StringBuffer stringBuffer1 = stringBuffer0.appendCodePoint(65542);
      int int0 = CharSequenceUtils.indexOf(stringBuffer1, 65536, (-2194));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(548);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 548, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CharSequence charSequence0 = CharSequenceUtils.subSequence((CharSequence) null, 430);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        CharSequenceUtils.subSequence(stringBuffer0, 4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CharSequenceUtils charSequenceUtils0 = new CharSequenceUtils();
  }
}
