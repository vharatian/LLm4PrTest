/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 10:50:52 GMT 2025
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle;
import org.apache.commons.lang3.builder.RecursiveToStringStyle;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(746);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "nz`nJ=0iwEe^C:+6?&", (long) 746);
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("nz`nJ=0iwEe^C:+6?&=746\n  ", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(1);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendSummarySize(stringBuffer0, ",", 1);
      assertEquals(8, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("&)F=kv7okq<O]/");
      boolean[] booleanArray0 = new boolean[4];
      toStringStyle0.appendSummary(stringBuffer0, "LaunchTime", booleanArray0);
      assertEquals(22, stringBuffer0.length());
      assertEquals("&)F=kv7okq<O]/<size=4>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(749);
      short[] shortArray0 = new short[1];
      toStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "", shortArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=1>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[9];
      standardToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "\" should have a parent context.", longArray0);
      assertEquals(8, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[0];
      standardToStringStyle0.NO_CLASS_NAME_STYLE.appendSummary(stringBuffer0, "r*1D", intArray0);
      assertEquals(8, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      float[] floatArray0 = new float[6];
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "", floatArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=6>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[9];
      toStringStyle0.appendSummary(stringBuffer0, ",", charArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<size=9>", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      byte[] byteArray0 = new byte[7];
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, "?hJ@)I&t", byteArray0);
      assertEquals(8, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(15);
      Boolean boolean0 = Boolean.TRUE;
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendSummary(stringBuffer0, (String) null, boolean0);
      assertEquals(9, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("BK#NA");
      toStringStyle0.appendNullText(stringBuffer0, "bG;sro5Azv)|J?UytJ");
      assertEquals(12, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendIdentityHashCode(stringBuffer0, (Object) null);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("V<(cVTZ");
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendFieldStart(stringBuffer0, "");
      assertEquals("V<(cVTZ=", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(413);
      toStringStyle0.appendFieldSeparator(stringBuffer0);
      assertEquals(3, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(8);
      toStringStyle0.SHORT_PREFIX_STYLE.appendFieldEnd(stringBuffer0, "Y'%f@!!8Xrxu3|e$eC|");
      assertEquals(",", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[0];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "\u00A5", booleanArray0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("{\n    \n  }", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[1];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, (String) null, shortArray0);
      assertEquals(11, stringBuffer0.length());
      assertEquals("{\n    0\n  }", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      long[] longArray0 = new long[2];
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("\"");
      standardToStringStyle0.appendDetail(stringBuffer0, "\"", longArray0);
      assertEquals(6, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      float[] floatArray0 = new float[3];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, (String) null, floatArray0);
      assertEquals("{\n    0.0,\n    0.0,\n    0.0\n  }", stringBuffer0.toString());
      assertEquals(31, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("\"<");
      double[] doubleArray0 = new double[0];
      toStringStyle0.appendDetail(stringBuffer0, "\"<", doubleArray0);
      assertEquals("\"<{}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[10];
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "\"", byteArray0);
      assertEquals("{\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  }", stringBuffer0.toString());
      assertEquals(74, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(1229);
      toStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "  ", (short)0);
      assertEquals(1, stringBuffer0.length());
      assertEquals("0", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "", hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      multilineRecursiveToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "r*1D", 0L);
      assertEquals("0", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("");
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "", (-2199));
      assertEquals(5, stringBuffer0.length());
      assertEquals("-2199", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "[\n      ", (byte) (-102));
      //  // Unstable assertion: assertEquals(6, stringBuffer0.length());
      //  // Unstable assertion: assertEquals("-102.0", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.appendDetail(stringBuffer0, "$fqSXj%9Wh+", 0L);
      //  // Unstable assertion: assertEquals("0.0", stringBuffer0.toString());
      //  // Unstable assertion: assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, (String) null, '/');
      assertEquals(4, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("U@vd}SVd4>(Mp=7`\"y");
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "3b]?.TKn", (byte) (-1));
      assertEquals("U@vd}SVd4>(Mp=7`\"y-1", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(",");
      recursiveToStringStyle0.appendCyclicObject(stringBuffer0, ",", boolean0);
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<size=");
      standardToStringStyle0.SIMPLE_STYLE.appendContentStart(stringBuffer0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.JSON_STYLE.appendContentEnd(stringBuffer0);
      toStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(1, stringBuffer0.length());
      assertEquals("}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ToStringStyle.unregister((Object) null);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.setUseIdentityHashCode(false);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setUseFieldNames(false);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setSummaryObjectStartText("\u00D9");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.setContentEnd("x--7zI^o':NYWgB8");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      toStringStyle0.SHORT_PREFIX_STYLE.setArrayEnd((String) null);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ToStringStyle.register((Object) null);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      toStringStyle0.setFieldSeparatorAtStart(true);
      StringBuffer stringBuffer0 = new StringBuffer(15);
      toStringStyle0.appendSuper(stringBuffer0, "_V @6tb]Z_).Qv+]U");
      assertEquals("_V @6tb]Z_).Qv+,", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_CLASS_NAME_STYLE.append(stringBuffer0, "L!]p'", false);
      assertEquals("L!]p'=false,", stringBuffer0.toString());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "6", 147.1F);
      assertEquals("147.1,", stringBuffer0.toString());
      assertEquals(6, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, (String) null, 'I');
      assertEquals(2, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      boolean boolean0 = toStringStyle0.isUseShortClassName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean boolean0 = recursiveToStringStyle0.isUseIdentityHashCode();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      boolean boolean0 = toStringStyle0.isUseIdentityHashCode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean boolean0 = recursiveToStringStyle0.isUseClassName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseClassName();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      boolean boolean0 = ToStringStyle.isRegistered((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      boolean boolean1 = multilineRecursiveToStringStyle0.isFullDetail(boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      Boolean boolean0 = Boolean.FALSE;
      boolean boolean1 = toStringStyle0.isFullDetail(boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtStart();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtStart();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      
      standardToStringStyle0.setFieldSeparatorAtEnd(true);
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertTrue(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      boolean boolean0 = toStringStyle0.isFieldSeparatorAtEnd();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      boolean boolean0 = recursiveToStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      
      standardToStringStyle0.setDefaultFullDetail(false);
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertFalse(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertTrue(boolean0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      toStringStyle0.setArrayContentDetail(false);
      boolean boolean0 = toStringStyle0.isArrayContentDetail();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", string0);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getSummaryObjectEndText();
      assertEquals(">", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getSizeStartText();
      assertEquals("<size=", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      standardToStringStyle0.setSizeStartText("");
      standardToStringStyle0.getSizeStartText();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Class<Integer> class0 = Integer.class;
      standardToStringStyle0.getShortClassName(class0);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      
      standardToStringStyle0.setNullText("");
      standardToStringStyle0.getNullText();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getFieldSeparator();
      assertEquals(",\n  ", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      
      standardToStringStyle0.setFieldSeparator((String) null);
      standardToStringStyle0.getFieldSeparator();
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getContentStart();
      assertEquals("[\n  ", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getContentStart();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getContentEnd();
      assertEquals("\n]", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getContentEnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      String string0 = toStringStyle0.getArrayStart();
      assertEquals("{", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart((String) null);
      String string0 = standardToStringStyle0.getArrayStart();
      assertNotNull(string0);
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayEnd();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.removeLastFieldSeparator((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.reflectionAppendArrayDetail(stringBuffer0, "n", "n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendToString((StringBuffer) null, "[m]%}d9d5Fn3.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendToString(stringBuffer0, "\n]");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start 3, end 0, s.length() 2
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.appendSummarySize((StringBuffer) null, "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyleorg.apache.commons.lang3.builder.MultilineRecursiveToStringStyle@0000000001", (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.appendSummary(stringBuffer0, "{java.lang.StringBuffer@0000000004", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_CLASS_NAME_STYLE.appendSummary(stringBuffer0, "\"<", (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(5);
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendSummary(stringBuffer0, "sv[X#", (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.DEFAULT_STYLE.appendSummary(stringBuffer0, "DEm$ZCL3%x", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.appendSummary(stringBuffer0, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendStart((StringBuffer) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.appendNullText((StringBuffer) null, "q!3` 7Klq.,/+R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = new Boolean("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.appendIdentityHashCode((StringBuffer) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(14);
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.appendFieldStart(stringBuffer0, (String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendFieldStart((StringBuffer) null, ",srn3Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendFieldSeparator((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendFieldEnd((StringBuffer) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        toStringStyle0.appendEnd((StringBuffer) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\n    ]");
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "\n    ]", (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, (String) null, (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = (Object) stringBuffer0;
      objectArray0[4] = (Object) stringBuffer0;
      // Undeclared exception!
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "The validated character sequence is empty", objectArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail(stringBuffer0, (String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail(stringBuffer0, "e'Xb4", (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail(stringBuffer0, "fqSXj9>+", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "&curren;");
      // Undeclared exception!
      try { 
        toStringStyle0.appendDetail(stringBuffer0, "&middot;", (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        recursiveToStringStyle0.appendDetail((StringBuffer) null, "\"<size=", doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendDetail((StringBuffer) null, "m9", (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "L", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendDetail((StringBuffer) null, "org.junitpioneer.vintage.TimeoutExtension", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail((StringBuffer) null, "dCgnp/TADYj.L9bjGC", (short)72);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      // Undeclared exception!
      try { 
        toStringStyle0.SIMPLE_STYLE.appendDetail((StringBuffer) null, "o", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      // Undeclared exception!
      try { 
        standardToStringStyle0.SIMPLE_STYLE.appendDetail((StringBuffer) null, "{\n      ", linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, "X7@xy?.", object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendDetail((StringBuffer) null, "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", (-1142L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SIMPLE_STYLE.appendDetail((StringBuffer) null, "v}e8( YL", (-263));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.MULTI_LINE_STYLE.appendDetail((StringBuffer) null, "[m]%}d9d5Fn3.", 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.appendDetail((StringBuffer) null, (String) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.appendDetail((StringBuffer) null, "V`.YZ21C18\"}$p}|Ds", ';');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendDetail((StringBuffer) null, "{org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle@0000000001", (byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.appendCyclicObject(stringBuffer0, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Cannot get the toString of a null object
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendContentStart((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendContentEnd((StringBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Integer integer0 = new Integer(120);
      // Undeclared exception!
      try { 
        standardToStringStyle0.appendClassName((StringBuffer) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.append((StringBuffer) null, "&Uuml;", (boolean[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "{java.lang.StringBuffer@0000000006", (short[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = new Boolean(true);
      StringBuffer stringBuffer0 = new StringBuffer(3442);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) stringBuffer0;
      objectArray0[1] = (Object) stringBuffer0;
      // Undeclared exception!
      multilineRecursiveToStringStyle0.append(stringBuffer0, "'s4vm&*.aK$1aVWi", objectArray0, boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = new Boolean(true);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.append((StringBuffer) null, (String) null, objectArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, "R^'[!c-SF0", longArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "/2", (float[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "{org.apache.commons.lang3.builder.StandardToStringStyle@0000000001", doubleArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[0];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_CLASS_NAME_STYLE.append((StringBuffer) null, "[java.lang.StringBuffer@0000000002", charArray0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.append((StringBuffer) null, "adgZw^CLt<", (byte[]) null, (Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(59);
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (short)119);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.SHORT_PREFIX_STYLE.append((StringBuffer) null, "{org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle@0000000001", (short)529);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "R^'k[!c-SF0", (Object) "R^'k[!c-SF0", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Boolean boolean0 = Boolean.valueOf("[org.apache.commons.lang3.builder.StandardToStringStyle@0000000002");
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, "[org.apache.commons.lang3.builder.StandardToStringStyle@0000000002", (Object) linkedList0, boolean0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.ObjectUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (-1L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.SIMPLE_STYLE.append((StringBuffer) null, "P6qY6MU>e9zR0U#1Ww", 466L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 1784);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_CLASS_NAME_STYLE.append((StringBuffer) null, "<", 1815);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.append((StringBuffer) null, "&shy;", 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 3.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.append((StringBuffer) null, (String) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_CLASS_NAME_STYLE.append((StringBuffer) null, "", '8');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, (byte)116);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.DEFAULT_STYLE.append((StringBuffer) null, "&iacute;", (byte)99);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[7];
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "\u220B", booleanArray0, boolean0);
      assertEquals("\u220B={\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false\n  },\n  ", stringBuffer0.toString());
      assertEquals(87, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      StringBuffer stringBuffer0 = new StringBuffer();
      float[] floatArray0 = new float[2];
      multilineRecursiveToStringStyle0.append(stringBuffer0, (String) null, floatArray0, boolean0);
      assertEquals(26, stringBuffer0.length());
      assertEquals("{\n    0.0,\n    0.0\n  },\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.append(stringBuffer0, (String) null, (float[]) null, (Boolean) null);
      assertEquals(7, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[0];
      multilineRecursiveToStringStyle0.append(stringBuffer0, "hZ0Nj-", doubleArray0, (Boolean) null);
      assertEquals(21, stringBuffer0.length());
      assertEquals("hZ0Nj-={\n    \n  },\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.NO_CLASS_NAME_STYLE.append(stringBuffer0, "null", (char[]) null, boolean0);
      assertEquals("null=<null>,", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      short[] shortArray0 = new short[7];
      standardToStringStyle0.append(stringBuffer0, "", shortArray0, (Boolean) null);
      assertEquals("={0,0,0,0,0,0,0},", stringBuffer0.toString());
      assertEquals(17, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "\u2193", (int[]) null, boolean0);
      assertEquals("\u2193=<null>,\n  ", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      long[] longArray0 = new long[6];
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(true);
      standardToStringStyle0.append(stringBuffer0, "4?nO$", longArray0, boolean0);
      assertEquals("4?nO$={0,0,0,0,0,0},", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.setNullText("");
      Boolean.valueOf("J");
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      Boolean boolean0 = Boolean.FALSE;
      Boolean boolean1 = new Boolean(true);
      linkedList0.addFirst(boolean1);
      multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "J", (Collection<?>) linkedList0);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean2 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.NO_CLASS_NAME_STYLE.appendInternal(stringBuffer0, "mPklDuUDjWfTHP&$|", boolean2, true);
      assertEquals(41, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      toStringStyle0.appendEnd(stringBuffer0, linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.appendDetail(stringBuffer0, "", boolean0);
      assertEquals(4, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Integer integer0 = new Integer(16);
      Boolean boolean0 = Boolean.TRUE;
      toStringStyle0.append(stringBuffer0, "{java.lang.StringBuffer@0000000006", (Object) integer0, boolean0);
      assertEquals(40, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) 'T';
      toStringStyle0.appendDetail(stringBuffer0, "[org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle@0000000003", objectArray0);
      assertEquals(43, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "", (Object) null);
      assertEquals("null", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "R^'k[!c-SF0", (Object) stringBuffer0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf((String) null);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append((StringBuffer) null, (String) null, (Object) boolean0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Object object0 = new Object();
      toStringStyle0.append(stringBuffer0, "J2uP", object0, boolean0);
      assertEquals(37, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "^2uV2", (boolean[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, (boolean[]) null, (Boolean) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle");
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      float[] floatArray0 = new float[1];
      Boolean boolean0 = Boolean.valueOf("org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle");
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, "]", floatArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, (float[]) null, (Boolean) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[2];
      Boolean boolean0 = Boolean.valueOf("WeY+B4Ecc");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "WeY+B4Ecc", doubleArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, (double[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[2];
      Boolean boolean0 = new Boolean(true);
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "WeY+B4Ecc", doubleArray0, boolean0);
      assertEquals(22, stringBuffer0.length());
      assertEquals("\"WeY+B4Ecc\":[0.0,0.0],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(336);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[3];
      Boolean boolean0 = Boolean.valueOf("");
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "r*1D", charArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[3];
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, charArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.FALSE;
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[41];
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "", byteArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.valueOf(true);
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, byteArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[28];
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "\"", byteArray0, boolean0);
      assertEquals(63, stringBuffer0.length());
      assertEquals("\"\\\"\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[3];
      Boolean boolean0 = Boolean.valueOf("io");
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "io", shortArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      short[] shortArray0 = new short[7];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, shortArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle", (int[]) null, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, intArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[0];
      Boolean boolean0 = new Boolean("{java.lang.Object@0000000001");
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "N", longArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      long[] longArray0 = new long[3];
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, longArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      Object[] objectArray0 = new Object[5];
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        toStringStyle0.JSON_STYLE.append(stringBuffer0, "&upsilon;", objectArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[0];
      Boolean boolean0 = new Boolean((String) null);
      // Undeclared exception!
      try { 
        toStringStyle0.append(stringBuffer0, (String) null, objectArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.setSummaryObjectEndText((String) null);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.setSummaryObjectEndText("R^'[!c-SF0");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      
      standardToStringStyle0.setSummaryObjectStartText((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      standardToStringStyle0.setSizeEndText((String) null);
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      toStringStyle0.SIMPLE_STYLE.setSizeEndText("-%L2Hz");
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setSizeStartText((String) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.JSON_STYLE.setNullText((String) null);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      
      standardToStringStyle0.setFieldNameValueSeparator((String) null);
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.setFieldNameValueSeparator(",\n  ");
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd((String) null);
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.setContentStart((String) null);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setArraySeparator((String) null);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      multilineRecursiveToStringStyle0.JSON_STYLE.setArrayStart((String) null);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Object object0 = new Object();
      toStringStyle0.appendStart(stringBuffer0, object0);
      assertEquals(7, stringBuffer0.length());
      assertEquals("Object[", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendDetail(stringBuffer0, "\n    ]", (Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.RecursiveToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      toStringStyle0.NO_CLASS_NAME_STYLE.appendClassName(stringBuffer0, linkedList0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(319);
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      toStringStyle0.append(stringBuffer0, "*xD", booleanArray0, (Boolean) booleanArray0[0]);
      assertEquals(55, stringBuffer0.length());
      assertEquals("\"*xD\":[true,false,false,false,false,false,false,false],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, "2\u220B", (boolean[]) null, boolean0);
      assertEquals("2\u220B=<null>,", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean[] booleanArray0 = new boolean[1];
      Boolean boolean0 = Boolean.valueOf("");
      multilineRecursiveToStringStyle0.append(stringBuffer0, "", booleanArray0, boolean0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("=<size=1>,\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      float[] floatArray0 = new float[2];
      Boolean boolean0 = Boolean.valueOf("7jWU }L0+");
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "7jWU }L0+", floatArray0, boolean0);
      assertEquals(19, stringBuffer0.length());
      assertEquals("7jWU }L0+=<size=2>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.append(stringBuffer0, "\n}", (float[]) null, boolean0);
      assertEquals("\"\\n}\":null,", stringBuffer0.toString());
      assertEquals(11, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      double[] doubleArray0 = new double[2];
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "[java.lang.Object@0000000002org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle@0000000001", doubleArray0, boolean0);
      assertEquals(116, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "null", (double[]) null, boolean0);
      assertEquals("null=<null>,\n  ", stringBuffer0.toString());
      assertEquals(15, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      char[] charArray0 = new char[0];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "ZJC6OXY", charArray0, boolean0);
      assertEquals("{},", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "java.lang.Ob", (char[]) null, boolean0);
      assertEquals(20, stringBuffer0.length());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      byte[] byteArray0 = new byte[0];
      Boolean boolean0 = Boolean.valueOf("2\u220B");
      multilineRecursiveToStringStyle0.append(stringBuffer0, "2\u220B", byteArray0, boolean0);
      assertEquals("2\u220B=<size=0>,\n  ", stringBuffer0.toString());
      assertEquals(15, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = Boolean.TRUE;
      StringBuffer stringBuffer0 = new StringBuffer();
      multilineRecursiveToStringStyle0.append(stringBuffer0, "n", (byte[]) null, boolean0);
      assertEquals("n=<null>,\n  ", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.TRUE;
      byte[] byteArray0 = new byte[9];
      standardToStringStyle0.append(stringBuffer0, "&ograve;", byteArray0, boolean0);
      assertEquals(29, stringBuffer0.length());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      short[] shortArray0 = new short[0];
      multilineRecursiveToStringStyle0.append(stringBuffer0, "{U[=c.kzc@c|Z*D_H", shortArray0, boolean0);
      assertEquals(30, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.valueOf("/tJ=033c");
      multilineRecursiveToStringStyle0.append(stringBuffer0, "/tJ=033c", (short[]) null, boolean0);
      assertEquals("/tJ=033c=<null>,\n  ", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      short[] shortArray0 = new short[6];
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "", shortArray0, boolean0);
      assertEquals(17, stringBuffer0.length());
      assertEquals("\"\":[0,0,0,0,0,0],", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(";lb^#S+q%MbJ");
      Boolean boolean0 = Boolean.FALSE;
      int[] intArray0 = new int[4];
      toStringStyle0.append(stringBuffer0, "", intArray0, boolean0);
      assertEquals(";lb^#S+q%MbJ=<size=4>\n  ", stringBuffer0.toString());
      assertEquals(24, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle", (int[]) null, (Boolean) null);
      assertEquals("\"org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle\":null,", stringBuffer0.toString());
      assertEquals(74, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_FIELD_NAMES_STYLE.append((StringBuffer) null, "^'n(K./7'da(", intArray0, (Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      long[] longArray0 = new long[14];
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "", longArray0, boolean0);
      assertEquals("\"\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],", stringBuffer0.toString());
      assertEquals(33, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.valueOf("J");
      toStringStyle0.append(stringBuffer0, "", (long[]) null, boolean0);
      assertEquals("=<null>\n  ", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("&)F=kv7okq<O]/");
      boolean[] booleanArray0 = new boolean[4];
      Object[] objectArray0 = new Object[1];
      toStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "9cr*r'W0;c", objectArray0, (Boolean) booleanArray0[0]);
      assertEquals(23, stringBuffer0.length());
      assertEquals("&)F=kv7okq<O]/<size=1>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Boolean boolean0 = new Boolean(true);
      StringBuffer stringBuffer0 = new StringBuffer("&upsilon;");
      multilineRecursiveToStringStyle0.append(stringBuffer0, "&upsilon;", (Object[]) null, boolean0);
      assertEquals("&upsilon;&upsilon;=<null>,\n  ", stringBuffer0.toString());
      assertEquals(29, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Boolean boolean0 = Boolean.FALSE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "dU!", (Object) hashMap0, boolean0);
      assertEquals("dU!=<size=0>,\n  ", stringBuffer0.toString());
      assertEquals(16, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Object[] objectArray0 = new Object[3];
      objectArray0[1] = (Object) linkedList0;
      standardToStringStyle0.appendDetail(stringBuffer0, "^2uV2", objectArray0);
      //  // Unstable assertion: assertEquals(38, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      multilineRecursiveToStringStyle0.append(stringBuffer0, (String) null, (Object) linkedList0, boolean0);
      assertEquals("<size=0>,\n  ", stringBuffer0.toString());
      assertEquals(12, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Integer integer0 = new Integer((-1318));
      Object[] objectArray0 = new Object[4];
      objectArray0[1] = (Object) integer0;
      standardToStringStyle0.appendDetail(stringBuffer0, "\u201A", objectArray0);
      assertEquals("{<null>,-1318,<null>,<null>}", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, (String) null, (Object) null, boolean0);
      assertEquals("<null>,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.setFieldSeparator((String) null);
      toStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.NO_FIELD_NAMES_STYLE.appendStart(stringBuffer0, (Object) null);
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendToString(stringBuffer0, "L");
      assertEquals(2, stringBuffer0.length());
      assertEquals("L,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendToString(stringBuffer0, "/tJ=033c");
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("", stringBuffer0.toString());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(749);
      toStringStyle0.appendToString(stringBuffer0, "");
      assertEquals("", stringBuffer0.toString());
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.appendToString(stringBuffer0, (String) null);
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.appendInternal((StringBuffer) null, "[java.lang.Object@0000000006", (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        standardToStringStyle0.DEFAULT_STYLE.appendSummary(stringBuffer0, "[\n      ", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[0];
      multilineRecursiveToStringStyle0.appendSummary(stringBuffer0, "", doubleArray0);
      assertEquals("<size=0>", stringBuffer0.toString());
      assertEquals(8, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, (String) null, 'X');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      // Undeclared exception!
      try { 
        toStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "\u00C2", (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "2<96D8(ZCN6T");
      long[] longArray0 = new long[8];
      Boolean boolean0 = Boolean.valueOf("J");
      multilineRecursiveToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "=", longArray0, boolean0);
      assertEquals(23, stringBuffer0.length());
      assertEquals("2<96D8(ZCN6T==<size=8>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      toStringStyle0.DEFAULT_STYLE.setDefaultFullDetail(true);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.NO_FIELD_NAMES_STYLE.appendSummary(stringBuffer0, (String) null, (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<null>");
      standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "<null>", 27);
      assertEquals(18, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      Object object0 = new Object();
      toStringStyle0.appendStart(stringBuffer0, object0);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = object0;
      standardToStringStyle0.appendDetail(stringBuffer0, "/tJ=033c", objectArray0);
      assertEquals(42, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      // Undeclared exception!
      try { 
        standardToStringStyle0.NO_CLASS_NAME_STYLE.append((StringBuffer) null, "2'v6gz<ra-Z6'.i|r", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(1800);
      standardToStringStyle0.appendDetail(stringBuffer0, "swMRE3j@3-e", true);
      assertEquals("true", stringBuffer0.toString());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isUseShortClassName();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(boolean0);
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("]");
      Object[] objectArray0 = new Object[0];
      multilineRecursiveToStringStyle0.appendSummary(stringBuffer0, "H-Q", objectArray0);
      assertEquals("]<size=0>", stringBuffer0.toString());
      assertEquals(9, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("]");
      char[] charArray0 = new char[4];
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.append(stringBuffer0, "l81dQZ2L", charArray0, boolean0);
      assertEquals("]l81dQZ2L=<size=4>,", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.DEFAULT_STYLE.append(stringBuffer0, (String) null, (byte) (-121));
      assertEquals("-121,", stringBuffer0.toString());
      assertEquals(5, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.JSON_STYLE;
      String string0 = toStringStyle0.getArraySeparator();
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object object0 = new Object();
      Boolean boolean0 = Boolean.valueOf(false);
      multilineRecursiveToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "=", object0, boolean0);
      assertEquals("==<Object>,", stringBuffer0.toString());
      assertEquals(11, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "^2uV2", linkedList0);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      String string0 = multilineRecursiveToStringStyle0.getNullText();
      assertEquals("<null>", string0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      Object[] objectArray0 = new Object[17];
      objectArray0[4] = (Object) multilineRecursiveToStringStyle0;
      Boolean boolean0 = new Boolean(true);
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "&psilon;", objectArray0, boolean0);
      assertEquals(124, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.MULTI_LINE_STYLE.appendSummary(stringBuffer0, "26", (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getFieldNameValueSeparator();
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "}");
      // Undeclared exception!
      try { 
        standardToStringStyle0.SHORT_PREFIX_STYLE.appendSummary(stringBuffer0, "}", (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeEndText();
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(">", string0);
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_CLASS_NAME_STYLE.append(stringBuffer0, "j#+", 0.0);
      assertEquals(8, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      // Undeclared exception!
      try { 
        multilineRecursiveToStringStyle0.JSON_STYLE.append((StringBuffer) null, (String) null, (-545.67F));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Field names are mandatory when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      int[] intArray0 = new int[3];
      standardToStringStyle0.appendDetail(stringBuffer0, "Field names are mandatory when using JsonToStringStyle", intArray0);
      assertEquals("{0,0,0}", stringBuffer0.toString());
      assertEquals(7, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.JSON_STYLE.setUseClassName(true);
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.setUseShortClassName(false);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.append(stringBuffer0, "eD", (short)2199);
      assertEquals("eD=2199\n  ", stringBuffer0.toString());
      assertEquals(10, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      standardToStringStyle0.appendInternal(stringBuffer0, "Rj^", hashMap0, true);
      assertEquals("{}", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "2<96D8(ZCN6T");
      char[] charArray0 = new char[1];
      multilineRecursiveToStringStyle0.JSON_STYLE.appendDetail(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle", charArray0);
      assertEquals(22, stringBuffer0.length());
      assertEquals("2<96D8(ZCN6T[\"\\u0000\"]", stringBuffer0.toString());
  }
}
