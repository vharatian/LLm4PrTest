/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 11:58:53 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.CharUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CharUtils_ESTest extends CharUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('\u008E');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl(' ');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable(' ');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('\u0081');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = CharUtils.toString('\u0084');
      assertEquals("\u0084", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char char0 = CharUtils.toChar("", 'X');
      assertEquals('X', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = CharUtils.toIntValue((Character) null, (-370));
      assertEquals((-370), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('0');
      assertEquals('0', (char)character0);
      
      int int0 = CharUtils.toIntValue(character0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = CharUtils.toIntValue('%', 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = CharUtils.toIntValue('B', (-1575));
      assertEquals((-1575), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = CharUtils.toIntValue('0');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject("}{EAg!a{?\"[");
      assertEquals('}', (char)character0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject("79ku9{Yp?AfG((D7_");
      assertEquals('7', (char)character0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('n');
      assertEquals('n', (char)character0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char char0 = CharUtils.toChar("4y%sQI>T(1`1wX", ' ');
      assertEquals('4', char0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char char0 = CharUtils.toChar("06eHf^<W/tG");
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char char0 = CharUtils.toChar("Cgr$><g");
      assertEquals('C', char0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) null, '&');
      assertEquals('&', char0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('0');
      char char0 = CharUtils.toChar(character0);
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Character character0 = new Character('w');
      char char0 = CharUtils.toChar(character0);
      assertEquals('w', char0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = CharUtils.compare('^', '%');
      assertEquals(57, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = CharUtils.compare('\u0000', '\r');
      assertEquals((-13), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toIntValue((Character) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The character must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The String must not be empty
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The String must not be empty
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toChar((Character) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Character must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('4');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('P');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiNumeric('\r');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('~');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('j');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaLower('B');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('2');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('V');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphaUpper('g');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = CharUtils.toString(':');
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = CharUtils.toIntValue('5', (int) '5');
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharUtils.toIntValue('/');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character / is not in the range '0' - '9'
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = CharUtils.toIntValue('3');
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('9');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('\u0000');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlpha('|');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiAlphanumeric('y');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiControl('\r');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('\u008D');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      boolean boolean0 = CharUtils.isAsciiPrintable('\r');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('n');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      boolean boolean0 = CharUtils.isAscii('\u0080');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped((Character) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Character character0 = Character.valueOf('`');
      String string0 = CharUtils.unicodeEscaped(character0);
      assertNotNull(string0);
      assertEquals("\\u0060", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = CharUtils.toString((Character) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharUtils charUtils0 = new CharUtils();
      String string0 = CharUtils.toString((Character) charUtils0.NUL);
      assertNotNull(string0);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = CharUtils.toString('\u0080');
      assertEquals("\u0080", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = CharUtils.toIntValue((Character) null, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('8');
      int int0 = CharUtils.toIntValue(character0, 3);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Character character0 = Character.valueOf('5');
      int int0 = CharUtils.toIntValue(character0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char char0 = CharUtils.toChar("", '\r');
      assertEquals('\r', char0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) null, 'j');
      assertEquals('j', char0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Character character0 = Character.valueOf('1');
      char char0 = CharUtils.toChar(character0, '1');
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject((String) null);
      assertNull(character0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject("The character ");
      assertNotNull(character0);
      assertEquals('T', (char)character0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      char char0 = CharUtils.toChar((Character) '\r');
      assertEquals('\r', char0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = CharUtils.unicodeEscaped('?');
      assertEquals("\\u003f", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      char char0 = CharUtils.toChar("?");
      assertEquals('?', char0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Character character0 = CharUtils.toCharacterObject('?');
      assertEquals('?', (char)character0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = CharUtils.compare('|', '|');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CharUtils charUtils0 = new CharUtils();
      // Undeclared exception!
      try { 
        CharUtils.toIntValue((Character) charUtils0.CR);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The character \r is not in the range '0' - '9'
         //
         verifyException("org.apache.commons.lang3.CharUtils", e);
      }
  }
}
