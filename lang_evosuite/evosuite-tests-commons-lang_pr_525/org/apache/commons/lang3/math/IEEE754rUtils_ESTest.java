/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 12:09:59 GMT 2025
 */

package org.apache.commons.lang3.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.math.IEEE754rUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IEEE754rUtils_ESTest extends IEEE754rUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-1029.2867F), (-376.34555F), (-126.76F));
      assertEquals((-126.76F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = IEEE754rUtils.max(0.0, (-1408.94359197835), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = 1129.642F;
      floatArray0[1] = 1129.642F;
      floatArray0[2] = 1129.642F;
      floatArray0[3] = 1129.642F;
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(1129.642F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-376.0F);
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals((-376.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1129.642F;
      doubleArray0[1] = (double) 1129.642F;
      doubleArray0[2] = (double) 1129.642F;
      doubleArray0[3] = (double) 1129.642F;
      doubleArray0[4] = (double) 1129.642F;
      doubleArray0[5] = (double) 1129.642F;
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(1129.6419677734375, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[2] = (-4492.8462065404);
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals((-4492.8462065404), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      float float0 = IEEE754rUtils.min(0.0F, 0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float float0 = IEEE754rUtils.min(1.0F, 1.0F, 1.0F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      float float0 = IEEE754rUtils.min(630.7677F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      float float0 = IEEE754rUtils.min((-134.186F), 1602.21F);
      assertEquals((-134.186F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = IEEE754rUtils.min(0.0, 798.77018456827, 331.3818798822433);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) 1.0F, (double) (-134.186F), 987.7791035060209);
      assertEquals((-134.18600463867188), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = IEEE754rUtils.min(1.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = IEEE754rUtils.min(1.0, (-4492.8462065404));
      assertEquals((-4492.8462065404), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[7];
      floatArray0[0] = 1749.0311F;
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(1749.0311F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      float[] floatArray0 = new float[2];
      floatArray0[0] = (-718.733F);
      floatArray0[1] = (-3016.1F);
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals((-718.733F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1.0F;
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-4056.714523764287);
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals((-4056.714523764287), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      float float0 = IEEE754rUtils.max(0.0F, 0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      float float0 = IEEE754rUtils.max(0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      float float0 = IEEE754rUtils.max((-126.76F), (-126.76F));
      assertEquals((-126.76F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-4492.8462065404), (-4492.8462065404), (-4492.8462065404));
      assertEquals((-4492.8462065404), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = IEEE754rUtils.max(0.0, (double) (-1.0F));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = IEEE754rUtils.max((-134.18600463867188), 2093.7668147561);
      assertEquals(2093.7668147561, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.min((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        IEEE754rUtils.max((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The Array must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      float float0 = IEEE754rUtils.max(1.0F, 0.0F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = IEEE754rUtils.max((double) (-134.186F), (-640.2));
      assertEquals((-134.18600463867188), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      float float0 = IEEE754rUtils.min(1.0F, 80.01F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double double0 = IEEE754rUtils.min((double) 1129.642F, (double) 1129.642F);
      assertEquals(1129.6419677734375, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = IEEE754rUtils.max(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = IEEE754rUtils.max(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.max(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = IEEE754rUtils.min(floatArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      double double0 = IEEE754rUtils.min(doubleArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        IEEE754rUtils.min(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      float float0 = IEEE754rUtils.min((-333.6F), 1265.3792F, (-632.0F));
      assertEquals((-632.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double double0 = IEEE754rUtils.min(1533.76, 1129.6419677734375, (double) 1129.642F);
      assertEquals(1129.6419677734375, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double double0 = IEEE754rUtils.max((double) 0.0F, 1.0, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      float float0 = IEEE754rUtils.max(1129.642F, 1129.642F, 1129.642F);
      assertEquals(1129.642F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IEEE754rUtils iEEE754rUtils0 = new IEEE754rUtils();
  }
}
