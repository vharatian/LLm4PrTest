/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 03:16:47 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.apache.commons.lang3.ThreadUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ThreadUtils_ESTest extends ThreadUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(1L);
      Collection<Thread> collection0 = ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) threadUtils_ThreadIdPredicate0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      Thread thread0 = ThreadUtils.findThreadById(19L, threadGroup0);
      assertNotNull(thread0);
      assertEquals("system", threadGroup0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      Thread thread0 = ThreadUtils.findThreadById(15L, threadGroup0);
      assertNotNull(thread0);
      assertFalse(thread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Thread thread0 = ThreadUtils.findThreadById(1L, "main");
      assertFalse(thread0.isDaemon());
      assertNotNull(thread0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Thread thread0 = ThreadUtils.findThreadById(12L);
      assertNotNull(thread0);
      assertTrue(thread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Thread thread0 = ThreadUtils.findThreadById(1L);
      assertFalse(thread0.isDaemon());
      assertNotNull(thread0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName("WHl]AYu(%X >GYk`_.", (ThreadGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The group must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The thread name must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadsByName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The name must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreads(threadGroup0, false, (ThreadUtils.ThreadPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The predicate must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroupsByName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The name must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The predicate must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadGroups(threadGroup0, false, (ThreadUtils.ThreadGroupPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The predicate must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(1L, (ThreadGroup) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The thread group must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById((-1L), threadGroup0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById(1L, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The thread group name must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById((-4L), "=PLu]a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("main");
      ThreadUtils.findThreadGroups(threadGroup0, true, (ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      assertEquals("system", threadGroup0.getName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(22L);
      ThreadUtils.findThreads(threadGroup0, false, (ThreadUtils.ThreadPredicate) threadUtils_ThreadIdPredicate0);
      assertEquals("system", threadGroup0.getName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("@tw");
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreads(threadGroup0, true, (ThreadUtils.ThreadPredicate) threadUtils_NamePredicate0);
      assertEquals("system", threadGroup0.getName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = null;
      try {
        threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Collection<Thread> collection0 = ThreadUtils.findThreadsByName("RMI TCP Accept-5155");
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Thread thread0 = ThreadUtils.findThreadById(1026L);
      assertNull(thread0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreads((ThreadUtils.ThreadPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The predicate must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("vtw");
      Collection<ThreadGroup> collection0 = ThreadUtils.findThreadGroups((ThreadUtils.ThreadGroupPredicate) threadUtils_NamePredicate0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ThreadUtils.ThreadIdPredicate threadUtils_ThreadIdPredicate0 = new ThreadUtils.ThreadIdPredicate(22L);
      boolean boolean0 = threadUtils_ThreadIdPredicate0.test((Thread) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        ThreadUtils.findThreadById((-1077L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The thread id must be greater than zero
         //
         verifyException("org.apache.commons.lang3.ThreadUtils$ThreadIdPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("");
      boolean boolean0 = threadUtils_NamePredicate0.test((Thread) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ThreadUtils.NamePredicate threadUtils_NamePredicate0 = new ThreadUtils.NamePredicate("}|");
      boolean boolean0 = threadUtils_NamePredicate0.test((ThreadGroup) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Collection<Thread> collection0 = ThreadUtils.findThreadsByName("..<.'v-+", "Test_Execution_Grmup");
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Thread thread0 = ThreadUtils.findThreadById(10L, "main");
      assertTrue(thread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Thread thread0 = ThreadUtils.findThreadById(10L, "");
      assertNull(thread0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Thread thread0 = ThreadUtils.findThreadById(22L, "Test_Execution_Group");
      assertNull(thread0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      Thread thread0 = ThreadUtils.findThreadById(1L, threadGroup0);
      assertNull(thread0);
      assertEquals("system", threadGroup0.getName());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      Thread thread0 = ThreadUtils.findThreadById(1935L, threadGroup0);
      assertNull(thread0);
      assertEquals("system", threadGroup0.getName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Collection<ThreadGroup> collection0 = ThreadUtils.findThreadGroupsByName("CU3;2=_yHiR[p'B");
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Collection<Thread> collection0 = ThreadUtils.getAllThreads();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Collection<ThreadGroup> collection0 = ThreadUtils.getAllThreadGroups();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Collection<Thread> collection0 = ThreadUtils.findThreadsByName("Test_Execution_Grmup", "main");
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ThreadGroup threadGroup0 = ThreadUtils.getSystemThreadGroup();
      ThreadUtils.findThreadsByName("|=oDpNwo+ v7z>", threadGroup0);
      assertEquals("system", threadGroup0.getName());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ThreadUtils threadUtils0 = new ThreadUtils();
  }
}
