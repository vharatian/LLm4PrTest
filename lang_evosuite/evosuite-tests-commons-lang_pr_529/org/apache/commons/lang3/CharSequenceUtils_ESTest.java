/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 11:55:42 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.lang3.CharSequenceUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CharSequenceUtils_ESTest extends CharSequenceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1147);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 0, charBuffer0, 0, 1147);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1116);
      char[] charArray0 = new char[3];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 1, charBuffer1, 1, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 0, charBuffer0, 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = CharSequenceUtils.regionMatches("", true, (-948), "?", (-948), 4736);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '!';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 1, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'd';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 65558, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 1114111, 714);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 65536, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = CharSequenceUtils.lastIndexOf("S@ea:Ymvft8z\u0006K$Do3", 4419, 1141);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[2] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.get(charArray0);
      charBuffer0.flip();
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 1, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('k');
      charBuffer0.append('K');
      charBuffer0.rewind();
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 1391, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[3] = 'b';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 'b', 1);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 1168, 1756);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 65536, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(109);
      charBuffer0.append((CharSequence) charBuffer0);
      char[] charArray0 = CharSequenceUtils.toCharArray(charBuffer0);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharSequence charSequence0 = CharSequenceUtils.subSequence("8py&a&Nv4+", 0);
      assertEquals("8py&a&Nv4+", charSequence0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer1, 1305);
      assertEquals(1164, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 0, 1);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer1, charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'd';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 'd', 920);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1141);
      charBuffer0.put('z');
      CharBuffer charBuffer1 = CharBuffer.allocate(1141);
      int int0 = CharSequenceUtils.indexOf(charBuffer1, charBuffer0, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65546);
      // Undeclared exception!
      CharSequenceUtils.toCharArray(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.toCharArray((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2047);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.append('e');
      // Undeclared exception!
      try { 
        CharSequenceUtils.toCharArray(charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.subSequence("org.apache.commons.lang3.CharSequenceUtils", 65536);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      // Undeclared exception!
      try { 
        CharSequenceUtils.subSequence(charBuffer0, 1114111);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches((CharSequence) null, true, (-10), (CharSequence) null, (-10), (-10));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      char[] charArray0 = new char[6];
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.put(charArray0);
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer1, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf((CharSequence) null, (CharSequence) null, 1130);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65528);
      // Undeclared exception!
      CharSequenceUtils.lastIndexOf(charBuffer0, 65528, 65528);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf((CharSequence) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1042);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.append((CharSequence) charBuffer1);
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf(charBuffer1, 0, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf(charBuffer0, (-2694), 1170);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Character", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(109);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.append((CharSequence) charBuffer1);
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf(charBuffer0, charBuffer1, 109);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf((CharSequence) null, (CharSequence) null, 1152);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf((CharSequence) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 11, 1170);
      charBuffer0.append((CharSequence) charBuffer1);
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf(charBuffer1, 11, 1143);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf(charBuffer0, (-320), (-320));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Character", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('k');
      CharBuffer charBuffer1 = charBuffer0.append('K');
      CharBuffer charBuffer2 = charBuffer0.append('k');
      charBuffer0.rewind();
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer2, true, 0, charBuffer1, 1, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('}');
      CharBuffer charBuffer1 = charBuffer0.append('}');
      charBuffer1.clear();
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 0, charBuffer1, 1, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('k');
      CharBuffer charBuffer1 = charBuffer0.append('K');
      charBuffer0.rewind();
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, true, 0, charBuffer1, 1, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, true, 15, charBuffer0, 1170, 15);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1127);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, true, 1127, charBuffer0, 1127, (-1248));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1129);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 1129, charBuffer0, (-664), 1129);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, true, (-6), charBuffer0, 1170, (-6));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      boolean boolean0 = CharSequenceUtils.regionMatches("", true, 65536, charBuffer0, 65536, 65536);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = CharSequenceUtils.regionMatches("8py&a&Nv4+", true, 1177, "8py&a&Nv4+", 65536, 65536);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = CharSequenceUtils.toCharArray("sn<");
      assertEquals(3, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114136);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 1114136, 1114136);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1042);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1170);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, (-575), (-575));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114131);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 1114131, (-9));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1185);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1114111);
      // Undeclared exception!
      CharSequenceUtils.indexOf(charBuffer0, 1114111, (-1));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = CharSequenceUtils.indexOf("8py&a&Nv4+", 1177, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CharSequence charSequence0 = CharSequenceUtils.subSequence((CharSequence) null, 30);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CharSequenceUtils charSequenceUtils0 = new CharSequenceUtils();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1141);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer0, 861);
      assertEquals(0, int0);
  }
}
