/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 06:02:41 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import org.apache.commons.lang3.RegExUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RegExUtils_ESTest extends RegExUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = RegExUtils.replacePattern((String) null, "TbOTi<rRM_M?f", "uzQML]h-';");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = RegExUtils.replaceFirst("", pattern0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = RegExUtils.replaceFirst("", "", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = RegExUtils.replaceAll("", pattern0, "]J,=TegI");
      assertEquals("]J,=TegI", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = RegExUtils.replaceAll("", (Pattern) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = RegExUtils.replaceAll("uzQML]h-';", "", "");
      assertEquals("uzQML]h-';", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = RegExUtils.removePattern((String) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = RegExUtils.removePattern("dojJesN$!?TcD6MFM", "dojJesN$!?TcD6MFM");
      assertEquals("dojJesN$!?TcD6MFM", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = RegExUtils.removeFirst("`sx", pattern0);
      assertEquals("`sx", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = RegExUtils.removeFirst("!]p7*x!n#p", "");
      assertEquals("!]p7*x!n#p", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("org.apache.commons.lang3.RegExUtils");
      String string0 = RegExUtils.removeAll("org.apache.commons.lang3.RegExUtils", pattern0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = RegExUtils.removeAll("uzQML]h-';", "");
      assertEquals("uzQML]h-';", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = RegExUtils.removeAll("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.replacePattern("5", "Fo(CXQkSeX}vF", "");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 13
         // Fo(CXQkSeX}vF
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.replacePattern("", "", "2Y$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference: group index is missing
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      // Undeclared exception!
      try { 
        RegExUtils.replaceFirst("", pattern0, "$a<WUje]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.replaceFirst("hjH`J{5Aw4l", "AMKH:kcN~Ym0[;f^", "Cannot clone Cloneable type ");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 15
         // AMKH:kcN~Ym0[;f^
         //                ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.replaceFirst("", "", "CyXyk$Qnm]'!MJ6~>A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.replaceAll("0X~m;W)", "0X~m;W)", "");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 5
         // 0X~m;W)
         //      ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.removePattern("DJ6#Obpm*`z%PSRsoI-", "*mQg:");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '*' near index 0
         // *mQg:
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.removeFirst("zr*GA7k!", "0=-I\"aD<{b(rQ,U");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Illegal repetition near index 7
         // 0=-I\"aD<{b(rQ,U
         //        ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        RegExUtils.removeAll("V", "tm|!Hs.)e{eLq");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 6
         // tm|!Hs.)e{eLq
         //       ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = RegExUtils.replacePattern("", (String) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = RegExUtils.replacePattern("AMKH:kcN~Ym0[;f^", "", "AMKH:kcN~Ym0[;f^");
      assertEquals("AMKH:kcN~Ym0[;f^AAMKH:kcN~Ym0[;f^MAMKH:kcN~Ym0[;f^KAMKH:kcN~Ym0[;f^HAMKH:kcN~Ym0[;f^:AMKH:kcN~Ym0[;f^kAMKH:kcN~Ym0[;f^cAMKH:kcN~Ym0[;f^NAMKH:kcN~Ym0[;f^~AMKH:kcN~Ym0[;f^YAMKH:kcN~Ym0[;f^mAMKH:kcN~Ym0[;f^0AMKH:kcN~Ym0[;f^[AMKH:kcN~Ym0[;f^;AMKH:kcN~Ym0[;f^fAMKH:kcN~Ym0[;f^^AMKH:kcN~Ym0[;f^", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = RegExUtils.replaceFirst("!u6`bx;iz}~T\"", (String) null, "");
      assertEquals("!u6`bx;iz}~T\"", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = RegExUtils.replaceFirst((String) null, "", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("yG).~meO3eB|g6?lqj", 855);
      String string0 = RegExUtils.replaceFirst("}+~|o*4:+C", pattern0, "Zz.WV");
      assertEquals("}+~|o*4:+C", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = RegExUtils.replaceFirst((String) null, pattern0, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = RegExUtils.replaceAll((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      // Undeclared exception!
      try { 
        RegExUtils.replaceAll("", pattern0, "./n-x`1>$kC=E!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 2);
      String string0 = RegExUtils.replaceAll((String) null, pattern0, "Az(s,:3d,");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = RegExUtils.removePattern("B}2Brzp", "B}2Brzp");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = RegExUtils.replaceFirst("(mQ", "qB", (String) null);
      assertNotNull(string0);
      assertEquals("(mQ", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = RegExUtils.removeFirst("", (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", (-4302));
      String string0 = RegExUtils.replaceFirst("i/L#lV{%E\"F4", pattern0, (String) null);
      assertEquals("i/L#lV{%E\"F4", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = RegExUtils.replaceFirst("*mQg:", (Pattern) null, "*mQg:");
      assertEquals("*mQg:", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 2);
      String string0 = RegExUtils.removeFirst((String) null, pattern0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = RegExUtils.replaceAll("", "", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("B8>Ih]/*Ce'#v)SU", (-967));
      String string0 = RegExUtils.removeAll("\u0007vz", pattern0);
      assertEquals("\u0007vz", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = RegExUtils.removeAll((String) null, "_9|(org.apache.commons.lang3.ObjectUtils$Null");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegExUtils regExUtils0 = new RegExUtils();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("yG).~meO3eB|g6?lqj", 855);
      String string0 = RegExUtils.removeAll((String) null, pattern0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("yG).~meO3eB|g6?lqj", 855);
      String string0 = RegExUtils.removeFirst("", pattern0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = RegExUtils.removeFirst((String) null, (String) null);
      assertNull(string0);
  }
}
