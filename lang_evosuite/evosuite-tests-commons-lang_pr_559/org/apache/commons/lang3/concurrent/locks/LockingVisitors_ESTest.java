/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 24 09:52:17 GMT 2025
 */

package org.apache.commons.lang3.concurrent.locks;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import org.apache.commons.lang3.concurrent.locks.LockingVisitors;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class LockingVisitors_ESTest extends LockingVisitors_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        LockingVisitors.stampedLockVisitor((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(0);
      LockingVisitors.StampedLockVisitor<Integer> lockingVisitors_StampedLockVisitor0 = new LockingVisitors.StampedLockVisitor<Integer>(integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(848);
      ReentrantReadWriteLock reentrantReadWriteLock0 = new ReentrantReadWriteLock();
      LockingVisitors.ReadWriteLockVisitor<Integer> lockingVisitors_ReadWriteLockVisitor0 = new LockingVisitors.ReadWriteLockVisitor<Integer>(integer0, reentrantReadWriteLock0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LockingVisitors lockingVisitors0 = new LockingVisitors();
      LockingVisitors.StampedLockVisitor<Object> lockingVisitors_StampedLockVisitor0 = LockingVisitors.stampedLockVisitor((Object) lockingVisitors0);
      assertNotNull(lockingVisitors_StampedLockVisitor0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      LockingVisitors.ReadWriteLockVisitor<Object> lockingVisitors_ReadWriteLockVisitor0 = LockingVisitors.reentrantReadWriteLockVisitor(object0);
      assertNotNull(lockingVisitors_ReadWriteLockVisitor0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        LockingVisitors.reentrantReadWriteLockVisitor((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("java.util.Objects", e);
      }
  }
}
