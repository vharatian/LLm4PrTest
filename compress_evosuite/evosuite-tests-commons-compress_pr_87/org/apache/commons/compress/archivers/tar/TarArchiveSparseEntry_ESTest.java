/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 07:57:21 GMT 2025
 */

package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry;
import org.apache.commons.compress.archivers.tar.TarArchiveStructSparse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class TarArchiveSparseEntry_ESTest extends TarArchiveSparseEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TarArchiveSparseEntry tarArchiveSparseEntry0 = null;
      try {
        tarArchiveSparseEntry0 = new TarArchiveSparseEntry((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte)82;
      TarArchiveSparseEntry tarArchiveSparseEntry0 = null;
      try {
        tarArchiveSparseEntry0 = new TarArchiveSparseEntry(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid byte 82 at offset 0 in 'R{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}{NUL}' len=12
         //
         verifyException("org.apache.commons.compress.archivers.tar.TarUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)55;
      TarArchiveSparseEntry tarArchiveSparseEntry0 = null;
      try {
        tarArchiveSparseEntry0 = new TarArchiveSparseEntry(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[511];
      TarArchiveSparseEntry tarArchiveSparseEntry0 = new TarArchiveSparseEntry(byteArray0);
      List<TarArchiveStructSparse> list0 = tarArchiveSparseEntry0.getSparseHeaders();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[513];
      TarArchiveSparseEntry tarArchiveSparseEntry0 = new TarArchiveSparseEntry(byteArray0);
      boolean boolean0 = tarArchiveSparseEntry0.isExtended();
      assertFalse(boolean0);
  }
}
