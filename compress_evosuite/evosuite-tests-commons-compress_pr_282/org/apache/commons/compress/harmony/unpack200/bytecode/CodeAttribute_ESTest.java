/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 23:17:58 GMT 2025
 */

package org.apache.commons.compress.harmony.unpack200.bytecode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.util.LinkedList;
import java.util.List;
import java.util.jar.JarOutputStream;
import java.util.zip.ZipException;
import org.apache.commons.compress.harmony.unpack200.Segment;
import org.apache.commons.compress.harmony.unpack200.bytecode.Attribute;
import org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry;
import org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute;
import org.apache.commons.compress.harmony.unpack200.bytecode.ConstantValueAttribute;
import org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTableAttribute;
import org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTypeTableAttribute;
import org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeAttribute_ESTest extends CodeAttribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 0, byteArray0, segment0, (OperandManager) null, linkedList0);
      codeAttribute0.addAttribute((Attribute) null);
      CodeAttribute codeAttribute1 = new CodeAttribute(0, 2, byteArray0, segment0, (OperandManager) null, codeAttribute0.attributes);
      // Undeclared exception!
      try { 
        codeAttribute1.renumber(codeAttribute0.byteCodeOffsets);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      int[] intArray0 = new int[9];
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CPUTF8[] cPUTF8Array0 = new CPUTF8[3];
      CodeAttribute codeAttribute0 = new CodeAttribute(1184, 324, byteArray0, (Segment) null, operandManager0, linkedList0);
      LocalVariableTableAttribute localVariableTableAttribute0 = new LocalVariableTableAttribute(189, intArray0, intArray0, cPUTF8Array0, cPUTF8Array0, intArray0);
      linkedList0.add((Object) localVariableTableAttribute0);
      String string0 = codeAttribute0.toString();
      assertEquals(1184, codeAttribute0.maxStack);
      assertEquals("Code: 24 bytes", string0);
      assertEquals(324, codeAttribute0.maxLocals);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = new int[5];
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute((-13), (-2252), byteArray0, (Segment) null, operandManager0, linkedList0);
      CPUTF8[] cPUTF8Array0 = new CPUTF8[7];
      LocalVariableTypeTableAttribute localVariableTypeTableAttribute0 = new LocalVariableTypeTableAttribute((-1357), intArray0, (int[]) null, cPUTF8Array0, cPUTF8Array0, (int[]) null);
      codeAttribute0.addAttribute(localVariableTypeTableAttribute0);
      codeAttribute0.addAttribute(localVariableTypeTableAttribute0);
      String string0 = codeAttribute0.toString();
      assertEquals((-13), codeAttribute0.maxStack);
      assertEquals((-2252), codeAttribute0.maxLocals);
      assertEquals("Code: -27112 bytes", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-60);
      int[] intArray0 = new int[8];
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute((-1949), (-1949), byteArray0, (Segment) null, operandManager0, linkedList0);
      assertEquals(7, codeAttribute0.codeLength);
      assertEquals((-1949), codeAttribute0.maxStack);
      assertEquals((-1949), codeAttribute0.maxLocals);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      linkedList0.add((Object) null);
      ClassConstantPool classConstantPool0 = new ClassConstantPool();
      classConstantPool0.resolve(segment0);
      // Undeclared exception!
      try { 
        codeAttribute0.resolve(classConstantPool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      CPUTF8 cPUTF8_0 = new CPUTF8("R^,CzEqM^V.KG`y!4l");
      ConstantValueAttribute constantValueAttribute0 = new ConstantValueAttribute(cPUTF8_0);
      codeAttribute0.addAttribute(constantValueAttribute0);
      assertEquals(0, linkedList0.size());
      
      ClassConstantPool classConstantPool0 = new ClassConstantPool();
      classConstantPool0.resolve(segment0);
      codeAttribute0.resolve(classConstantPool0);
      assertEquals(2, codeAttribute0.maxLocals);
      assertEquals(6, codeAttribute0.codeLength);
      assertEquals(2, codeAttribute0.maxStack);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      linkedList0.add((Object) null);
      // Undeclared exception!
      try { 
        codeAttribute0.getNestedClassFileEntries();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      int int0 = codeAttribute0.getLength();
      assertEquals(2, codeAttribute0.maxLocals);
      assertEquals(18, int0);
      assertEquals(2, codeAttribute0.maxStack);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      JarOutputStream jarOutputStream0 = new JarOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(jarOutputStream0);
      try { 
        codeAttribute0.writeBody(dataOutputStream0);
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // no current ZIP entry
         //
         verifyException("java.util.zip.ZipOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) segment0);
      CodeAttribute codeAttribute0 = new CodeAttribute(0, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        codeAttribute0.writeBody(dataOutputStream0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.compress.harmony.unpack200.Segment cannot be cast to org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionTableEntry
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 1, byteArray0, (Segment) null, (OperandManager) null, linkedList0);
      try { 
        codeAttribute0.writeBody(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(1, 0, byteArray0, segment0, (OperandManager) null, linkedList0);
      ClassConstantPool classConstantPool0 = new ClassConstantPool();
      // Undeclared exception!
      try { 
        codeAttribute0.resolve(classConstantPool0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Constant pool is not yet resolved; this does not make any sense
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      linkedList0.add((Object) segment0);
      // Undeclared exception!
      try { 
        codeAttribute0.renumber(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.compress.harmony.unpack200.Segment cannot be cast to org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionTableEntry
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Segment segment0 = new Segment();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 1, byteArray0, segment0, (OperandManager) null, (List) null);
      // Undeclared exception!
      try { 
        codeAttribute0.getLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      int[] intArray0 = new int[1];
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      CodeAttribute codeAttribute0 = null;
      try {
        codeAttribute0 = new CodeAttribute(1, 2, (byte[]) null, segment0, operandManager0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-85);
      int[] intArray0 = new int[4];
      intArray0[0] = (int) (byte) (-1);
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = null;
      try {
        codeAttribute0 = new CodeAttribute((-2477), (-2477), byteArray0, (Segment) null, operandManager0, linkedList0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.forms.LookupSwitchForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-89);
      Segment segment0 = new Segment();
      int[] intArray0 = new int[7];
      intArray0[0] = 2;
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      LinkedList<LocalVariableTableAttribute> linkedList0 = new LinkedList<LocalVariableTableAttribute>();
      CodeAttribute codeAttribute0 = null;
      try {
        codeAttribute0 = new CodeAttribute(3477, 3477, byteArray0, segment0, operandManager0, linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-59);
      Segment segment0 = new Segment();
      int[] intArray0 = new int[0];
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      LinkedList<LocalVariableTableAttribute> linkedList0 = new LinkedList<LocalVariableTableAttribute>();
      CodeAttribute codeAttribute0 = null;
      try {
        codeAttribute0 = new CodeAttribute(85, 85, byteArray0, segment0, operandManager0, linkedList0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      codeAttribute0.renumber(linkedList0);
      assertEquals(2, codeAttribute0.maxStack);
      assertEquals(6, codeAttribute0.codeLength);
      assertEquals(2, codeAttribute0.maxLocals);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Segment segment0 = new Segment();
      LinkedList<LocalVariableTableAttribute> linkedList0 = new LinkedList<LocalVariableTableAttribute>();
      CodeAttribute codeAttribute0 = new CodeAttribute(0, (-2373), byteArray0, segment0, (OperandManager) null, linkedList0);
      int[] intArray0 = new int[1];
      CPUTF8[] cPUTF8Array0 = new CPUTF8[0];
      LocalVariableTableAttribute localVariableTableAttribute0 = new LocalVariableTableAttribute(0, intArray0, intArray0, cPUTF8Array0, cPUTF8Array0, intArray0);
      codeAttribute0.addAttribute(localVariableTableAttribute0);
      assertEquals(0, codeAttribute0.maxStack);
      assertEquals(1, codeAttribute0.codeLength);
      assertFalse(linkedList0.contains(localVariableTableAttribute0));
      assertEquals((-2373), codeAttribute0.maxLocals);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 0, byteArray0, segment0, (OperandManager) null, linkedList0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      codeAttribute0.addAttribute(codeAttribute0);
      // Undeclared exception!
      try { 
        codeAttribute0.writeBody(dataOutputStream0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Entry has not been resolved
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) null);
      CodeAttribute codeAttribute0 = new CodeAttribute(1, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        codeAttribute0.writeBody(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(1, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      linkedList0.add((Object) codeAttribute0);
      ClassConstantPool classConstantPool0 = new ClassConstantPool();
      classConstantPool0.resolve(segment0);
      // Undeclared exception!
      try { 
        codeAttribute0.resolve(classConstantPool0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute cannot be cast to org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionTableEntry
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ClassConstantPool classConstantPool0 = new ClassConstantPool();
      classConstantPool0.resolve(segment0);
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      codeAttribute0.resolve(classConstantPool0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Az");
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      codeAttribute0.writeBody(dataOutputStream0);
      assertEquals(6, codeAttribute0.codeLength);
      assertEquals(2, codeAttribute0.maxStack);
      assertEquals(2, codeAttribute0.maxLocals);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      linkedList0.add((Object) segment0);
      // Undeclared exception!
      try { 
        codeAttribute0.getNestedClassFileEntries();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.compress.harmony.unpack200.Segment cannot be cast to org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionTableEntry
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(2, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      assertEquals(0, linkedList0.size());
      
      ClassFileEntry[] classFileEntryArray0 = codeAttribute0.getNestedClassFileEntries();
      assertEquals(2, codeAttribute0.maxLocals);
      assertEquals(2, codeAttribute0.maxStack);
      assertEquals(7, classFileEntryArray0.length);
      assertEquals(6, codeAttribute0.codeLength);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-60);
      int[] intArray0 = new int[1];
      OperandManager operandManager0 = new OperandManager(intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0, intArray0);
      LinkedList<PushbackInputStream> linkedList0 = new LinkedList<PushbackInputStream>();
      CodeAttribute codeAttribute0 = new CodeAttribute(141, 141, byteArray0, (Segment) null, operandManager0, linkedList0);
      assertEquals(5, codeAttribute0.codeLength);
      assertEquals(0, linkedList0.size());
      assertEquals(141, codeAttribute0.maxLocals);
      assertEquals(141, codeAttribute0.maxStack);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CodeAttribute.setAttributeName((CPUTF8) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Segment segment0 = new Segment();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      CodeAttribute codeAttribute0 = new CodeAttribute(0, 2, byteArray0, segment0, (OperandManager) null, linkedList0);
      codeAttribute0.getStartPCs();
      assertEquals(0, linkedList0.size());
      assertEquals(2, codeAttribute0.maxLocals);
      assertEquals(0, codeAttribute0.maxStack);
      assertEquals(1, codeAttribute0.codeLength);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      Segment segment0 = new Segment();
      CodeAttribute codeAttribute0 = new CodeAttribute(0, 1, byteArray0, segment0, (OperandManager) null, (List) null);
      // Undeclared exception!
      try { 
        codeAttribute0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute", e);
      }
  }
}
