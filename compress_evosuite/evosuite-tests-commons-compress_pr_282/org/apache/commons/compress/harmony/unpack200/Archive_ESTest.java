/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 23:02:11 GMT 2025
 */

package org.apache.commons.compress.harmony.unpack200;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.jar.JarOutputStream;
import org.apache.commons.compress.harmony.unpack200.Archive;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Archive_ESTest extends Archive_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Archive archive0 = new Archive(byteArrayInputStream0, (JarOutputStream) null);
      archive0.setLogFile(",~Td<=D}f VeNOf ", false);
      Archive archive1 = new Archive(",~Td<=D}f VeNOf ", " is not visible to ");
      assertFalse(archive1.equals((Object)archive0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      // Undeclared exception!
      try { 
        archive0.unpack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.Archive", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = MockFile.createTempFile("0i-@Tg/FJMp4_", "TO+rkOPT(%Vtu");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      JarOutputStream jarOutputStream0 = new JarOutputStream(mockFileOutputStream0);
      Archive archive0 = new Archive((InputStream) null, jarOutputStream0);
      // Undeclared exception!
      try { 
        archive0.unpack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.Archive", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      // Undeclared exception!
      try { 
        archive0.setLogFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      try { 
        archive0.setLogFile("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Archive archive0 = null;
      try {
        archive0 = new Archive((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      archive0.setQuiet(true);
      archive0.setQuiet(false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Archive archive0 = new Archive(byteArrayInputStream0, (JarOutputStream) null);
      archive0.setVerbose(true);
      archive0.setVerbose(false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      archive0.setVerbose(false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      Archive archive0 = new Archive(dataInputStream0, (JarOutputStream) null);
      try { 
        archive0.setLogFile("", false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      archive0.setLogFile("C4t%rMz(]D+dv<7T}[H");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      archive0.setQuiet(false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JarOutputStream jarOutputStream0 = new JarOutputStream(pipedOutputStream0);
      Archive archive0 = new Archive(byteArrayInputStream0, jarOutputStream0);
      archive0.setRemovePackFile(true);
      try { 
        archive0.unpack();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to delete the input file.
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.Archive", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      JarOutputStream jarOutputStream0 = new JarOutputStream(dataOutputStream0);
      Archive archive0 = new Archive(pipedInputStream0, jarOutputStream0);
      try { 
        archive0.unpack();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JarOutputStream jarOutputStream0 = new JarOutputStream(pipedOutputStream0);
      Archive archive0 = new Archive(byteArrayInputStream0, jarOutputStream0);
      archive0.unpack();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Archive archive0 = null;
      try {
        archive0 = new Archive("0i-@Tg/FJMp4_", "0i-@Tg/FJMp4_");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Archive archive0 = new Archive((InputStream) null, (JarOutputStream) null);
      archive0.setDeflateHint(false);
  }
}
