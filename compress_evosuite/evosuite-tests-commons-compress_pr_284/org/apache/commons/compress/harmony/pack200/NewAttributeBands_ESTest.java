/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:32:31 GMT 2025
 */

package org.apache.commons.compress.harmony.pack200;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.apache.commons.compress.harmony.pack200.AttributeDefinitionBands;
import org.apache.commons.compress.harmony.pack200.CPUTF8;
import org.apache.commons.compress.harmony.pack200.CpBands;
import org.apache.commons.compress.harmony.pack200.IntList;
import org.apache.commons.compress.harmony.pack200.NewAttribute;
import org.apache.commons.compress.harmony.pack200.NewAttributeBands;
import org.apache.commons.compress.harmony.pack200.Segment;
import org.apache.commons.compress.harmony.pack200.SegmentHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class NewAttributeBands_ESTest extends NewAttributeBands_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("yf]eVd8=-?^XQ^Q", "''");
      NewAttributeBands.Integral newAttributeBands_Integral0 = newAttributeBands_Replication0.getCountElement();
      NewAttributeBands.Integral newAttributeBands_Integral1 = newAttributeBands0.new Integral("RCRSANe./~6tKj0jKm4", newAttributeBands_Integral0);
      assertEquals("yf]eVd8=-?^XQ^Q", newAttributeBands_Integral0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(3, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("I", "O");
      byteArrayInputStream0.skip(262144);
      newAttributeBands_Replication0.addAttributeToBand((NewAttribute) null, byteArrayInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("The FileFilter must not be null");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 3803, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(14, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("P6jSu\"K/Am\"}1oRy]&>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(59, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(59, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      assertEquals(59, newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-793));
      CPUTF8 cPUTF8_0 = new CPUTF8("#Ey");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(0, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(0, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      HashMap<NewAttributeBands.Reference, NewAttributeBands.Reference> hashMap0 = new HashMap<NewAttributeBands.Reference, NewAttributeBands.Reference>();
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("#Ey");
      newAttributeBands_Reference0.renumberBci((IntList) null, hashMap0);
      assertEquals("#Ey", newAttributeBands_Reference0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1069));
      CPUTF8 cPUTF8_0 = new CPUTF8("");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(0, 0, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1069), cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Integral newAttributeBands_Integral0 = newAttributeBands0.new Integral("-}n`k<8/");
      // Undeclared exception!
      try { 
        newAttributeBands_Integral0.latestValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("M}]Bg+[.g");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(100, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_UnionCase0.renumberBci((IntList) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$UnionCase", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("RSI");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2044, 51, cPUTF8_0, cPUTF8_0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(51, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("@)DR}C3");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst(newAttributeBands_Reference0);
      IntList intList0 = new IntList();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("b7uavA.{\"w>[BuC^QA", linkedList1, linkedList0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      newAttributeBands_Union0.renumberBci(intList0, hashMap0);
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = segment0.getCpBands();
      SegmentHeader segmentHeader0 = segment0.getSegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8(" bytes from cp_Descr_Type[");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2, 14, cPUTF8_0, cPUTF8_0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.offerFirst((Object) null);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-2643), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("8IqCm R`Q=lK!", linkedList0, linkedList1);
      MockFile mockFile0 = new MockFile("RC");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.pack(mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Union", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(50, (-2012), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-2012), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("{hD%Te&e", linkedList0, linkedList0);
      MockFile mockFile0 = new MockFile("vY6ZqGh r8NlT");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.pack(mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Union", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("6Xq5^");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2215, 74, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(2215, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttribute newAttribute0 = new NewAttribute("Signing Jar out: %s\nerr: %s", "Signing Jar out: %s\nerr: %s", 440);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("@", linkedList0, linkedList0);
      linkedList0.add((Object) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, pipedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Union", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("POhdc>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 14, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(14, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute("5Ou~gnaMF=6M", "?f0{#P>m?Ae;WN", 58);
      NewAttributeBands.Integral newAttributeBands_Integral0 = newAttributeBands0.new Integral("POQIi|");
      NewAttributeBands.Integral newAttributeBands_Integral1 = newAttributeBands0.new Integral("POQIi|", newAttributeBands_Integral0);
      // Undeclared exception!
      try { 
        newAttributeBands_Integral1.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(910, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0);
      linkedList0.offerFirst(newAttributeBands_UnionCase0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      IntList intList0 = new IntList();
      newAttributeBands_Callable0.renumberBci(intList0, hashMap0);
      assertFalse(newAttributeBands_Callable0.isBackwardsCallable());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Segment segment0 = new Segment();
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      CpBands cpBands0 = new CpBands(segment0, 262144);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(4, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("U#6J]78NH0|Cc/h'l##");
      // Undeclared exception!
      try { 
        newAttributeBands_Callable0.pack(mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Callable", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@1B3rX'\"y?6+!0\"SP*");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 1, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Call newAttributeBands_Call0 = newAttributeBands0.new Call(1);
      // Undeclared exception!
      try { 
        newAttributeBands_Call0.addAttributeToBand((NewAttribute) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Call", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      MockFile mockFile0 = new MockFile("I", "I");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      newAttributeBands0.pack(mockPrintStream0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(0, 100, cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-2349), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      int int0 = newAttributeBands0.getFlagIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-3383));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = cpBands0.getCPUtf8("cpMD+l");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(1132, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3383), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      int int0 = newAttributeBands0.getFlagIndex();
      assertEquals(1132, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Integral");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1858), 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1858), cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      String string0 = newAttributeBands0.getAttributeName();
      assertEquals("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Integral", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = cpBands0.getCPUtf8("RESj@J .J");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(262144);
      // Undeclared exception!
      try { 
        newAttributeBands0.pack(byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BandSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = cpBands0.getCPUtf8("RESj@J .J");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, (-1652), (CPUTF8) null, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(0, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      // Undeclared exception!
      try { 
        newAttributeBands0.getAttributeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("/iL;Q");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2637, 2637, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(75, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute("OS63X,EF\"x6_y$O&=", "OS63X,EF\"x6_y$O&=", 2637);
      // Undeclared exception!
      try { 
        newAttributeBands0.addAttribute(newAttribute0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 80);
      NewAttributeBands newAttributeBands0 = null;
      try {
        newAttributeBands0 = new NewAttributeBands(80, cpBands0, (SegmentHeader) null, (AttributeDefinitionBands.AttributeDefinition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("1_");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(1595, (-3065), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(0, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      newAttributeBands_Callable0.setBackwardsCallable();
      assertTrue(newAttributeBands_Callable0.isBackwardsCallable());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("KS");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(66, 1133, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("KS", linkedList0, linkedList0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("*w'_?m)K%\"#hbHR");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst("1# i'");
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(60, (-1), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1), (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_UnionCase0.renumberBci((IntList) null, hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.apache.commons.compress.harmony.pack200.NewAttributeBands$LayoutElement
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$UnionCase", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2215, (-28), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-28), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0);
      IntList intList0 = new IntList(66);
      newAttributeBands_UnionCase0.renumberBci(intList0, (Map) null);
      assertEquals(0, intList0.size());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("1# i'");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0, linkedList0);
      MockFile mockFile0 = new MockFile("1# i'");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        newAttributeBands_UnionCase0.pack(mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$UnionCase", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("POhdc>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 14, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(14, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0, linkedList0);
      NewAttribute newAttribute0 = new NewAttribute("POhdc>", "POhdc>", 14);
      // Undeclared exception!
      try { 
        newAttributeBands_UnionCase0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$UnionCase", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("1# i'");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 1133, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1133, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 262144);
      newAttributeBands_UnionCase0.addAttributeToBand((NewAttribute) null, pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, (-28), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-28), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      MockFile mockFile0 = new MockFile("SI");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      newAttributeBands_Callable0.pack(mockPrintStream0);
      assertFalse(newAttributeBands_Callable0.isBackwardsCallable());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("ANe./~6tKj0jKm4");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      NewAttribute newAttribute0 = new NewAttribute("ANe./~6tKj0jKm4", "^%R]E~6?wWx3t-JVI_1", 0);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 262144);
      // Undeclared exception!
      try { 
        newAttributeBands_Callable0.addAttributeToBand(newAttribute0, bufferedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Callable", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("PO bytes from cpClass[");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(67, 67, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      NewAttribute newAttribute0 = new NewAttribute("PO bytes from cpClass[", "PO bytes from cpClass[", 67);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      newAttributeBands_Callable0.addAttributeToBand(newAttribute0, pipedInputStream0);
      assertFalse(newAttribute0.isContextMethod());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1265), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("org.apache.commons.compress.harmony.pack200.NewAttribute$PassAttribute");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        newAttributeBands_Reference0.pack(byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BandSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("FI");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 80, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3593), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("MK");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        newAttributeBands_Reference0.addAttributeToBand((NewAttribute) null, byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 8, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3134), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("RSB");
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        newAttributeBands_Reference0.addAttributeToBand((NewAttribute) null, byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 2, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3125), (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute("n9@", "u", 262144);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("RCRESj@J .J");
      // Undeclared exception!
      try { 
        newAttributeBands_Reference0.addAttributeToBand(newAttribute0, byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("PO bytes from cpClass[");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 67, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(47, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("RU>E-N>AsPXjoTfB");
      NewAttribute newAttribute0 = new NewAttribute("{5Lh]U", "{5Lh]U", 2027);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      // Undeclared exception!
      try { 
        newAttributeBands_Reference0.addAttributeToBand(newAttribute0, byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = cpBands0.getCPUtf8("PO`:je=BU7{w9c?FU");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(47, 139, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(47, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Call newAttributeBands_Call0 = newAttributeBands0.new Call(262144);
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable((List) null);
      newAttributeBands_Call0.setCallable(newAttributeBands_Callable0);
      assertFalse(newAttributeBands_Callable0.isBackwardsCallable());
      assertEquals(262144, newAttributeBands_Call0.getCallableIndex());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("POhdc>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 14, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(14, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      IntList intList0 = new IntList(262144);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("5Ou~gLn|aM6F=6M", linkedList0, linkedList0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.renumberBci(intList0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Union", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("I", linkedList0, linkedList0);
      MockFile mockFile0 = new MockFile("I", "I");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      newAttributeBands_Union0.pack(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("POhdc>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 14, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(14, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst((Object) null);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      NewAttribute newAttribute0 = new NewAttribute("POhdc>", "5Ou~gLn|aM6F=6M", 2286);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("5Ou~gLn|aM6F=6M", linkedList1, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Union", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("RSI");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2044, 51, cPUTF8_0, cPUTF8_0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(51, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst(newAttributeBands0);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("RSI", linkedList0, linkedList0);
      NewAttribute newAttribute0 = new NewAttribute("RSI", "@)DR}C3", 93);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.compress.harmony.pack200.NewAttributeBands cannot be cast to org.apache.commons.compress.harmony.pack200.NewAttributeBands$UnionCase
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Union", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-3552), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      MockFile mockFile0 = new MockFile("I");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("z\"dH", "I");
      newAttributeBands_Replication0.pack(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("PO bytes from cpClass[");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(67, 67, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(67, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("N4hc`oB'@abV{49", "PO bytes from cpClass[");
      IntList intList0 = new IntList();
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      newAttributeBands_Replication0.renumberBci(intList0, hashMap0);
      assertTrue(intList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(4381, 262144, (CPUTF8) null, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(4381, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      IntList intList0 = new IntList(262144);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("f", "PS=");
      newAttributeBands_Replication0.renumberBci(intList0, hashMap0);
      assertEquals(0, intList0.size());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("JR*4]YF{#22+K,9X");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-2948), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("PO bytes from cpClass[", "JR*4]YF{#22+K,9X");
      NewAttributeBands.Integral newAttributeBands_Integral0 = newAttributeBands_Replication0.getCountElement();
      IntList intList0 = new IntList();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      // Undeclared exception!
      try { 
        newAttributeBands_Integral0.renumberBci(intList0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Integral", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("O(");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2070, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(2070, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      IntList intList0 = new IntList(262144);
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      // Undeclared exception!
      try { 
        newAttributeBands0.renumberBci(intList0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Integral", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("RESj@J .J");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, (-1652), cPUTF8_0, cPUTF8_0);
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1652), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute("{5Lh]U", "c", 55);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<ByteArrayInputStream> linkedList1 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("PS", linkedList1, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(3, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)43;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("I", "O");
      // Undeclared exception!
      try { 
        newAttributeBands_Replication0.addAttributeToBand((NewAttribute) null, byteArrayInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("6Xq5^");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-3367), 57, (CPUTF8) null, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(57, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("SV", linkedList0, linkedList0);
      NewAttribute newAttribute0 = new NewAttribute("I", "K2", (-3367));
      newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
      assertEquals("K2", newAttribute0.getLayout());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("dynamic");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1733, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute("dynamic", "dynamic", (-543));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("FV", "4O+2 '");
      newAttributeBands_Replication0.addAttributeToBand(newAttribute0, pipedInputStream0);
      assertFalse(newAttribute0.isContextCode());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Segment segment0 = new Segment();
      CPUTF8 cPUTF8_0 = new CPUTF8("RESj@J .J");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-890), 262144, cPUTF8_0, cPUTF8_0);
      CpBands cpBands0 = new CpBands(segment0, (-890));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-890), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute("RESj@J .J", "RESj@J .J", 1149);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("V", linkedList0, linkedList0);
      newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
      assertFalse(newAttribute0.isContextField());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1265), cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute((String) null, "SI", 64);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("SI", linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("PO>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(14, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(676, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttribute newAttribute0 = new NewAttribute("FI", "_j/q$- cj:rg7w7t", 262144);
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("FI", linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("!WZr8");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(2240, (-2147), cPUTF8_0, cPUTF8_0);
      NewAttribute newAttribute0 = new NewAttribute("!WZr8", "4Wc]I", 1017);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(2240, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("FH", linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("o(Lq..VKO]P$F#3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(23, 171, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(171, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttribute newAttribute0 = new NewAttribute("H", "o(Lq..VKO]P$F#3", 171);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("H", linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1728));
      CPUTF8 cPUTF8_0 = cpBands0.getCPUtf8("dXV(p}ggzYc3tgaB1*");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-2250), (-1710), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1527, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("SB", "`q.#IKF");
      NewAttribute newAttribute0 = new NewAttribute("J*%", "zx~0(8h", 1527);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        newAttributeBands_Replication0.addAttributeToBand(newAttribute0, dataInputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading unknown attribute
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentHeader segmentHeader0 = segment0.getSegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("OS5Ou~gLn|aM6F=6M");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(14, 14, cPUTF8_0, cPUTF8_0);
      NewAttribute newAttribute0 = new NewAttribute("4", "PO bytes from cpClass[", 262144);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(41, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("FB", linkedList0, linkedList0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, bufferedInputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading unknown attribute
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentHeader segmentHeader0 = segment0.getSegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("PO>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(14, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(50, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)43;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("SH", "B");
      // Undeclared exception!
      newAttributeBands_Replication0.addAttributeToBand((NewAttribute) null, byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8(")DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(34, 143, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1), cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("FI");
      int int0 = newAttributeBands_Reference0.getLength('V');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 2881);
      CPUTF8 cPUTF8_0 = new CPUTF8("POorg.apache.commons.compress.harmony.pack200.NewAttributeBands$Reference");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(67, 67, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(2881, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("POorg.apache.commons.compress.harmony.pack200.NewAttributeBands$Reference");
      int int0 = newAttributeBands_Reference0.getLength('I');
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 2, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3134), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("p[mN2!D9Jzso'Q");
      int int0 = newAttributeBands_Reference0.getLength('H');
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = segment0.getSegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("PO bytes from cpClass[");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(32, 262144, cPUTF8_0, cPUTF8_0);
      NewAttribute newAttribute0 = new NewAttribute("#>YL7KO{g;", "Q.--", 86);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(82, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("OSorg.apache.commons.compress.harmony.pack200.NewAttributeBands$LayoutElement", linkedList0, linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Union0.addAttributeToBand(newAttribute0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("V");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(14, 1023, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-171), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("PO bytes from cpClass[");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(67, 41, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(67, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("RU>E-N>AsPXjoTfB", "UTxS\"<] hM+AHc7>J\"S");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Segment segment0 = new Segment();
      CPUTF8 cPUTF8_0 = new CPUTF8("T0A0\"{l&kc/!Rhn=]");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1278), 86, cPUTF8_0, cPUTF8_0);
      CpBands cpBands0 = new CpBands(segment0, (-1278));
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 1316);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("N4hc`oB'@abV{49");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(79, 79, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(67, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8(")DR}C3");
      CPUTF8 cPUTF8_1 = new CPUTF8("LEm>^");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 133, cPUTF8_0, cPUTF8_1);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(2791, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertEquals(262144, newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 84);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = cpBands0.getCPUtf8("H");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-456), (-1254), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(84, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      assertEquals((-456), newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("PO bytes from cpClass[");
      CPUTF8 cPUTF8_1 = new CPUTF8("GujM2fe5>dcEqS");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1122), (-111), cPUTF8_0, cPUTF8_1);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3677), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertEquals((-1122), newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 67);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("FBCBr1gK19c\"");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(67, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      assertEquals(262144, newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("RU>E-N>AsPXjoTfB");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(67, 67, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(67, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 49);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("?");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(197, 49, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(3873, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("POh>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(14, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(676, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertEquals(14, newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 73);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("=vA8(03^STK}i^&kd");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 73, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1048), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("=vA8(03^STK}i^&kd", linkedList0, linkedList0);
      NewAttributeBands.Integral newAttributeBands_Integral0 = newAttributeBands_Union0.getUnionTag();
      newAttributeBands_Integral0.renumberBci((IntList) null, (Map) null);
      assertEquals("=vA8(03^STK}i^&kd", newAttributeBands_Integral0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8("<fObj1yog1}z");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(1165, (-1120), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(66, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8(":gv6ETKW");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(67, 67, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(67, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("S]dO|VMm3oM$,E&y", ";=h1&!QFk^)pI:&");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8("9w](aSEn<");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1168), 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertEquals((-1168), newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 132);
      CPUTF8 cPUTF8_0 = new CPUTF8("8HuU=p7BF^^*01");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-489), 221, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(4154, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Segment segment0 = new Segment();
      CPUTF8 cPUTF8_0 = new CPUTF8("OSO2<");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1104), 262144, cPUTF8_0, cPUTF8_0);
      CpBands cpBands0 = new CpBands(segment0, (-3134));
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1048575, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("OSO2<", "B5Nlm:Q1.$|^p0");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("org.apache.commons.compress.harmony.pack200.NewAttributeBands$UnionCase");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 2, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3134), (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("R0dBJ$jaw{z9)yo", "34");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8("OSO2<");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(74, 56, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(74, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("0 dGB>.k=HU;s_:0");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(0, (-601), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1167, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 119);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("S.<%ggRlBpv");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 119, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(73, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      IntList intList0 = new IntList();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      newAttributeBands_Callable0.renumberBci(intList0, hashMap0);
      assertEquals(0, intList0.size());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1478));
      CPUTF8 cPUTF8_0 = cpBands0.getCPUtf8("-nF");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-740), (-1718320895), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(72, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 190, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("|%?>h[1WHYLT>Y2*4z", ",tIx=/iL/UfCj");
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8("+wT!<!}|}\"V4;e^'p");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, (-1133), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(69, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0);
      boolean boolean0 = newAttributeBands_UnionCase0.hasTag(262144);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("(0;!] $}ZvFY");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 1725, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1725, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      assertFalse(newAttributeBands0.isUsedAtLeastOnce());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1478));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("");
      CPUTF8 cPUTF8_1 = cpBands0.getCPUtf8("[L");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, (-1478), cPUTF8_0, cPUTF8_1);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1478), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("PS");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(71, 71, cPUTF8_0, cPUTF8_0);
      CpBands cpBands0 = new CpBands(segment0, 1258);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(71, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      // Undeclared exception!
      try { 
        newAttributeBands0.pack(pipedOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 71
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BandSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("dynamic");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(1642, 1642, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(0, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<NewAttributeBands.Reference> linkedList0 = new LinkedList<NewAttributeBands.Reference>();
      LinkedList linkedList1 = (LinkedList)linkedList0.clone();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList1);
      List list0 = newAttributeBands_Callable0.getBody();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("SB");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      // Undeclared exception!
      try { 
        newAttributeBands_Callable0.addBackwardsCall();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Callable", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("1_");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(1595, (-3065), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(0, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Call newAttributeBands_Call0 = newAttributeBands0.new Call(0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      newAttributeBands_Call0.setCallable(newAttributeBands_Callable0);
      assertTrue(newAttributeBands_Callable0.isBackwardsCallable());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 18);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("");
      LinkedList<NewAttributeBands.Reference> linkedList0 = new LinkedList<NewAttributeBands.Reference>();
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(0, (-2555), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(40, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      boolean boolean0 = newAttributeBands_Callable0.isBackwardsCallable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("X+#?iD Y:j%hz06");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(840, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<NewAttributeBands.Reference> linkedList0 = new LinkedList<NewAttributeBands.Reference>();
      NewAttributeBands.Callable newAttributeBands_Callable0 = newAttributeBands0.new Callable(linkedList0);
      newAttributeBands_Callable0.setBackwardsCallableIndex(1570);
      assertFalse(newAttributeBands_Callable0.isBackwardsCallable());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 1919);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("Q[t");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(66, 66, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-3324), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Reference newAttributeBands_Reference0 = newAttributeBands0.new Reference("SV");
      String string0 = newAttributeBands_Reference0.getTag();
      assertEquals("SV", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("org.apache.commons.io.filefilter.FileEqualsFileFilter");
      CPUTF8 cPUTF8_1 = new CPUTF8("RPOh>");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_1);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      HashMap<Integer, ByteArrayInputStream> hashMap0 = new HashMap<Integer, ByteArrayInputStream>();
      IntList intList0 = new IntList(262144);
      newAttributeBands0.renumberBci(intList0, hashMap0);
      assertEquals(262144, newAttributeBands0.getFlagIndex());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("Duplicate handler registration for ");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1733, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Call newAttributeBands_Call0 = newAttributeBands0.new Call(262144);
      MockPrintStream mockPrintStream0 = new MockPrintStream("O2<");
      newAttributeBands_Call0.pack(mockPrintStream0);
      assertEquals(262144, newAttributeBands_Call0.getCallableIndex());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, (-28), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-28), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Call newAttributeBands_Call0 = newAttributeBands0.new Call(262144);
      int int0 = newAttributeBands_Call0.getCallableIndex();
      assertEquals(262144, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("@)DR}C3");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(262144, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      IntList intList0 = new IntList();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      NewAttributeBands.Call newAttributeBands_Call0 = newAttributeBands0.new Call(262144);
      newAttributeBands_Call0.renumberBci(intList0, hashMap0);
      assertEquals(262144, newAttributeBands_Call0.getCallableIndex());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("1_");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(1595, (-3065), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(0, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Call newAttributeBands_Call0 = newAttributeBands0.new Call(0);
      newAttributeBands_Call0.getCallable();
      assertEquals(0, newAttributeBands_Call0.getCallableIndex());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 177);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("/:P/U");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-2206), (-2206), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-2206), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("/:P/U", linkedList0, linkedList0);
      List list0 = newAttributeBands_Union0.getUnionCases();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("6Xq5^");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-3367), 57, (CPUTF8) null, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(57, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      NewAttributeBands.Union newAttributeBands_Union0 = newAttributeBands0.new Union("SV", linkedList0, linkedList0);
      List list0 = newAttributeBands_Union0.getDefaultCaseBody();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 1707);
      CPUTF8 cPUTF8_0 = new CPUTF8("7iUn]7P_/");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(73, 1707, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(73, cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      boolean boolean0 = newAttributeBands0.isUsedAtLeastOnce();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 405);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("ANe./~6tKj0jKm4");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(176, 1783, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(1783, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      int[] intArray0 = newAttributeBands0.numBackwardsCalls();
      assertEquals(0, intArray0.length);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-2349), cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      int int0 = newAttributeBands0.getFlagIndex();
      assertEquals((-1265), int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(3, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      String string0 = newAttributeBands0.getAttributeName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("X+#?iD Y:j%hz06");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(840, (CpBands) null, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<NewAttributeBands.Reference> linkedList0 = new LinkedList<NewAttributeBands.Reference>();
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0);
      List list0 = newAttributeBands_UnionCase0.getBody();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8("RESj@J .J");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(262144, (-1652), cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1652), cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      LinkedList<ByteArrayInputStream> linkedList0 = new LinkedList<ByteArrayInputStream>();
      NewAttributeBands.UnionCase newAttributeBands_UnionCase0 = newAttributeBands0.new UnionCase(linkedList0, linkedList0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("{5Lh]U");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 91);
      newAttributeBands_UnionCase0.pack(bufferedOutputStream0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      CPUTF8 cPUTF8_0 = new CPUTF8("org.apache.commons.compress.harmony.pack200.NewAttributeBands$Integral");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1858), 262144, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands((-1858), cpBands0, (SegmentHeader) null, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Integral newAttributeBands_Integral0 = newAttributeBands0.new Integral("Cug");
      String string0 = newAttributeBands_Integral0.getTag();
      assertEquals("Cug", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CPUTF8 cPUTF8_0 = new CPUTF8("I");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition((-1265), (-1265), cPUTF8_0, cPUTF8_0);
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, (-1265));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(3, cpBands0, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("I", "O");
      NewAttributeBands.Integral newAttributeBands_Integral0 = newAttributeBands_Replication0.getCountElement();
      NewAttributeBands.Integral newAttributeBands_Integral1 = newAttributeBands0.new Integral("|{\"i`ZzYFgU+?%`", newAttributeBands_Integral0);
      newAttributeBands_Integral1.addAttributeToBand((NewAttribute) null, (InputStream) null);
      assertNotSame(newAttributeBands_Integral1, newAttributeBands_Integral0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      CPUTF8 cPUTF8_0 = new CPUTF8("Jarsigner command: %s");
      AttributeDefinitionBands.AttributeDefinition attributeDefinitionBands_AttributeDefinition0 = new AttributeDefinitionBands.AttributeDefinition(77, 79, cPUTF8_0, cPUTF8_0);
      NewAttributeBands newAttributeBands0 = new NewAttributeBands(77, (CpBands) null, segmentHeader0, attributeDefinitionBands_AttributeDefinition0);
      NewAttributeBands.Replication newAttributeBands_Replication0 = newAttributeBands0.new Replication("Writing new attribute bands...", "Jarsigner command: %s");
      List list0 = newAttributeBands_Replication0.getLayoutElements();
      assertEquals(0, list0.size());
  }
}
