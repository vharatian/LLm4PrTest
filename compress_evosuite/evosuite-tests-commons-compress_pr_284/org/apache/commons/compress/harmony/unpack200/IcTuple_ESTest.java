/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:37:00 GMT 2025
 */

package org.apache.commons.compress.harmony.unpack200;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.harmony.unpack200.IcTuple;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IcTuple_ESTest extends IcTuple_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("-CR 9zat.v*!tGvr31", 0, "K", "#{Rqy", (-12), 0, (-3445), 1);
      String string0 = icTuple0.thisClassString();
      assertEquals(0, icTuple0.getF());
      assertEquals("K$#{Rqy", string0);
      assertEquals(1, icTuple0.getTupleIndex());
      assertEquals((-3445), icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.outerIsAnonymous());
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 41, "p$8bVe&A`g;]S", "", 0, (-1385), 0, 65536);
      icTuple0.N = "";
      String string0 = icTuple0.toString();
      assertEquals(41, icTuple0.getF());
      assertEquals("IcTuple ( in p$8bVe&A`g;]S)", string0);
      assertEquals(65536, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("*", (-103), "0/b@*zl|5Q.o7", (String) null, 0, 0, 0, 36);
      icTuple0.C = null;
      icTuple0.thisClassString();
      assertEquals((-103), icTuple0.getF());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals("0/b@*zl|5Q.o7", icTuple0.outerClassString());
      assertEquals(36, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(0, icTuple0.thisClassIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("IcTuple ", (-3146), "Tfuc6d=2xc[1cD", (String) null, 0, 4917, (-3146), (-3146));
      int int0 = icTuple0.thisClassIndex();
      assertEquals(0, int0);
      assertEquals((-3146), icTuple0.getF());
      assertTrue(icTuple0.isAnonymous());
      assertTrue(icTuple0.nestedExplicitFlagSet());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals(4917, icTuple0.outerClassIndex());
      assertEquals((-3146), icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple(" in ", 0, " in ", " in ", 0, 0, 0, 994);
      int int0 = icTuple0.simpleClassNameIndex();
      assertEquals(994, icTuple0.getTupleIndex());
      assertEquals(0, icTuple0.outerClassIndex());
      assertTrue(icTuple0.outerIsAnonymous());
      assertEquals(0, icTuple0.getF());
      assertFalse(icTuple0.isMember());
      assertFalse(icTuple0.isAnonymous());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("IcTuple (IcTuple  in IcTuple )", 108, "?", "org.apache.commons.compress.harmony.unpack200.IcTuple", 17, 0, 17, 96);
      int int0 = icTuple0.simpleClassNameIndex();
      assertEquals(17, int0);
      assertEquals(96, icTuple0.getTupleIndex());
      assertEquals(108, icTuple0.getF());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals("org.apache.commons.compress.harmony.unpack200.IcTuple", icTuple0.getN());
      assertFalse(icTuple0.isMember());
      assertEquals(0, icTuple0.outerClassIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("+is>", 0, "+is>", "+is>", 0, 0, 0, 1010);
      String string0 = icTuple0.simpleClassName();
      assertEquals(1010, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertFalse(icTuple0.nestedExplicitFlagSet());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-3214), "", "", (-3214), 0, (-3214), 0);
      String string0 = icTuple0.simpleClassName();
      assertEquals(0, icTuple0.getTupleIndex());
      assertEquals((-3214), icTuple0.getF());
      assertTrue(icTuple0.isMember());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("IcTuple ", 0, "IcTuple ", "IcTuple ", 161, (-1), (-1), 3916);
      boolean boolean0 = icTuple0.outerIsAnonymous();
      assertEquals(0, icTuple0.getF());
      assertTrue(boolean0);
      assertEquals(3916, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-2637), (String) null, (String) null, 1373, 1373, 0, 217);
      String string0 = icTuple0.outerClassString();
      assertEquals(1373, icTuple0.thisClassIndex());
      assertEquals((-2637), icTuple0.getF());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(217, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-3214), "", "", (-3214), 0, (-3214), 0);
      String string0 = icTuple0.outerClassString();
      assertEquals((-3214), icTuple0.getF());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertNotNull(string0);
      assertEquals(0, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.isMember());
      assertFalse(icTuple0.predicted());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("d-<nS#~rqdJWvA", (-3077), ".6xo_RHfx^J", "\"p", (-3077), 0, 0, (-1742));
      int int0 = icTuple0.outerClassIndex();
      assertEquals(0, int0);
      assertTrue(icTuple0.isMember());
      assertEquals("\"p", icTuple0.simpleClassName());
      assertEquals((-3077), icTuple0.getF());
      assertEquals(0, icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals((-1742), icTuple0.getTupleIndex());
      assertEquals(".6xo_RHfx^J", icTuple0.outerClassString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-2535), "", "", (-2535), (-2535), (-2535), (-2535));
      int int0 = icTuple0.outerClassIndex();
      assertEquals((-1), int0);
      assertEquals((-2535), icTuple0.getF());
      assertTrue(icTuple0.isMember());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-2535), icTuple0.getTupleIndex());
      assertFalse(icTuple0.predicted());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-1472), "", "", (-1472), (-1472), (-1472), (-1472));
      boolean boolean0 = icTuple0.isMember();
      assertEquals((-1472), icTuple0.getTupleIndex());
      assertTrue(boolean0);
      assertEquals((-1), icTuple0.thisClassIndex());
      assertEquals((-1472), icTuple0.getF());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("$", (-2826), "vU[#Tb'=;)mM", "", (-1), 1592, (-2657), 239);
      boolean boolean0 = icTuple0.isAnonymous();
      assertEquals((-2657), icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.isMember());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals(1592, icTuple0.outerClassIndex());
      assertEquals(239, icTuple0.getTupleIndex());
      assertEquals((-2826), icTuple0.getF());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("vi~q(+~K}y|!+", (-2535), "vi~q(+~K}y|!+", "vi~q(+~K}y|!+", (-2535), (-2535), 0, 0);
      icTuple0.innerBreakAtDollar("");
      assertEquals(0, icTuple0.getTupleIndex());
      assertEquals((-2535), icTuple0.getF());
      assertEquals((-2535), icTuple0.outerClassIndex());
      assertFalse(icTuple0.outerIsAnonymous());
      assertTrue(icTuple0.isMember());
      assertEquals(0, icTuple0.simpleClassNameIndex());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("vi~q(+~K}y|!+", (-2535), "vi~q(+~K}y|!+", "vi~q(+~K}y|!+", (-2535), (-2535), 0, 0);
      int int0 = icTuple0.getTupleIndex();
      assertEquals(0, icTuple0.simpleClassNameIndex());
      assertEquals(0, int0);
      assertEquals((-2535), icTuple0.getF());
      assertTrue(icTuple0.isMember());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals((-2535), icTuple0.outerClassIndex());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-2535), "", "", (-2535), (-2535), (-2535), (-2535));
      int int0 = icTuple0.getTupleIndex();
      assertEquals((-2535), icTuple0.getF());
      assertTrue(icTuple0.isMember());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-2535), int0);
      assertEquals((-1), icTuple0.outerClassIndex());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 322, "xYWQ.S=", (String) null, 322, 726, (-3366), (-3029));
      String string0 = icTuple0.getN();
      assertNull(string0);
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(322, icTuple0.getF());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.isMember());
      assertEquals(322, icTuple0.thisClassIndex());
      assertEquals("xYWQ.S=", icTuple0.outerClassString());
      assertEquals((-3029), icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-3943), "", "", 1479, 1476, (-2408), 0);
      String string0 = icTuple0.getN();
      assertEquals((-3943), icTuple0.getF());
      assertNotNull(string0);
      assertEquals((-1), icTuple0.thisClassIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals(0, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("+is>", 0, "+is>", "+is>", 0, 0, 0, 1010);
      int int0 = icTuple0.getF();
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(1010, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals(0, int0);
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("hfRNKj<O=O", (-1430), "hfRNKj<O=O", "hfRNKj<O=O", (-1430), 0, 2258, 0);
      int int0 = icTuple0.getF();
      assertFalse(icTuple0.predicted());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1430), int0);
      assertEquals(0, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 1977, "", "", 1977, 464, 1, 464);
      icTuple0.C2 = "";
      icTuple0.C2 = null;
      String string0 = icTuple0.getC2();
      assertEquals(1977, icTuple0.getF());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(464, icTuple0.getTupleIndex());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple(" in ", (-1607), " in ", " in ", (-1607), (-1607), (-1777), (-1607));
      icTuple0.getC2();
      assertEquals((-1607), icTuple0.outerClassIndex());
      assertEquals((-1607), icTuple0.getTupleIndex());
      assertTrue(icTuple0.outerIsAnonymous());
      assertEquals((-1607), icTuple0.getF());
      assertFalse(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 41, "p$8bVe&A`g;]S", "", 0, (-1385), 0, 65536);
      icTuple0.C = null;
      String string0 = icTuple0.getC();
      assertNull(string0);
      assertEquals((-1), icTuple0.outerClassIndex());
      assertTrue(icTuple0.isMember());
      assertEquals(65536, icTuple0.getTupleIndex());
      assertEquals("p$8bVe&A`g;]S", icTuple0.outerClassString());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals(41, icTuple0.getF());
      assertEquals("", icTuple0.simpleClassName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-6), "", "", 0, 0, (-6), 0);
      icTuple0.getC();
      assertEquals((-1), icTuple0.outerClassIndex());
      assertTrue(icTuple0.isMember());
      assertEquals((-6), icTuple0.getF());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.thisClassIndex());
      assertEquals(0, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 20, "", "", 20, 20, 20, 20);
      // Undeclared exception!
      try { 
        icTuple0.innerBreakAtDollar((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IcTuple icTuple0 = null;
      try {
        icTuple0 = new IcTuple((String) null, 11, (String) null, (String) null, 11, 11, 11, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("IRl", (-466), (String) null, "IRl", (-466), (-466), (-466), (-466));
      boolean boolean0 = icTuple0.nullSafeEquals((String) null, "IRl");
      assertFalse(boolean0);
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-466), icTuple0.getTupleIndex());
      assertEquals((-466), icTuple0.thisClassIndex());
      assertEquals((-466), icTuple0.getF());
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-1896), (String) null, "IcTu%le ", 429, 12, (-1896), 956);
      boolean boolean0 = icTuple0.nullSafeEquals((String) null, (String) null);
      assertEquals((-1), icTuple0.outerClassIndex());
      assertTrue(icTuple0.isMember());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals("IcTu%le ", icTuple0.simpleClassName());
      assertEquals((-1896), icTuple0.getF());
      assertEquals(956, icTuple0.getTupleIndex());
      assertTrue(boolean0);
      assertEquals(429, icTuple0.thisClassIndex());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-3943), "", "", 1479, 1476, (-2408), 0);
      boolean boolean0 = icTuple0.nullSafeEquals(",esV%b=.c^Fk^", "$");
      assertFalse(icTuple0.predicted());
      assertEquals(0, icTuple0.getTupleIndex());
      assertEquals((-3943), icTuple0.getF());
      assertFalse(boolean0);
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 0, "", "", 706, 0, 0, 0);
      String[] stringArray0 = icTuple0.innerBreakAtDollar("0EbL C'");
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.nestedExplicitFlagSet());
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 0, "", "", 706, 0, 0, 0);
      boolean boolean0 = icTuple0.predicted();
      assertFalse(boolean0);
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(0, icTuple0.getF());
      assertEquals(0, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", (-2637), (String) null, (String) null, 1373, 1373, 0, 217);
      boolean boolean0 = icTuple0.predicted();
      assertEquals((-2637), icTuple0.getF());
      assertEquals(1373, icTuple0.thisClassIndex());
      assertTrue(icTuple0.isMember());
      assertEquals(217, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 322, "xYWQ.S=", (String) null, 322, 726, (-3366), (-3029));
      boolean boolean0 = icTuple0.predicted();
      assertEquals("xYWQ.S=", icTuple0.outerClassString());
      assertEquals(322, icTuple0.thisClassIndex());
      assertEquals(322, icTuple0.getF());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-3029), icTuple0.getTupleIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 322, "xYWQ.S=", (String) null, 322, 726, (-3366), (-3029));
      String string0 = icTuple0.simpleClassName();
      assertEquals("xYWQ.S=", icTuple0.outerClassString());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.isMember());
      assertNull(string0);
      assertEquals(322, icTuple0.getF());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-3029), icTuple0.getTupleIndex());
      assertEquals(322, icTuple0.thisClassIndex());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      icTuple0.outerClassString();
      assertEquals(3060, icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.isAnonymous());
      assertEquals(3060, icTuple0.getF());
      assertFalse(icTuple0.isMember());
      assertTrue(icTuple0.outerIsAnonymous());
      assertEquals(3060, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple(":,866&)3c}E", 1, (String) null, "2StrVEL`{BK\"[x`*z(V", 331, 1760, (-801), 1807);
      int int0 = icTuple0.thisClassIndex();
      assertEquals(331, int0);
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals(1, icTuple0.getF());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(1807, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      int int0 = icTuple0.thisClassIndex();
      assertEquals(3060, icTuple0.simpleClassNameIndex());
      assertEquals(3060, icTuple0.outerClassIndex());
      assertEquals((-1), int0);
      assertTrue(icTuple0.outerIsAnonymous());
      assertFalse(icTuple0.isMember());
      assertFalse(icTuple0.isAnonymous());
      assertEquals(3060, icTuple0.getF());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      icTuple0.hashCode();
      icTuple0.hashCode();
      assertEquals(3060, icTuple0.getTupleIndex());
      assertEquals(3060, icTuple0.outerClassIndex());
      assertEquals(3060, icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.isAnonymous());
      assertFalse(icTuple0.nestedExplicitFlagSet());
      assertFalse(icTuple0.isMember());
      assertTrue(icTuple0.outerIsAnonymous());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple(":,866&)3c}E", 0, "hfRNKj<O=O", "2StrVEL`{BK\"[x`*z(V", 0, (-4), (-4), 28);
      icTuple0.hashCode();
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(0, icTuple0.getF());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals("hfRNKj<O=O", icTuple0.outerClassString());
      assertEquals("2StrVEL`{BK\"[x`*z(V", icTuple0.simpleClassName());
      assertEquals(28, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("(-bB6PX}>9!i0a", 0, (String) null, (String) null, 10, 10, (-207), (-207));
      icTuple0.C = null;
      icTuple0.hashCode();
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals("(-bB6PX}>9", icTuple0.outerClassString());
      assertEquals(10, icTuple0.thisClassIndex());
      assertEquals((-207), icTuple0.getTupleIndex());
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 3319, "Should have an outer before checking if it's anonymous", (String) null, 1634, 87, 1066, 1816);
      IcTuple icTuple1 = new IcTuple("", 65536, "C>;B", "", 1, 8, 52, 3640);
      boolean boolean0 = icTuple0.equals(icTuple1);
      assertEquals((-1), icTuple1.outerClassIndex());
      assertEquals(65536, icTuple1.getF());
      assertEquals(3640, icTuple1.getTupleIndex());
      assertEquals(1634, icTuple0.thisClassIndex());
      assertEquals("C>;B", icTuple1.outerClassString());
      assertFalse(boolean0);
      assertEquals("", icTuple1.simpleClassName());
      assertTrue(icTuple1.isMember());
      assertEquals((-1), icTuple1.simpleClassNameIndex());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple(":,866&)3c}E", 0, "hfRNKj<O=O", "2StrVEL`{BK\"[x`*z(V", 0, (-4), (-4), 28);
      IcTuple icTuple1 = new IcTuple("s$", (-801), "hfRNKj<O=O$2StrVEL`{BK\"[x`*z(V", (String) null, (-1553), 1, 860, 433);
      icTuple1.equals(icTuple0);
      assertFalse(icTuple0.nestedExplicitFlagSet());
      assertEquals(1, icTuple1.outerClassIndex());
      assertTrue(icTuple0.isMember());
      assertEquals(433, icTuple1.getTupleIndex());
      assertFalse(icTuple1.outerIsAnonymous());
      assertEquals((-1553), icTuple1.thisClassIndex());
      assertEquals("hfRNKj<O=O", icTuple0.outerClassString());
      assertTrue(icTuple1.nestedExplicitFlagSet());
      assertTrue(icTuple1.isAnonymous());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      Object object0 = new Object();
      icTuple0.equals(object0);
      assertFalse(icTuple0.isMember());
      assertFalse(icTuple0.isAnonymous());
      assertEquals(3060, icTuple0.outerClassIndex());
      assertEquals(3060, icTuple0.getTupleIndex());
      assertEquals(3060, icTuple0.getF());
      assertTrue(icTuple0.outerIsAnonymous());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("IcTuple ", (-3146), "Tfuc6d=2xc[1cD", (String) null, 0, 4917, (-3146), (-3146));
      icTuple0.equals((Object) null);
      assertTrue(icTuple0.isAnonymous());
      assertTrue(icTuple0.isMember());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals(0, icTuple0.thisClassIndex());
      assertEquals((-3146), icTuple0.getTupleIndex());
      assertEquals(4917, icTuple0.outerClassIndex());
      assertEquals((-3146), icTuple0.getF());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 3319, "", (String) null, 1634, 87, 1066, 1816);
      IcTuple icTuple1 = new IcTuple("", 65536, "", "", 1, 8, 52, 3640);
      boolean boolean0 = icTuple0.equals(icTuple1);
      assertEquals((-1), icTuple1.outerClassIndex());
      assertFalse(boolean0);
      assertEquals(3640, icTuple1.getTupleIndex());
      assertEquals((-1), icTuple1.simpleClassNameIndex());
      assertFalse(icTuple1.equals((Object)icTuple0));
      assertEquals(3319, icTuple0.getF());
      assertEquals(1634, icTuple0.thisClassIndex());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 3319, "", (String) null, 1634, 87, 1066, 1816);
      boolean boolean0 = icTuple0.equals(icTuple0);
      assertEquals(3319, icTuple0.getF());
      assertEquals(1634, icTuple0.thisClassIndex());
      assertEquals(1816, icTuple0.getTupleIndex());
      assertTrue(boolean0);
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("Should have an outer before checking if it's anonymous", 40, "Should have an outer before checking if it's anonymous", "", 40, 40, 40, 40);
      assertFalse(icTuple0.nestedExplicitFlagSet());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals(40, icTuple0.outerClassIndex());
      assertEquals(40, icTuple0.getF());
      assertEquals(40, icTuple0.simpleClassNameIndex());
      assertEquals(40, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IcTuple icTuple0 = null;
      try {
        icTuple0 = new IcTuple("!p=p\"\"tg4B", (-2935), "", "", (-1484), 650, 1066, (-2935));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Should have an outer before checking if it's anonymous
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.IcTuple", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 65536, "", "", 1, 8, 52, 3640);
      boolean boolean0 = icTuple0.nestedExplicitFlagSet();
      assertEquals(3640, icTuple0.getTupleIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals(65536, icTuple0.getF());
      assertTrue(boolean0);
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.thisClassIndex());
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 3319, "Should have an outer before checking if it's anonymous", (String) null, 1634, 87, 1066, 1816);
      boolean boolean0 = icTuple0.nestedExplicitFlagSet();
      assertEquals(1816, icTuple0.getTupleIndex());
      assertEquals(3319, icTuple0.getF());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertFalse(boolean0);
      assertTrue(icTuple0.isMember());
      assertEquals(1634, icTuple0.thisClassIndex());
      assertEquals("Should have an outer before checking if it's anonymous", icTuple0.outerClassString());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 3319, "", (String) null, 1634, 87, 1066, 1816);
      String string0 = icTuple0.thisClassString();
      assertEquals(1634, icTuple0.thisClassIndex());
      assertEquals(1816, icTuple0.getTupleIndex());
      assertEquals(3319, icTuple0.getF());
      assertEquals("", string0);
      assertTrue(icTuple0.isMember());
      assertEquals((-1), icTuple0.outerClassIndex());
      assertNotNull(string0);
      assertEquals((-1), icTuple0.simpleClassNameIndex());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      boolean boolean0 = icTuple0.isMember();
      assertFalse(boolean0);
      assertFalse(icTuple0.isAnonymous());
      assertEquals(3060, icTuple0.outerClassIndex());
      assertEquals(3060, icTuple0.getF());
      assertEquals((-1), icTuple0.thisClassIndex());
      assertTrue(icTuple0.outerIsAnonymous());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      int int0 = icTuple0.outerClassIndex();
      assertFalse(icTuple0.isAnonymous());
      assertEquals(3060, icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.isMember());
      assertTrue(icTuple0.outerIsAnonymous());
      assertEquals(3060, icTuple0.getTupleIndex());
      assertEquals(3060, icTuple0.getF());
      assertEquals(3060, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 3319, "", (String) null, 1634, 87, 1066, 1816);
      int int0 = icTuple0.simpleClassNameIndex();
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals(3319, icTuple0.getF());
      assertEquals((-1), int0);
      assertEquals(1816, icTuple0.getTupleIndex());
      assertTrue(icTuple0.isMember());
      assertEquals(1634, icTuple0.thisClassIndex());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("", 3319, "", (String) null, 1634, 87, 1066, 1816);
      String string0 = icTuple0.getC2();
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals(3319, icTuple0.getF());
      assertTrue(icTuple0.isMember());
      assertEquals(1634, icTuple0.thisClassIndex());
      assertEquals(1816, icTuple0.getTupleIndex());
      assertNotNull(string0);
      assertEquals((-1), icTuple0.outerClassIndex());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      int int0 = icTuple0.getF();
      assertEquals(3060, icTuple0.getTupleIndex());
      assertFalse(icTuple0.isMember());
      assertFalse(icTuple0.isAnonymous());
      assertTrue(icTuple0.outerIsAnonymous());
      assertFalse(icTuple0.predicted());
      assertEquals(3060, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("k)'h3&FRAi", (-136), "k)'h3&FRAi", "k)'h3&FRAi", (-136), (-136), (-136), (-136));
      icTuple0.outerIsAnonymous();
      assertEquals((-1), icTuple0.outerClassIndex());
      assertEquals((-136), icTuple0.getF());
      assertFalse(icTuple0.predicted());
      assertEquals((-1), icTuple0.simpleClassNameIndex());
      assertEquals((-136), icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple(" in ", 0, " in ", " in ", 0, 0, 0, 994);
      icTuple0.getN();
      assertEquals(0, icTuple0.outerClassIndex());
      assertFalse(icTuple0.isAnonymous());
      assertEquals(0, icTuple0.simpleClassNameIndex());
      assertFalse(icTuple0.isMember());
      assertEquals(0, icTuple0.getF());
      assertEquals(994, icTuple0.getTupleIndex());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("0?AMhT>$f1I", (-1484), "0?AMhT>$f1I", "0?AMhT>$f1I", (-1484), (-1484), (-1484), (-1484));
      icTuple0.isAnonymous();
      assertTrue(icTuple0.isMember());
      assertEquals((-1484), icTuple0.getTupleIndex());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals((-1484), icTuple0.outerClassIndex());
      assertEquals((-1484), icTuple0.simpleClassNameIndex());
      assertEquals((-1484), icTuple0.getF());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("e ~7#:^HV\"", 111, (String) null, "e ~7#:^HV\"", 111, 111, 111, 111);
      String string0 = icTuple0.toString();
      assertEquals(111, icTuple0.thisClassIndex());
      assertEquals(111, icTuple0.getF());
      assertEquals(111, icTuple0.simpleClassNameIndex());
      assertEquals("IcTuple (e ~7#:^HV\" in e$~7$:^HV)", string0);
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals(111, icTuple0.getTupleIndex());
      assertTrue(icTuple0.isMember());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("n /6AHucr0X`.$\"h}o", 3060, "n /6AHucr0X`.$\"h}o", "n /6AHucr0X`.$\"h}o", 3060, 3060, 3060, 3060);
      int int0 = icTuple0.getTupleIndex();
      assertEquals(3060, icTuple0.outerClassIndex());
      assertFalse(icTuple0.isMember());
      assertEquals(3060, int0);
      assertFalse(icTuple0.isAnonymous());
      assertEquals(3060, icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.outerIsAnonymous());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("0?A!hT>$f1I", (-1484), "0?A!hT>$f1I", "0?A!hT>$f1I", (-1484), (-1484), (-1484), (-1484));
      icTuple0.getC();
      assertEquals((-1484), icTuple0.getF());
      assertEquals((-1484), icTuple0.simpleClassNameIndex());
      assertEquals((-1484), icTuple0.outerClassIndex());
      assertFalse(icTuple0.outerIsAnonymous());
      assertTrue(icTuple0.isMember());
      assertEquals((-1484), icTuple0.getTupleIndex());
  }
}
