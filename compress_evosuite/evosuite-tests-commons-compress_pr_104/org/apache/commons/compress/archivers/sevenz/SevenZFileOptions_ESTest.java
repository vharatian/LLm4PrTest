/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 06:36:48 GMT 2025
 */

package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.compress.archivers.sevenz.SevenZFileOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SevenZFileOptions_ESTest extends SevenZFileOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SevenZFileOptions.Builder sevenZFileOptions_Builder0 = SevenZFileOptions.builder();
      SevenZFileOptions.Builder sevenZFileOptions_Builder1 = sevenZFileOptions_Builder0.withUseDefaultNameForUnnamedEntries(true);
      SevenZFileOptions sevenZFileOptions0 = sevenZFileOptions_Builder1.build();
      boolean boolean0 = sevenZFileOptions0.getUseDefaultNameForUnnamedEntries();
      assertEquals(Integer.MAX_VALUE, sevenZFileOptions0.getMaxMemoryLimitInKb());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SevenZFileOptions.Builder sevenZFileOptions_Builder0 = new SevenZFileOptions.Builder();
      SevenZFileOptions.Builder sevenZFileOptions_Builder1 = sevenZFileOptions_Builder0.withUseDefaultNameForUnnamedEntries(true);
      assertSame(sevenZFileOptions_Builder1, sevenZFileOptions_Builder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SevenZFileOptions.Builder sevenZFileOptions_Builder0 = new SevenZFileOptions.Builder();
      sevenZFileOptions_Builder0.withMaxMemoryLimitInKb((-880));
      SevenZFileOptions sevenZFileOptions0 = sevenZFileOptions_Builder0.build();
      int int0 = sevenZFileOptions0.getMaxMemoryLimitInKb();
      assertFalse(sevenZFileOptions0.getUseDefaultNameForUnnamedEntries());
      assertEquals((-880), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SevenZFileOptions.Builder sevenZFileOptions_Builder0 = SevenZFileOptions.builder();
      SevenZFileOptions.Builder sevenZFileOptions_Builder1 = sevenZFileOptions_Builder0.withMaxMemoryLimitInKb(0);
      SevenZFileOptions sevenZFileOptions0 = sevenZFileOptions_Builder1.build();
      int int0 = sevenZFileOptions0.getMaxMemoryLimitInKb();
      assertFalse(sevenZFileOptions0.getUseDefaultNameForUnnamedEntries());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SevenZFileOptions.Builder sevenZFileOptions_Builder0 = new SevenZFileOptions.Builder();
      SevenZFileOptions sevenZFileOptions0 = sevenZFileOptions_Builder0.build();
      boolean boolean0 = sevenZFileOptions0.getUseDefaultNameForUnnamedEntries();
      assertEquals(Integer.MAX_VALUE, sevenZFileOptions0.getMaxMemoryLimitInKb());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      int int0 = sevenZFileOptions0.getMaxMemoryLimitInKb();
      assertEquals(Integer.MAX_VALUE, int0);
  }
}
