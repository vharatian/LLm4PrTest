/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 06:32:29 GMT 2025
 */

package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.sevenz.BindPair;
import org.apache.commons.compress.archivers.sevenz.Coder;
import org.apache.commons.compress.archivers.sevenz.Folder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Folder_ESTest extends Folder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[3];
      folder0.totalInputStreams = (-2591L);
      folder0.hasCrc = true;
      folder0.packedStreams = longArray0;
      BindPair[] bindPairArray0 = new BindPair[1];
      folder0.bindPairs = bindPairArray0;
      Coder[] coderArray0 = new Coder[19];
      folder0.coders = coderArray0;
      folder0.unpackSizes = folder0.packedStreams;
      String string0 = folder0.toString();
      assertEquals("Folder with 19 coders, -2591 input streams, 0 output streams, 1 bind pairs, 3 packed streams, 3 unpack sizes, with CRC 0 and 0 unpack streams", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[3];
      folder0.totalOutputStreams = (-1L);
      folder0.hasCrc = true;
      folder0.packedStreams = longArray0;
      BindPair[] bindPairArray0 = new BindPair[1];
      folder0.bindPairs = bindPairArray0;
      Coder[] coderArray0 = new Coder[1];
      folder0.coders = coderArray0;
      folder0.unpackSizes = longArray0;
      String string0 = folder0.toString();
      assertEquals("Folder with 1 coders, 0 input streams, -1 output streams, 1 bind pairs, 3 packed streams, 3 unpack sizes, with CRC 0 and 0 unpack streams", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[8];
      folder0.packedStreams = longArray0;
      BindPair[] bindPairArray0 = new BindPair[2];
      folder0.bindPairs = bindPairArray0;
      Coder[] coderArray0 = new Coder[6];
      folder0.coders = coderArray0;
      // Undeclared exception!
      try { 
        folder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.Folder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Folder folder0 = new Folder();
      folder0.totalOutputStreams = 1L;
      BindPair[] bindPairArray0 = new BindPair[3];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      BindPair bindPair1 = new BindPair();
      bindPairArray0[1] = bindPair1;
      bindPair0.outIndex = 1L;
      folder0.bindPairs = bindPairArray0;
      long long0 = folder0.getUnpackSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Folder folder0 = new Folder();
      folder0.totalOutputStreams = (-1138L);
      long long0 = folder0.getUnpackSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[3];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      folder0.bindPairs = bindPairArray0;
      // Undeclared exception!
      try { 
        folder0.findBindPairForInStream(1924);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.Folder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[25];
      folder0.packedStreams = longArray0;
      BindPair[] bindPairArray0 = new BindPair[1];
      BindPair bindPair0 = new BindPair();
      bindPair0.outIndex = 2137109330L;
      folder0.bindPairs = bindPairArray0;
      Coder[] coderArray0 = new Coder[3];
      BindPair[] bindPairArray1 = new BindPair[6];
      bindPairArray1[0] = bindPair0;
      bindPairArray1[1] = bindPair0;
      bindPairArray1[2] = bindPair0;
      BindPair bindPair1 = new BindPair();
      bindPairArray1[3] = bindPair1;
      folder0.bindPairs = bindPairArray1;
      folder0.coders = coderArray0;
      // Undeclared exception!
      folder0.getOrderedCoders();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[8];
      folder0.packedStreams = longArray0;
      BindPair[] bindPairArray0 = new BindPair[10];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      folder0.bindPairs = bindPairArray0;
      Coder[] coderArray0 = new Coder[6];
      folder0.numUnpackSubStreams = (-2145996469);
      folder0.coders = coderArray0;
      // Undeclared exception!
      folder0.getOrderedCoders();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[8];
      folder0.packedStreams = longArray0;
      Coder[] coderArray0 = new Coder[6];
      folder0.numUnpackSubStreams = (-2145996469);
      folder0.coders = coderArray0;
      // Undeclared exception!
      try { 
        folder0.getOrderedCoders();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[4];
      longArray0[0] = (-896L);
      folder0.packedStreams = longArray0;
      // Undeclared exception!
      try { 
        folder0.getOrderedCoders();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[8];
      longArray0[2] = 3133L;
      Coder[] coderArray0 = new Coder[6];
      Coder coder0 = new Coder();
      coderArray0[2] = coder0;
      folder0.coders = coderArray0;
      folder0.unpackSizes = longArray0;
      long long0 = folder0.getUnpackSizeForCoder(coder0);
      assertEquals(3133L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[8];
      longArray0[4] = (-1097L);
      Coder[] coderArray0 = new Coder[6];
      Coder coder0 = new Coder();
      coderArray0[4] = coder0;
      folder0.coders = coderArray0;
      folder0.unpackSizes = longArray0;
      long long0 = folder0.getUnpackSizeForCoder(coder0);
      assertEquals((-1097L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Folder folder0 = new Folder();
      folder0.totalOutputStreams = 1L;
      BindPair[] bindPairArray0 = new BindPair[0];
      folder0.bindPairs = bindPairArray0;
      long[] longArray0 = new long[9];
      longArray0[0] = (long) (-1);
      folder0.unpackSizes = longArray0;
      long long0 = folder0.getUnpackSize();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[10];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      folder0.bindPairs = bindPairArray0;
      int int0 = folder0.findBindPairForOutStream(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[4];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      bindPairArray0[1] = bindPairArray0[0];
      bindPairArray0[2] = bindPairArray0[0];
      BindPair bindPair1 = new BindPair();
      bindPairArray0[3] = bindPair1;
      folder0.bindPairs = bindPairArray0;
      bindPair1.outIndex = (long) 2145604834;
      int int0 = folder0.findBindPairForOutStream(2145604834);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[0];
      folder0.bindPairs = bindPairArray0;
      int int0 = folder0.findBindPairForOutStream(0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[6];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      BindPair bindPair1 = new BindPair();
      bindPairArray0[1] = bindPair1;
      bindPair0.inIndex = 1L;
      folder0.bindPairs = bindPairArray0;
      int int0 = folder0.findBindPairForInStream(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[0];
      folder0.bindPairs = bindPairArray0;
      long[] longArray0 = new long[9];
      folder0.unpackSizes = longArray0;
      folder0.totalOutputStreams = (long) 2133447807;
      // Undeclared exception!
      try { 
        folder0.getUnpackSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2133447806
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.Folder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[0];
      folder0.packedStreams = longArray0;
      // Undeclared exception!
      try { 
        folder0.getOrderedCoders();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Folder folder0 = new Folder();
      // Undeclared exception!
      try { 
        folder0.findBindPairForOutStream(276);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[8];
      folder0.packedStreams = longArray0;
      BindPair[] bindPairArray0 = new BindPair[10];
      folder0.bindPairs = bindPairArray0;
      Coder[] coderArray0 = new Coder[6];
      folder0.coders = coderArray0;
      folder0.unpackSizes = folder0.packedStreams;
      String string0 = folder0.toString();
      assertEquals("Folder with 6 coders, 0 input streams, 0 output streams, 10 bind pairs, 8 packed streams, 8 unpack sizes, without CRC and 0 unpack streams", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Folder folder0 = new Folder();
      Coder[] coderArray0 = new Coder[2];
      Coder coder0 = new Coder();
      folder0.coders = coderArray0;
      long long0 = folder0.getUnpackSizeForCoder(coder0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Folder folder0 = new Folder();
      Coder[] coderArray0 = new Coder[6];
      folder0.coders = coderArray0;
      // Undeclared exception!
      try { 
        folder0.getUnpackSizeForCoder(coderArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.Folder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Folder folder0 = new Folder();
      Coder coder0 = new Coder();
      long long0 = folder0.getUnpackSizeForCoder(coder0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[0];
      folder0.bindPairs = bindPairArray0;
      folder0.totalOutputStreams = (long) 2133447807;
      // Undeclared exception!
      try { 
        folder0.getUnpackSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.Folder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Folder folder0 = new Folder();
      folder0.totalOutputStreams = 1L;
      BindPair[] bindPairArray0 = new BindPair[3];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      folder0.bindPairs = bindPairArray0;
      long long0 = folder0.getUnpackSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Folder folder0 = new Folder();
      long long0 = folder0.getUnpackSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[6];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      folder0.bindPairs = bindPairArray0;
      int int0 = folder0.findBindPairForInStream(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Folder folder0 = new Folder();
      BindPair[] bindPairArray0 = new BindPair[0];
      folder0.bindPairs = bindPairArray0;
      int int0 = folder0.findBindPairForInStream(2133447807);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Folder folder0 = new Folder();
      long[] longArray0 = new long[25];
      folder0.packedStreams = longArray0;
      BindPair[] bindPairArray0 = new BindPair[1];
      BindPair bindPair0 = new BindPair();
      bindPairArray0[0] = bindPair0;
      bindPair0.outIndex = 2137109330L;
      folder0.bindPairs = bindPairArray0;
      Coder[] coderArray0 = new Coder[3];
      folder0.coders = coderArray0;
      Iterable<Coder> iterable0 = folder0.getOrderedCoders();
      assertNotNull(iterable0);
  }
}
