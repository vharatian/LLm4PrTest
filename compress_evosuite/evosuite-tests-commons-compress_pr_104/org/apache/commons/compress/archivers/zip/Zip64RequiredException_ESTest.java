/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 06:43:14 GMT 2025
 */

package org.apache.commons.compress.archivers.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.zip.Zip64RequiredException;
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Zip64RequiredException_ESTest extends Zip64RequiredException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ZipArchiveEntry zipArchiveEntry0 = new ZipArchiveEntry();
      String string0 = Zip64RequiredException.getEntryTooBigMessage(zipArchiveEntry0);
      assertEquals("'s size exceeds the limit of 4GByte.", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Zip64RequiredException.getEntryTooBigMessage((ZipArchiveEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.zip.Zip64RequiredException", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Zip64RequiredException zip64RequiredException0 = new Zip64RequiredException((String) null);
      assertEquals("org.apache.commons.compress.archivers.zip.Zip64RequiredException", zip64RequiredException0.toString());
  }
}
