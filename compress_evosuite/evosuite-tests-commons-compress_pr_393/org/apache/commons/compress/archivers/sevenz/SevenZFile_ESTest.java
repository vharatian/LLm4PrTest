/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:10:02 GMT 2025
 */

package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.nio.channels.ClosedChannelException;
import java.nio.channels.FileChannel;
import java.nio.channels.NonReadableChannelException;
import java.nio.channels.SeekableByteChannel;
import java.nio.file.NoSuchFileException;
import org.apache.commons.compress.archivers.sevenz.SevenZFile;
import org.apache.commons.compress.archivers.sevenz.SevenZFileOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SevenZFile_ESTest extends SevenZFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)125;
      boolean boolean0 = SevenZFile.matches(byteArray0, 392);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        SevenZFile.matches(byteArray0, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("pN{u{Y");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (char[]) null, sevenZFileOptions0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (char[]) null, sevenZFileOptions0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = MockFile.createTempFile(":Oe^(S?m9", ":Oe^(S?m9");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      char[] charArray0 = new char[1];
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, charArray0, sevenZFileOptions0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("M80d*Gcy7d{AAxE4H");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (char[]) null);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      char[] charArray0 = new char[0];
      mockFileInputStream0.close();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, charArray0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[0];
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, charArray0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      File file0 = MockFile.createTempFile("_1g#?\" X(", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (char[]) null);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" \u0001Wvx3F");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (byte[]) null);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      fileChannel0.close();
      byte[] byteArray0 = new byte[1];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, byteArray0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (byte[]) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = MockFile.createTempFile("Stream corrupted", "Stream corrupted");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (byte[]) null);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("`1Wo0bXqHrOri");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, sevenZFileOptions0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      fileChannel0.close();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (SevenZFileOptions) null);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, (SevenZFileOptions) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, sevenZFileOptions0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("f}I");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "_'", (char[]) null, sevenZFileOptions0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "()m9cR3|EK\"%)6", (char[]) null, sevenZFileOptions0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File file0 = MockFile.createTempFile("_1g#?\" X(", "_1g#?\" X(");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "_1g#?\" X(", (char[]) null, sevenZFileOptions0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("SENSITIVE");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "SENSITIVE", (char[]) null);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      char[] charArray0 = new char[6];
      mockFileInputStream0.close();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "", charArray0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "", (char[]) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile("0&/J8]8>hNdU(i\"3", "0&/J8]8>hNdU(i\"3");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      char[] charArray0 = new char[0];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "0&/J8]8>hNdU(i\"3", charArray0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("D:8 0y+'MWdYM%~\"");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "D:8 0y+'MWdYM%~\"", (byte[]) null);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "hO).p$fc~^]", (byte[]) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      File file0 = MockFile.createTempFile("sigFile", "sigFile");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "sigFile", byteArray0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("M80d*Gcy7d{AAxE4H");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "M80d*Gcy7d{AAxE4H", sevenZFileOptions0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      fileChannel0.close();
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "java.lang.StackWalker$Option", sevenZFileOptions0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "#Q/", (SevenZFileOptions) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "java.lang.StackWalker$Option", sevenZFileOptions0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("`1Wo0bXqHrOri");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "`1Wo0bXqHrOri");
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      mockFileInputStream0.close();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "java.lang.StackWalker$Option");
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "java.lang.StackWalker$Option");
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("`1Wo0bXqHrOri");
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0);
        fail("Expecting exception: NonReadableChannelException");
      
      } catch(NonReadableChannelException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      fileChannel0.close();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0);
        fail("Expecting exception: ClosedChannelException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      FileChannel fileChannel1 = fileChannel0.position(9223372036854775807L);
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Position in the file cannot be negative
         //
         verifyException("org.evosuite.runtime.vfs.VFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockFile mockFile0 = new MockFile("invalid creation dates size");
      char[] charArray0 = new char[0];
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0, charArray0, sevenZFileOptions0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[0];
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((File) null, charArray0, sevenZFileOptions0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MockFile mockFile0 = new MockFile("INSTANCE", "INSTANCE");
      char[] charArray0 = new char[1];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0, charArray0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((File) null, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      File file0 = MockFile.createTempFile("}.;}gHd-j=XZxW&", "}.;}gHd-j=XZxW&");
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(file0, byteArray0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((File) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Cannot handle % %,d");
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0, sevenZFileOptions0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((File) null, sevenZFileOptions0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockFile mockFile0 = new MockFile("outIndex is bigger than number of outStreams");
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0);
        fail("Expecting exception: NoSuchFileException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      File file0 = MockFile.createTempFile("java.lang.StackWalker$Option", "java.lang.StackWalker$Option");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/java.lang.StackWalker$Option0java.lang.StackWalker$Option");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "java.lang.StackWalker$Option");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      FileChannel fileChannel0 = mockFileInputStream0.getChannel();
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(fileChannel0, "java.lang.StackWalker$Option");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Unsupported 7z version (97,110)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      boolean boolean0 = SevenZFile.matches(byteArray0, (byte)55);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = SevenZFile.matches(byteArray0, (byte)0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        SevenZFile.matches((byte[]) null, 829);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.SevenZFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      char[] charArray0 = new char[0];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, "", charArray0, sevenZFileOptions0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, "", sevenZFileOptions0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      MockFile mockFile0 = new MockFile("");
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0, byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      char[] charArray0 = new char[0];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0, charArray0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0, sevenZFileOptions0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      char[] charArray0 = new char[0];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, charArray0, sevenZFileOptions0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile(mockFile0, (char[]) null, sevenZFileOptions0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      char[] charArray0 = new char[0];
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, "=P\"km[Sk/Cwkkh+", charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, "F", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SevenZFileOptions sevenZFileOptions0 = SevenZFileOptions.DEFAULT;
      SevenZFile sevenZFile0 = null;
      try {
        sevenZFile0 = new SevenZFile((SeekableByteChannel) null, sevenZFileOptions0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.IOUtils", e);
      }
  }
}
