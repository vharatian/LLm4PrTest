/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:27:35 GMT 2025
 */

package org.apache.commons.compress.archivers.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.MalformedInputException;
import org.apache.commons.compress.archivers.zip.NioZipEncoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class NioZipEncoding_ESTest extends NioZipEncoding_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding((Charset) null, false);
      Charset charset0 = nioZipEncoding0.getCharset();
      assertNull(charset0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, true);
      byte[] byteArray0 = new byte[4];
      String string0 = nioZipEncoding0.decode(byteArray0);
      assertEquals("\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, false);
      boolean boolean0 = nioZipEncoding0.canEncode("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding((Charset) null, true);
      // Undeclared exception!
      try { 
        nioZipEncoding0.encode("]1hJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.zip.NioZipEncoding", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-51);
      try { 
        nioZipEncoding0.decode(byteArray0);
        fail("Expecting exception: MalformedInputException");
      
      } catch(MalformedInputException e) {
         //
         // Input length = 1
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, true);
      // Undeclared exception!
      try { 
        nioZipEncoding0.decode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, false);
      byte[] byteArray0 = new byte[0];
      String string0 = nioZipEncoding0.decode(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, false);
      ByteBuffer byteBuffer0 = nioZipEncoding0.encode("");
      assertEquals(2, byteBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, false);
      // Undeclared exception!
      try { 
        nioZipEncoding0.canEncode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      NioZipEncoding nioZipEncoding0 = new NioZipEncoding(charset0, true);
      ByteBuffer byteBuffer0 = nioZipEncoding0.encode("~'06@");
      assertEquals(8, byteBuffer0.capacity());
  }
}
