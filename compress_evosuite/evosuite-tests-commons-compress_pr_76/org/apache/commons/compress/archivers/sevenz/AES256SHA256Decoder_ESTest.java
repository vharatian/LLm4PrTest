/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 08:39:40 GMT 2025
 */

package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder;
import org.apache.commons.compress.archivers.sevenz.Coder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AES256SHA256Decoder_ESTest extends AES256SHA256Decoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AES256SHA256Decoder aES256SHA256Decoder0 = new AES256SHA256Decoder();
      Coder coder0 = new Coder();
      byte[] byteArray0 = new byte[2];
      coder0.properties = byteArray0;
      InputStream inputStream0 = aES256SHA256Decoder0.decode("rQVi4Ab@h93y", (InputStream) null, (byte)55, coder0, byteArray0, (byte)55);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.crypto.CipherInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AES256SHA256Decoder aES256SHA256Decoder0 = new AES256SHA256Decoder();
      Coder coder0 = new Coder();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)55;
      coder0.properties = byteArray0;
      InputStream inputStream0 = aES256SHA256Decoder0.decode("rQVi4Ab@h93y", (InputStream) null, (byte)55, coder0, (byte[]) null, (byte)55);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Salt size + IV size too long in rQVi4Ab@h93y
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AES256SHA256Decoder aES256SHA256Decoder0 = new AES256SHA256Decoder();
      Coder coder0 = new Coder();
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-48);
      InputStream inputStream0 = aES256SHA256Decoder0.decode("{Kzs?qRc4PkSTye", (InputStream) null, (byte) (-48), coder0, byteArray0, (byte) (-48));
      coder0.properties = byteArray0;
      ObjectInputStream objectInputStream0 = new ObjectInputStream(inputStream0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AES256SHA256Decoder aES256SHA256Decoder0 = new AES256SHA256Decoder();
      Coder coder0 = new Coder();
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-65);
      InputStream inputStream0 = aES256SHA256Decoder0.decode("{Kzs?qRc4PkSTye", (InputStream) null, (byte) (-65), coder0, byteArray0, (byte) (-65));
      coder0.properties = byteArray0;
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.crypto.CipherInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AES256SHA256Decoder aES256SHA256Decoder0 = new AES256SHA256Decoder();
      Coder coder0 = new Coder();
      byte[] byteArray0 = new byte[4];
      coder0.properties = byteArray0;
      InputStream inputStream0 = aES256SHA256Decoder0.decode("rQVi4Ab@h93y", (InputStream) null, (byte)55, coder0, (byte[]) null, (byte)55);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Cannot read encrypted content from rQVi4Ab@h93y without a password.
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AES256SHA256Decoder aES256SHA256Decoder0 = new AES256SHA256Decoder();
      Coder coder0 = new Coder();
      byte[] byteArray0 = new byte[18];
      InputStream inputStream0 = aES256SHA256Decoder0.decode("{Kzs?qRc4PkSTye", (InputStream) null, 1074L, coder0, byteArray0, (-3818));
      DataInputStream dataInputStream0 = new DataInputStream(inputStream0);
      // Undeclared exception!
      try { 
        dataInputStream0.readUnsignedShort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1", e);
      }
  }
}
