/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 03:48:50 GMT 2025
 */

package org.apache.commons.compress.archivers.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.zip.ZipException;
import org.apache.commons.compress.archivers.zip.AsiExtraField;
import org.apache.commons.compress.archivers.zip.ZipShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AsiExtraField_ESTest extends AsiExtraField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = asiExtraField0.getLocalFileDataData();
      try { 
        asiExtraField0.parseFromCentralDirectoryData(byteArray0, (-1256), (-116));
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // The length is too short, only -116 bytes, expected at least 4
         //
         verifyException("org.apache.commons.compress.archivers.zip.AsiExtraField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setLinkedFile("*pI");
      asiExtraField0.getCentralDirectoryData();
      assertTrue(asiExtraField0.isLink());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setUserId(917);
      int int0 = asiExtraField0.getUserId();
      assertEquals(917, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setUserId((-2302));
      int int0 = asiExtraField0.getUserId();
      assertEquals((-2302), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      assertEquals(0, asiExtraField0.getMode());
      
      asiExtraField0.setDirectory(false);
      int int0 = asiExtraField0.getMode();
      assertEquals(32768, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setLinkedFile("-L");
      asiExtraField0.getLinkedFile();
      assertEquals(40960, asiExtraField0.getMode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      assertEquals(0, asiExtraField0.getGroupId());
      
      asiExtraField0.setGroupId(32768);
      int int0 = asiExtraField0.getGroupId();
      assertEquals(32768, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setGroupId((-1));
      int int0 = asiExtraField0.getGroupId();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      // Undeclared exception!
      try { 
        asiExtraField0.setLinkedFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.archivers.zip.AsiExtraField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      // Undeclared exception!
      try { 
        asiExtraField0.parseFromLocalFileData((byte[]) null, 5486, 5486);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = asiExtraField0.getCentralDirectoryData();
      // Undeclared exception!
      try { 
        asiExtraField0.parseFromLocalFileData(byteArray0, 4, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      // Undeclared exception!
      try { 
        asiExtraField0.parseFromCentralDirectoryData((byte[]) null, 2147483646, 2147483646);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        asiExtraField0.parseFromCentralDirectoryData(byteArray0, 14, 14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setDirectory(true);
      int int0 = asiExtraField0.getMode(2320);
      assertEquals(16384, asiExtraField0.getMode());
      assertEquals(18704, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      int int0 = asiExtraField0.getMode(2771);
      assertEquals(35539, int0);
      assertEquals(0, asiExtraField0.getGroupId());
      assertEquals(0, asiExtraField0.getMode());
      assertEquals(0, asiExtraField0.getUserId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setLinkedFile("^n@");
      int int0 = asiExtraField0.getMode(18704);
      assertEquals(40960, asiExtraField0.getMode());
      assertEquals(43280, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = asiExtraField0.getLocalFileDataData();
      asiExtraField0.parseFromLocalFileData(byteArray0, 0, 14);
      assertEquals(32768, asiExtraField0.getMode());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = asiExtraField0.getCentralDirectoryData();
      try { 
        asiExtraField0.parseFromLocalFileData(byteArray0, 0, 6);
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // Bad CRC checksum, expected e38a6876 instead of 41d912ff
         //
         verifyException("org.apache.commons.compress.archivers.zip.AsiExtraField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = asiExtraField0.getCentralDirectoryData();
      try { 
        asiExtraField0.parseFromLocalFileData(byteArray0, (-7), (-7));
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // The length is too short, only -7 bytes, expected at least 4
         //
         verifyException("org.apache.commons.compress.archivers.zip.AsiExtraField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      boolean boolean0 = asiExtraField0.isDirectory();
      assertFalse(boolean0);
      assertEquals(0, asiExtraField0.getUserId());
      assertEquals(0, asiExtraField0.getMode());
      assertEquals(0, asiExtraField0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setDirectory(true);
      boolean boolean0 = asiExtraField0.isDirectory();
      assertEquals(16384, asiExtraField0.getMode());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      boolean boolean0 = asiExtraField0.isLink();
      assertFalse(boolean0);
      assertEquals(0, asiExtraField0.getUserId());
      assertEquals(0, asiExtraField0.getGroupId());
      assertFalse(asiExtraField0.isDirectory());
      assertEquals(0, asiExtraField0.getMode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setLinkedFile("*pI");
      boolean boolean0 = asiExtraField0.isLink();
      assertEquals(40960, asiExtraField0.getMode());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      ZipShort zipShort0 = asiExtraField0.getLocalFileDataLength();
      assertEquals(0, asiExtraField0.getMode());
      assertEquals(14, zipShort0.getValue());
      assertFalse(asiExtraField0.isDirectory());
      assertEquals(0, asiExtraField0.getGroupId());
      assertEquals(0, asiExtraField0.getUserId());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      int int0 = asiExtraField0.getUserId();
      assertEquals(0, asiExtraField0.getGroupId());
      assertFalse(asiExtraField0.isDirectory());
      assertEquals(0, int0);
      assertEquals(0, asiExtraField0.getMode());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      int int0 = asiExtraField0.getMode();
      assertFalse(asiExtraField0.isDirectory());
      assertEquals(0, asiExtraField0.getGroupId());
      assertEquals(0, int0);
      assertEquals(0, asiExtraField0.getUserId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setMode(2);
      assertEquals(32770, asiExtraField0.getMode());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.getLinkedFile();
      assertEquals(0, asiExtraField0.getMode());
      assertFalse(asiExtraField0.isDirectory());
      assertEquals(0, asiExtraField0.getUserId());
      assertEquals(0, asiExtraField0.getGroupId());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      int int0 = asiExtraField0.getGroupId();
      assertEquals(0, asiExtraField0.getUserId());
      assertEquals(0, int0);
      assertEquals(0, asiExtraField0.getMode());
      assertFalse(asiExtraField0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setDirectory(true);
      byte[] byteArray0 = asiExtraField0.getLocalFileDataData();
      asiExtraField0.parseFromLocalFileData(byteArray0, 0, 14);
      assertTrue(asiExtraField0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = asiExtraField0.getCentralDirectoryData();
      try { 
        asiExtraField0.parseFromCentralDirectoryData(byteArray0, 6, 6);
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // Bad CRC checksum, expected 0 instead of 41d912ff
         //
         verifyException("org.apache.commons.compress.archivers.zip.AsiExtraField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.setDirectory(true);
      asiExtraField0.setLinkedFile("*pI");
      boolean boolean0 = asiExtraField0.isDirectory();
      assertEquals(40960, asiExtraField0.getMode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      asiExtraField0.getHeaderId();
      assertEquals(0, asiExtraField0.getGroupId());
      assertEquals(0, asiExtraField0.getUserId());
      assertFalse(asiExtraField0.isDirectory());
      assertEquals(0, asiExtraField0.getMode());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      ZipShort zipShort0 = asiExtraField0.getCentralDirectoryLength();
      assertFalse(asiExtraField0.isDirectory());
      assertEquals(0, asiExtraField0.getMode());
      assertEquals(0, asiExtraField0.getGroupId());
      assertEquals(0, asiExtraField0.getUserId());
      assertEquals(14, zipShort0.getValue());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      AsiExtraField asiExtraField1 = (AsiExtraField)asiExtraField0.clone();
      assertEquals(0, asiExtraField1.getGroupId());
      assertEquals(0, asiExtraField1.getUserId());
      assertNotSame(asiExtraField1, asiExtraField0);
      assertEquals(0, asiExtraField1.getMode());
      assertFalse(asiExtraField1.isDirectory());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AsiExtraField asiExtraField0 = new AsiExtraField();
      byte[] byteArray0 = asiExtraField0.getCentralDirectoryData();
      asiExtraField0.parseFromCentralDirectoryData(byteArray0, 0, 14);
      assertEquals(32768, asiExtraField0.getMode());
  }
}
