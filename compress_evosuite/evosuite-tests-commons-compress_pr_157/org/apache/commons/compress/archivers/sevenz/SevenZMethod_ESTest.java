/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 03:41:49 GMT 2025
 */

package org.apache.commons.compress.archivers.sevenz;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.compress.archivers.sevenz.SevenZMethod;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SevenZMethod_ESTest extends SevenZMethod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)33;
      SevenZMethod sevenZMethod0 = SevenZMethod.byId(byteArray0);
      assertEquals(SevenZMethod.LZMA2, sevenZMethod0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SevenZMethod[] sevenZMethodArray0 = SevenZMethod.values();
      assertEquals(14, sevenZMethodArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SevenZMethod.byId(byteArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SevenZMethod sevenZMethod0 = SevenZMethod.valueOf("COPY");
      byte[] byteArray0 = sevenZMethod0.getId();
      SevenZMethod sevenZMethod1 = SevenZMethod.byId(byteArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(SevenZMethod.COPY, sevenZMethod1);
  }
}
