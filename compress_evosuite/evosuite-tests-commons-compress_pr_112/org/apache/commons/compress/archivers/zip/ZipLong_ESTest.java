/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 05:19:29 GMT 2025
 */

package org.apache.commons.compress.archivers.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.zip.ZipLong;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ZipLong_ESTest extends ZipLong_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ZipLong.putLong(566L, byteArray0, 1);
      assertArrayEquals(new byte[] {(byte)0, (byte)54, (byte)2, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ZipLong zipLong0 = new ZipLong(byteArray0, 0);
      ZipLong zipLong1 = ZipLong.ZIP64_MAGIC;
      boolean boolean0 = zipLong1.equals(zipLong0);
      assertEquals(4294967295L, zipLong1.getValue());
      assertFalse(boolean0);
      assertFalse(zipLong0.equals((Object)zipLong1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.LFH_SIG;
      byte[] byteArray0 = zipLong0.DD_SIG.getBytes();
      // Undeclared exception!
      try { 
        zipLong0.LFH_SIG.putLong(byteArray0, (int) (byte)80);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 80
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      long long0 = ZipLong.getValue(byteArray0, (int) (byte)4);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.LFH_SIG;
      byte[] byteArray0 = zipLong0.DD_SIG.getBytes();
      long long0 = ZipLong.getValue(byteArray0, 0);
      assertEquals(4, byteArray0.length);
      assertEquals(134695760L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      long long0 = ZipLong.getValue(byteArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)1;
      long long0 = ZipLong.getValue(byteArray0);
      assertEquals(256L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ZipLong zipLong0 = new ZipLong((int) (byte)0);
      long long0 = zipLong0.getValue();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZipLong zipLong0 = new ZipLong((-1943));
      long long0 = zipLong0.getValue();
      assertEquals((-1943L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.DD_SIG;
      int int0 = zipLong0.getIntValue();
      assertEquals(134695760, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.ZIP64_MAGIC;
      int int0 = zipLong0.getIntValue();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ZipLong.putLong((long) (-2492), byteArray0, (-2492));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2492
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ZipLong.getValue(byteArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        ZipLong.getValue(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZipLong zipLong0 = null;
      try {
        zipLong0 = new ZipLong((byte[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ZipLong zipLong0 = null;
      try {
        zipLong0 = new ZipLong(byteArray0, 2248);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2248
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ZipLong zipLong0 = null;
      try {
        zipLong0 = new ZipLong(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZipLong.putLong(149L, (byte[]) null, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZipLong.getValue((byte[]) null, (-5069));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ZipLong zipLong0 = new ZipLong(byteArray0);
      assertEquals(0, zipLong0.getIntValue());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = ZipLong.getBytes(67324752L);
      assertArrayEquals(new byte[] {(byte)80, (byte)75, (byte)3, (byte)4}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.AED_SIG;
      ZipLong zipLong1 = ZipLong.SINGLE_SEGMENT_SPLIT_MARKER;
      boolean boolean0 = zipLong0.equals(zipLong1);
      assertEquals(808471376L, zipLong1.getValue());
      assertFalse(zipLong1.equals((Object)zipLong0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.CFH_SIG;
      boolean boolean0 = zipLong0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ZipLong zipLong0 = new ZipLong((int) (byte)0);
      boolean boolean0 = zipLong0.equals(zipLong0);
      assertEquals(0L, zipLong0.getValue());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.CFH_SIG;
      long long0 = zipLong0.getValue();
      assertEquals(33639248L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZipLong.getValue((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ZipLong zipLong0 = new ZipLong(0L);
      int int0 = zipLong0.getIntValue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.CFH_SIG;
      String string0 = zipLong0.toString();
      assertEquals("ZipLong value: 33639248", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.AED_SIG;
      zipLong0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ZipLong zipLong0 = new ZipLong((int) (byte)0);
      ZipLong zipLong1 = (ZipLong)zipLong0.clone();
      assertEquals(0, zipLong1.getIntValue());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ZipLong zipLong0 = ZipLong.AED_SIG;
      // Undeclared exception!
      try { 
        zipLong0.putLong((byte[]) null, 2308);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ZipLong zipLong0 = null;
      try {
        zipLong0 = new ZipLong((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }
}
