/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:28:33 GMT 2025
 */

package org.apache.commons.compress.compressors.gzip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GzipCompressorInputStream_ESTest extends GzipCompressorInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Input is not in the .gz format
         //
         verifyException("org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-70);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(sequenceInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Input is not in the .gz format
         //
         verifyException("org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)114;
      boolean boolean0 = GzipCompressorInputStream.matches(byteArray0, 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = GzipCompressorInputStream.matches(byteArray0, 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        GzipCompressorInputStream.matches(byteArray0, 932);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream((InputStream) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-7), 908);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 908);
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(bufferedInputStream0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-93), 31);
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -93
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Input is not in the .gz format
         //
         verifyException("org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Input is not in the .gz format
         //
         verifyException("org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(byteArrayInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Input is not in the .gz format
         //
         verifyException("org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream(pipedInputStream0, false);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)31;
      boolean boolean0 = GzipCompressorInputStream.matches(byteArray0, 438);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        GzipCompressorInputStream.matches((byte[]) null, 932);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = GzipCompressorInputStream.matches(byteArray0, (-342));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GzipCompressorInputStream gzipCompressorInputStream0 = null;
      try {
        gzipCompressorInputStream0 = new GzipCompressorInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }
}
