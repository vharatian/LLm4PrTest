/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:42:45 GMT 2025
 */

package org.apache.commons.compress.harmony.unpack200;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.harmony.unpack200.CpBands;
import org.apache.commons.compress.harmony.unpack200.Segment;
import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;
import org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry;
import org.apache.commons.compress.harmony.unpack200.bytecode.ConstantPoolEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SegmentConstantPool_ESTest extends SegmentConstantPool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      String[] stringArray0 = new String[6];
      stringArray0[3] = "Unexpected error: ";
      int int0 = segmentConstantPool0.matchSpecificPoolEntryIndex(stringArray0, "Unexpected error: ", (-1163337997));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(9, 2438L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(8, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(6, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(5, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(2, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(1880, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Tried to get a value I don't know about: 1880
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getInitMethodPoolEntry(11, 2, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getInitMethodPoolEntry(4, 4, "attr_definition_layout");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Nothing but CP_METHOD can be an <init>
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(7, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(4, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(3, 690L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(2, 4294967296L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getClassSpecificPoolEntry((-475), 428L, "");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Don't know how to handle -475
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        SegmentConstantPool.regexMatches((String) null, ")j)RrT");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // regex trying to match a pattern I don't know: null
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = SegmentConstantPool.regexMatches("^<init>.*", "LtO6_B");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getClassSpecificPoolEntry(11, 5, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = SegmentConstantPool.regexMatches(".*", ".*");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      int int0 = segmentConstantPool0.matchSpecificPoolEntryIndex(stringArray0, "", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        SegmentConstantPool.regexMatches("^<init>.*", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      // Undeclared exception!
      try { 
        segmentConstantPool0.matchSpecificPoolEntryIndex((String[]) null, (String[]) null, "$#e~)):Qhj'ddeL^", "$#e~)):Qhj'ddeL^", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.matchSpecificPoolEntryIndex(stringArray0, stringArray0, (String) null, (String) null, 128);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // regex trying to match a pattern I don't know: null
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      String[] stringArray0 = new String[3];
      stringArray0[1] = "YfBKrBh";
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        segmentConstantPool0.matchSpecificPoolEntryIndex(stringArray0, stringArray1, "YfBKrBh", (String) null, 44);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.matchSpecificPoolEntryIndex((String[]) null, "9-mx7)Pz7Q/qhDj", 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Tried to get a value I don't know about: ";
      stringArray0[1] = "Tried to get a value I don't know about: ";
      stringArray0[2] = "Tried to get a value I don't know about: ";
      stringArray0[4] = "Tried to get a value I don't know about: ";
      int int0 = segmentConstantPool0.matchSpecificPoolEntryIndex(stringArray0, "Tried to get a value I don't know about: ", 3);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      String[] stringArray0 = new String[4];
      int int0 = segmentConstantPool0.matchSpecificPoolEntryIndex(stringArray0, "uc'mRz-{Xu]fLkiwTDW", 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(8, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(7, 2268L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(6, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(4, 2406L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(3, 1457L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getValue(5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      ClassFileEntry classFileEntry0 = segmentConstantPool0.getValue(2, (-1L));
      assertNull(classFileEntry0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      try { 
        segmentConstantPool0.getValue(2, (-1046L));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot have a negative range
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getInitMethodPoolEntry(4660, 1, "TQY>dLH'2L");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Nothing but CP_METHOD can be an <init>
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(1964, 0L);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Get value incomplete
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(12, 4681);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(11, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(10, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(9, 0L);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // I don't know what to do with descriptors yet
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(8, 1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // I don't know what to do with signatures yet
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(7, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(6, 1593L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(5, 232L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(4, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.CpBands", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      try { 
        segmentConstantPool0.getConstantPoolEntry(1, (-3L));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot have a negative range
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool(cpBands0);
      ConstantPoolEntry constantPoolEntry0 = segmentConstantPool0.getConstantPoolEntry((-320), (-1L));
      assertNull(constantPoolEntry0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SegmentConstantPool segmentConstantPool0 = new SegmentConstantPool((CpBands) null);
      // Undeclared exception!
      try { 
        segmentConstantPool0.getConstantPoolEntry(2, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getClassSpecificPoolEntry(12, 7, "Edo<;$=Vci('(a>%a%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getClassSpecificPoolEntry(10, 9, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "#c(5g*)4(4rYq";
      int int0 = segmentConstantPool0.matchSpecificPoolEntryIndex(stringArray0, stringArray0, "#c(5g*)4(4rYq", "^<init>.*", 2);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean boolean0 = SegmentConstantPool.regexMatches("^<init>.*", "*`_");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0);
      SegmentConstantPool segmentConstantPool0 = cpBands0.getConstantPool();
      // Undeclared exception!
      try { 
        segmentConstantPool0.getClassPoolEntry("Don't know how to handle ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache$CachedArray", e);
      }
  }
}
