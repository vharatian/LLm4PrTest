/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 18:54:00 GMT 2025
 */

package org.apache.commons.compress.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.commons.compress.utils.ParsingUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ParsingUtils_ESTest extends ParsingUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = ParsingUtils.parseLongValue("q", 35);
      assertEquals(26L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long long0 = ParsingUtils.parseLongValue("2");
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long long0 = ParsingUtils.parseLongValue("-8");
      assertEquals((-8L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = ParsingUtils.parseIntValue("2", 23);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = ParsingUtils.parseIntValue("0");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = ParsingUtils.parseIntValue("9");
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      try { 
        ParsingUtils.parseLongValue("2", 2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to parse long from string value: 2
         //
         verifyException("org.apache.commons.compress.utils.ParsingUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      try { 
        ParsingUtils.parseLongValue("H:]F'a+g-e");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to parse long from string value: H:]F'a+g-e
         //
         verifyException("org.apache.commons.compress.utils.ParsingUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      try { 
        ParsingUtils.parseIntValue("", 10);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to parse int from string value: 
         //
         verifyException("org.apache.commons.compress.utils.ParsingUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      try { 
        ParsingUtils.parseIntValue("");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to parse int from string value: 
         //
         verifyException("org.apache.commons.compress.utils.ParsingUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = ParsingUtils.parseIntValue("-8", 10);
      assertEquals((-8), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long long0 = ParsingUtils.parseLongValue("-8", 10);
      assertEquals((-8L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = ParsingUtils.parseIntValue("-3");
      assertEquals((-3), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long long0 = ParsingUtils.parseLongValue("0");
      assertEquals(0L, long0);
  }
}
