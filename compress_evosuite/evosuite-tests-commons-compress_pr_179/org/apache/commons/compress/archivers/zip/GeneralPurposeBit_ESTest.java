/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 02:29:25 GMT 2025
 */

package org.apache.commons.compress.archivers.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.archivers.zip.GeneralPurposeBit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GeneralPurposeBit_ESTest extends GeneralPurposeBit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-71);
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, 1);
      boolean boolean0 = generalPurposeBit0.usesUTF8ForNames();
      assertFalse(generalPurposeBit0.usesEncryption());
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      assertFalse(generalPurposeBit0.usesStrongEncryption());
      
      generalPurposeBit0.useStrongEncryption(true);
      boolean boolean0 = generalPurposeBit0.usesEncryption();
      assertTrue(generalPurposeBit0.usesStrongEncryption());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      
      generalPurposeBit0.useDataDescriptor(true);
      boolean boolean0 = generalPurposeBit0.usesDataDescriptor();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      int int0 = generalPurposeBit0.getSlidingDictionarySize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)4);
      int int0 = generalPurposeBit0.getNumberOfShannonFanoTrees();
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      assertFalse(generalPurposeBit0.usesEncryption());
      assertEquals(2, int0);
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeneralPurposeBit.parse((byte[]) null, 2048);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        GeneralPurposeBit.parse(byteArray0, (byte)8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      // Undeclared exception!
      try { 
        generalPurposeBit0.encode((byte[]) null, 2048);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      generalPurposeBit0.useStrongEncryption(true);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        generalPurposeBit0.encode(byteArray0, (int) (byte)65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65
         //
         verifyException("org.apache.commons.compress.utils.ByteUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, 0);
      generalPurposeBit0.useStrongEncryption(false);
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertFalse(generalPurposeBit0.usesEncryption());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      generalPurposeBit0.useUTF8ForNames(true);
      GeneralPurposeBit generalPurposeBit1 = new GeneralPurposeBit();
      boolean boolean0 = generalPurposeBit0.equals(generalPurposeBit1);
      assertTrue(generalPurposeBit0.usesUTF8ForNames());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-64);
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)2);
      GeneralPurposeBit generalPurposeBit1 = new GeneralPurposeBit();
      boolean boolean0 = generalPurposeBit0.equals(generalPurposeBit1);
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      assertFalse(boolean0);
      assertFalse(generalPurposeBit0.usesEncryption());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      generalPurposeBit0.useEncryption(true);
      GeneralPurposeBit generalPurposeBit1 = new GeneralPurposeBit();
      boolean boolean0 = generalPurposeBit0.equals(generalPurposeBit1);
      assertTrue(generalPurposeBit0.usesEncryption());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      Object object0 = new Object();
      boolean boolean0 = generalPurposeBit0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      boolean boolean0 = generalPurposeBit0.equals(generalPurposeBit0);
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertTrue(boolean0);
      assertFalse(generalPurposeBit0.usesEncryption());
      assertFalse(generalPurposeBit0.usesDataDescriptor());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      generalPurposeBit0.useDataDescriptor(true);
      generalPurposeBit0.hashCode();
      assertTrue(generalPurposeBit0.usesDataDescriptor());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      generalPurposeBit0.useUTF8ForNames(true);
      generalPurposeBit0.hashCode();
      assertTrue(generalPurposeBit0.usesUTF8ForNames());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      assertFalse(generalPurposeBit0.usesEncryption());
      
      generalPurposeBit0.useStrongEncryption(true);
      generalPurposeBit0.hashCode();
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)93;
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertTrue(generalPurposeBit0.usesStrongEncryption());
      assertTrue(generalPurposeBit0.usesDataDescriptor());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertTrue(generalPurposeBit0.usesEncryption());
      assertFalse(generalPurposeBit0.usesStrongEncryption());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      assertFalse(generalPurposeBit0.usesStrongEncryption());
      
      generalPurposeBit0.useStrongEncryption(true);
      generalPurposeBit0.encode();
      assertTrue(generalPurposeBit0.usesStrongEncryption());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      byte[] byteArray0 = new byte[7];
      generalPurposeBit0.useUTF8ForNames(true);
      generalPurposeBit0.encode(byteArray0, (int) (byte)0);
      assertTrue(generalPurposeBit0.usesUTF8ForNames());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      byte[] byteArray0 = new byte[9];
      generalPurposeBit0.useDataDescriptor(true);
      generalPurposeBit0.encode(byteArray0, 0);
      assertTrue(generalPurposeBit0.usesDataDescriptor());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      generalPurposeBit0.useEncryption(true);
      boolean boolean0 = generalPurposeBit0.usesStrongEncryption();
      assertTrue(generalPurposeBit0.usesEncryption());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      assertFalse(generalPurposeBit0.usesStrongEncryption());
      
      generalPurposeBit0.useStrongEncryption(true);
      boolean boolean0 = generalPurposeBit0.usesStrongEncryption();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      boolean boolean0 = generalPurposeBit0.usesStrongEncryption();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      Object object0 = generalPurposeBit0.clone();
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      
      generalPurposeBit0.useDataDescriptor(true);
      boolean boolean0 = object0.equals(generalPurposeBit0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      boolean boolean0 = generalPurposeBit0.usesDataDescriptor();
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertFalse(generalPurposeBit0.usesEncryption());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      boolean boolean0 = generalPurposeBit0.usesEncryption();
      assertFalse(boolean0);
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertFalse(generalPurposeBit0.usesDataDescriptor());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      boolean boolean0 = generalPurposeBit0.usesUTF8ForNames();
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      assertFalse(generalPurposeBit0.usesEncryption());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      GeneralPurposeBit generalPurposeBit0 = GeneralPurposeBit.parse(byteArray0, (byte)0);
      int int0 = generalPurposeBit0.getSlidingDictionarySize();
      assertFalse(generalPurposeBit0.usesUTF8ForNames());
      assertFalse(generalPurposeBit0.usesDataDescriptor());
      assertEquals(4096, int0);
      assertFalse(generalPurposeBit0.usesEncryption());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GeneralPurposeBit generalPurposeBit0 = new GeneralPurposeBit();
      int int0 = generalPurposeBit0.getNumberOfShannonFanoTrees();
      assertEquals(0, int0);
  }
}
