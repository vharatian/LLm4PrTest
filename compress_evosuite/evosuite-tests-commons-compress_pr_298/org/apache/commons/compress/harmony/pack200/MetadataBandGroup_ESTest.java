/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:12:36 GMT 2025
 */

package org.apache.commons.compress.harmony.pack200;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.NoSuchElementException;
import org.apache.commons.compress.harmony.pack200.CPSignature;
import org.apache.commons.compress.harmony.pack200.CpBands;
import org.apache.commons.compress.harmony.pack200.MetadataBandGroup;
import org.apache.commons.compress.harmony.pack200.Segment;
import org.apache.commons.compress.harmony.pack200.SegmentHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MetadataBandGroup_ESTest extends MetadataBandGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = segment0.getSegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("/oNZOyN>?b#I%", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.add("UI3jt@8EE3M7z2");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      int[] intArray0 = new int[4];
      intArray0[2] = 1;
      intArray0[3] = (-1392608790);
      metadataBandGroup0.addParameterAnnotation((-1392608790), intArray0, metadataBandGroup0.anno_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      metadataBandGroup0.removeLatest();
      assertTrue(metadataBandGroup0.hasContent());
      
      metadataBandGroup0.removeLatest();
      assertFalse(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = segment0.getSegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("/oNZOyN>?b#I%", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.add("UI3jt@8EE3M7z2");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      int[] intArray0 = new int[4];
      intArray0[2] = 1;
      metadataBandGroup0.addParameterAnnotation((-1392608790), intArray0, metadataBandGroup0.nestpair_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      metadataBandGroup0.removeLatest();
      // Undeclared exception!
      try { 
        metadataBandGroup0.removeLatest();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.IntList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("5-2p0D'/EhRMc>I", 4245, (CpBands) null, (SegmentHeader) null, 0);
      int[] intArray0 = new int[3];
      LinkedList<String> linkedList3 = new LinkedList<String>();
      metadataBandGroup0.addParameterAnnotation(4, intArray0, metadataBandGroup0.casearray_N, linkedList3, linkedList3, linkedList3, linkedList1, linkedList2, list0, list0, linkedList2);
      assertEquals(0, metadataBandGroup0.numBackwardsCalls());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 68);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("rTEw!rNh-'Pgk", 2515, cpBands0, segmentHeader0, (-865));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation((String) null, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3112);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        metadataBandGroup0.pack(mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BandSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("lmg/O#fyPidJMp:", (-691), cpBands0, (SegmentHeader) null, (-691));
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      metadataBandGroup0.addAnnotation("lmg/O#fyPidJMp:", linkedList2, linkedList2, linkedList0, linkedList1, linkedList2, linkedList2, linkedList1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("lmg/O#fyPidJMp:");
      try { 
        metadataBandGroup0.pack(mockFileOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 0);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("", 0, cpBands0, segmentHeader0, 0);
      int[] intArray0 = new int[2];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      metadataBandGroup0.addParameterAnnotation(0, intArray0, metadataBandGroup0.param_NB, metadataBandGroup0.T, metadataBandGroup0.T, metadataBandGroup0.T, linkedList0, linkedList1, metadataBandGroup0.T, metadataBandGroup0.T, linkedList1);
      metadataBandGroup0.incrementAnnoN();
      assertEquals(0, metadataBandGroup0.numBackwardsCalls());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("s");
      int[] intArray0 = new int[0];
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList2.add((Object) null);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("s", 262144, cpBands0, (SegmentHeader) null, 262144);
      metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.anno_N, linkedList1, linkedList1, linkedList1, linkedList2, linkedList0, linkedList1, linkedList1, linkedList0);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList1.addFirst("e");
      linkedList2.offerLast("e");
      linkedList2.addFirst("e");
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("e", 262144, cpBands0, (SegmentHeader) null, 262144);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.casearray_N, linkedList1, linkedList1, linkedList1, linkedList2, linkedList0, linkedList1, linkedList1, (List<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.MetadataBandGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList1.addFirst("e");
      linkedList2.offerLast("e");
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("e", 262144, cpBands0, (SegmentHeader) null, 262144);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.casearray_N, linkedList1, linkedList1, linkedList1, linkedList2, linkedList0, linkedList1, linkedList1, (List<Integer>) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("rTEw!rMNh-'Pgk", 262144, cpBands0, (SegmentHeader) null, 23);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("c");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList1.add((Object) "c");
      int[] intArray0 = new int[0];
      metadataBandGroup0.addParameterAnnotation(55, intArray0, metadataBandGroup0.pair_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("C", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("J");
      linkedList1.addLast((Object) null);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      int[] intArray0 = new int[1];
      metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.casearray_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("=", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("F");
      Float float0 = new Float(753.401566436);
      linkedList1.add((Object) float0);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      int[] intArray0 = new int[0];
      metadataBandGroup0.addParameterAnnotation(860, intArray0, metadataBandGroup0.param_NB, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("lmg/O#fyPidJMp:", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) null);
      linkedList0.addFirst("D");
      int[] intArray0 = new int[11];
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.nestpair_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("lmg/O#yPidJMbp:", 262144, cpBands0, (SegmentHeader) null, 23);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) null);
      linkedList0.addFirst("Z");
      int[] intArray0 = new int[2];
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addParameterAnnotation(23, intArray0, metadataBandGroup0.nestpair_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("s");
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList2.add((Object) "s");
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("s", 130, cpBands0, (SegmentHeader) null, 130);
      metadataBandGroup0.addAnnotation("s", linkedList1, linkedList1, linkedList2, linkedList0, linkedList1, linkedList1, linkedList0);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("C", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("e");
      linkedList1.add((Object) null);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        metadataBandGroup0.addAnnotation("e", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("S", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("c");
      linkedList1.add((Object) "c");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation("c", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) null);
      linkedList0.add("J");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation("", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("=", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("F");
      Float float0 = new Float(753.401566436);
      linkedList1.add((Object) float0);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation("F", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup(":j", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      linkedList0.add("D");
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList2.add((Object) null);
      metadataBandGroup0.addAnnotation(":j", linkedList0, linkedList0, linkedList2, linkedList1, linkedList0, linkedList0, linkedList1);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("8L:U'oH R", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) null);
      linkedList0.addFirst("Z");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation("Z", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 70);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("AD", 262144, cpBands0, (SegmentHeader) null, 70);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList2.add((Integer) segment0.ASM_API);
      metadataBandGroup0.addAnnotation("AD", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      int int0 = metadataBandGroup0.numBackwardsCalls();
      assertEquals(524288, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 469);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("s", 98, cpBands0, (SegmentHeader) null, 210);
      int[] intArray0 = new int[5];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-2686));
      linkedList1.add(integer0);
      metadataBandGroup0.addParameterAnnotation(210, intArray0, metadataBandGroup0.param_NB, metadataBandGroup0.T, metadataBandGroup0.T, metadataBandGroup0.T, linkedList0, linkedList1, metadataBandGroup0.T, metadataBandGroup0.T, linkedList1);
      int int0 = metadataBandGroup0.numBackwardsCalls();
      assertEquals((-5372), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("", (-1047), (CpBands) null, segmentHeader0, 4470);
      metadataBandGroup0.anno_N = null;
      // Undeclared exception!
      try { 
        metadataBandGroup0.removeLatest();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.MetadataBandGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("lmg/O#fyPidJMp:", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<CPSignature> linkedList2 = new LinkedList<CPSignature>();
      metadataBandGroup0.type_RS = (List<CPSignature>) linkedList2;
      LinkedList<Integer> linkedList3 = new LinkedList<Integer>();
      int[] intArray0 = new int[6];
      intArray0[5] = 1;
      metadataBandGroup0.addParameterAnnotation(494, intArray0, metadataBandGroup0.nestpair_N, metadataBandGroup0.T, linkedList0, linkedList0, linkedList1, linkedList3, metadataBandGroup0.T, metadataBandGroup0.T, linkedList3);
      // Undeclared exception!
      try { 
        metadataBandGroup0.removeLatest();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Segment segment0 = new Segment();
      SegmentHeader segmentHeader0 = new SegmentHeader();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList0.add("lglOPBJNbB:");
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("lglOPBJNbB:", (-665), cpBands0, segmentHeader0, (-665));
      int[] intArray0 = new int[0];
      metadataBandGroup0.addParameterAnnotation((-2078275815), intArray0, metadataBandGroup0.pair_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        metadataBandGroup0.pack(pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The codec (1,256) does not encode the value -2078275815
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BHSDCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("AD", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.offerFirst("");
      metadataBandGroup0.addAnnotation("AD", linkedList2, linkedList2, linkedList0, linkedList1, linkedList2, linkedList2, linkedList1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("AD", true);
      // Undeclared exception!
      try { 
        metadataBandGroup0.pack(mockFileOutputStream0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("?F/JN&Z]jH'xaAT(", 4, cpBands0, segmentHeader0, 4);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      metadataBandGroup0.addAnnotation("net.bytebuddy.build.CachedReturnPlugin$CacheFieldOffsetMapping", linkedList2, linkedList2, linkedList0, linkedList1, linkedList2, linkedList2, linkedList1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("?F/JN&Z]jH'xaAT(");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        metadataBandGroup0.pack(bufferedOutputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Index should be > 0
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BandSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("EB", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation("EB", metadataBandGroup0.T, metadataBandGroup0.T, linkedList0, linkedList1, metadataBandGroup0.T, metadataBandGroup0.T, linkedList1);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.pair_N, (List<String>) null, (List<String>) null, (List<String>) null, linkedList0, linkedList1, (List<String>) null, (List<String>) null, linkedList1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("=", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("=");
      int[] intArray0 = cpBands0.cpEntryListToArray(metadataBandGroup0.type_RS);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation("?S", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      // Undeclared exception!
      try { 
        metadataBandGroup0.addParameterAnnotation(2, intArray0, metadataBandGroup0.nestpair_N, linkedList0, linkedList0, metadataBandGroup0.T, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("C", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("C");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList1.add((Object) segment0);
      int[] intArray0 = new int[14];
      // Undeclared exception!
      try { 
        metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.casearray_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.compress.harmony.pack200.Segment cannot be cast to java.lang.Integer
         //
         verifyException("org.apache.commons.compress.harmony.pack200.MetadataBandGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("jn", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList0.add(")~iP");
      List<String> list0 = metadataBandGroup0.T;
      metadataBandGroup0.addAnnotation(")~iP", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, list0, linkedList2);
      // Undeclared exception!
      try { 
        metadataBandGroup0.addAnnotation(")~iP", linkedList0, list0, linkedList1, linkedList2, list0, metadataBandGroup0.T, linkedList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("G]kC%2-$'J", 262144, (CpBands) null, segmentHeader0, 262144);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        metadataBandGroup0.addAnnotation("G]kC%2-$'J", metadataBandGroup0.T, metadataBandGroup0.T, linkedList1, linkedList0, metadataBandGroup0.T, metadataBandGroup0.T, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.MetadataBandGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("C", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.add((Object) "C");
      linkedList0.addFirst("C");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        metadataBandGroup0.addAnnotation("C", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Integer
         //
         verifyException("org.apache.commons.compress.harmony.pack200.MetadataBandGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("C", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      metadataBandGroup0.addAnnotation("C", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      boolean boolean0 = metadataBandGroup0.hasContent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("", 0, (CpBands) null, (SegmentHeader) null, 4245);
      metadataBandGroup0.hasContent();
      assertEquals(0, metadataBandGroup0.numBackwardsCalls());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Segment segment0 = new Segment();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      CpBands cpBands0 = new CpBands(segment0, (-1872));
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("\"sT<<s.u=8d':", 630, cpBands0, segmentHeader0, 240);
      metadataBandGroup0.addAnnotation("", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      metadataBandGroup0.newEntryInAnnoN();
      assertTrue(metadataBandGroup0.hasContent());
      
      metadataBandGroup0.removeLatest();
      assertFalse(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup(" nestname_RU", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList0.add("S");
      // Undeclared exception!
      try { 
        metadataBandGroup0.addAnnotation(" nestname_RU", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("I", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      linkedList0.add("I");
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        metadataBandGroup0.addAnnotation("I", linkedList0, linkedList0, linkedList2, linkedList1, linkedList0, linkedList0, linkedList1);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("B", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("B");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        metadataBandGroup0.addAnnotation("B", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("@");
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("c", 2, cpBands0, (SegmentHeader) null, 262144);
      metadataBandGroup0.addAnnotation("c", linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      metadataBandGroup0.newEntryInAnnoN();
      // Undeclared exception!
      try { 
        metadataBandGroup0.removeLatest();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.compress.harmony.pack200.IntList", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("Container creation requires a single int-typed argument: ", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList0.add("S");
      int[] intArray0 = new int[4];
      // Undeclared exception!
      try { 
        metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.anno_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("lg/OPiJMbp:", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("I");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      int[] intArray0 = new int[9];
      // Undeclared exception!
      try { 
        metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.anno_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("B", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.addFirst("B");
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      int[] intArray0 = new int[23];
      // Undeclared exception!
      try { 
        metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.anno_N, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("Container creation requires a single int-typed argument: ", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList0.add("Container creation requires a single int-typed argument: ");
      int[] intArray0 = new int[10];
      metadataBandGroup0.addParameterAnnotation(262144, intArray0, metadataBandGroup0.param_NB, linkedList0, linkedList0, linkedList0, linkedList1, linkedList2, linkedList0, linkedList0, linkedList2);
      metadataBandGroup0.newEntryInAnnoN();
      // Undeclared exception!
      try { 
        metadataBandGroup0.removeLatest();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("lmg/O#fyPidJMp:", 262144, cpBands0, segmentHeader0, 262144);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      metadataBandGroup0.addAnnotation("lmg/O#fyPidJMp:", linkedList2, linkedList2, linkedList0, linkedList1, linkedList2, linkedList2, linkedList1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("lmg/O#fyPidJMp:");
      // Undeclared exception!
      try { 
        metadataBandGroup0.pack(mockFileOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 262144
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BandSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 70);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("", (-13), cpBands0, (SegmentHeader) null, (-13));
      MetadataBandGroup metadataBandGroup1 = new MetadataBandGroup("--;BdHH&F``r+", 1, cpBands0, (SegmentHeader) null, 70);
      metadataBandGroup1.addAnnotation(".))W'", metadataBandGroup0.T, linkedList2, linkedList1, linkedList0, linkedList2, linkedList2, linkedList0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("SIV.p7(tt_6ykgT*`J", true);
      // Undeclared exception!
      try { 
        metadataBandGroup1.pack(mockFileOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 70
         //
         verifyException("org.apache.commons.compress.harmony.pack200.BandSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("C", 262144, cpBands0, (SegmentHeader) null, 262144);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      MetadataBandGroup metadataBandGroup1 = new MetadataBandGroup("C", 0, cpBands0, (SegmentHeader) null, 2);
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      metadataBandGroup1.addAnnotation("K(#pB^~E\"vPzWUUiP", linkedList0, linkedList0, linkedList2, linkedList1, metadataBandGroup0.T, metadataBandGroup0.T, linkedList1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("K(#pB^~E\"vPzWUUiP");
      try { 
        metadataBandGroup1.pack(mockFileOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("rTEw!rMNh-'Pgk", 262144, cpBands0, (SegmentHeader) null, 23);
      assertFalse(metadataBandGroup0.hasContent());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("rTEw!rMNh-'Pgk", false);
      metadataBandGroup0.pack(mockFileOutputStream0);
      assertEquals(0, metadataBandGroup0.numBackwardsCalls());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("AD", 262144, cpBands0, segmentHeader0, 9);
      assertFalse(metadataBandGroup0.hasContent());
      
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      metadataBandGroup0.addAnnotation("AD", linkedList2, linkedList2, linkedList0, linkedList1, linkedList2, linkedList2, linkedList1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("3>DoG!jk*jocafw");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 262144);
      metadataBandGroup0.pack(bufferedOutputStream0);
      assertTrue(metadataBandGroup0.hasContent());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SegmentHeader segmentHeader0 = new SegmentHeader();
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("M%heymP=w>:", 3, (CpBands) null, segmentHeader0, 3);
      // Undeclared exception!
      try { 
        metadataBandGroup0.incrementAnnoN();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.compress.harmony.pack200.IntList", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Segment segment0 = new Segment();
      CpBands cpBands0 = new CpBands(segment0, 262144);
      MetadataBandGroup metadataBandGroup0 = new MetadataBandGroup("rTEw!rMNh-'Pgk", 262144, cpBands0, (SegmentHeader) null, 23);
      int int0 = metadataBandGroup0.numBackwardsCalls();
      assertEquals(0, int0);
  }
}
