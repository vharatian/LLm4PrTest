/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:51:33 GMT 2025
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.DuplicateFormatFlagsException;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.IllegalFormatFlagsException;
import java.util.IllegalFormatPrecisionException;
import java.util.IllegalFormatWidthException;
import java.util.MissingFormatArgumentException;
import java.util.MissingFormatWidthException;
import java.util.UnknownFormatConversionException;
import org.apache.commons.text.lookup.IllegalArgumentExceptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IllegalArgumentExceptions_ESTest extends IllegalArgumentExceptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[22];
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, "u}w5QbY$at%`\fm6?R", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '`'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, "0P%-h;7{St\"z]~", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-h
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format((Throwable) null, "DLj_C0l%gbB'>", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%g'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      MockThrowable mockThrowable0 = new MockThrowable("");
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, "cF%1nQ@h})J<1)C,,", objectArray0);
        fail("Expecting exception: IllegalFormatWidthException");
      
      } catch(IllegalFormatWidthException e) {
         //
         // 1
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, "Cjz)T<%,%z_5", objectArray0);
        fail("Expecting exception: IllegalFormatFlagsException");
      
      } catch(IllegalFormatFlagsException e) {
         //
         // Flags = ','
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "h?GhNA%A5";
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format((Throwable) null, "h?GhNA%A5", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // a != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format((Throwable) null, "DFjh_Cb%#b,B'r`", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = b, Flags = #
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, "CjzT1)T<%,,%`_5H", objectArray0);
        fail("Expecting exception: DuplicateFormatFlagsException");
      
      } catch(DuplicateFormatFlagsException e) {
         //
         // Flags = ','
         //
         verifyException("java.util.Formatter$Flags", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(mockThrowable0, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format(")lO Ro%[q~hE:M", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '['
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("0P%-h;7{St\"z]~", objectArray0);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-h
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("}qs!j&WJQLO%b?;R'bR", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%b'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("%.7nGj_mAY", objectArray0);
        fail("Expecting exception: IllegalFormatPrecisionException");
      
      } catch(IllegalFormatPrecisionException e) {
         //
         // 7
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("DFjh_Cb%#%,B'r3", objectArray0);
        fail("Expecting exception: IllegalFormatFlagsException");
      
      } catch(IllegalFormatFlagsException e) {
         //
         // Flags = '#'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "oRj+R'%a~GdE";
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("oRj+R'%a~GdE", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // a != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("DFjh_Cb%#b,B'r`", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = b, Flags = #
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("CjzT1)T<%,,%`_5H", objectArray0);
        fail("Expecting exception: DuplicateFormatFlagsException");
      
      } catch(DuplicateFormatFlagsException e) {
         //
         // Flags = ','
         //
         verifyException("java.util.Formatter$Flags", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format((String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      IllegalArgumentException illegalArgumentException0 = IllegalArgumentExceptions.format("", objectArray0);
      IllegalArgumentException illegalArgumentException1 = IllegalArgumentExceptions.format(illegalArgumentException0, "", objectArray0);
      assertNotSame(illegalArgumentException0, illegalArgumentException1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        IllegalArgumentExceptions.format("\"cO9l_Yz#Epc%4n'.", (Object[]) null);
        fail("Expecting exception: IllegalFormatWidthException");
      
      } catch(IllegalFormatWidthException e) {
         //
         // 4
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }
}
