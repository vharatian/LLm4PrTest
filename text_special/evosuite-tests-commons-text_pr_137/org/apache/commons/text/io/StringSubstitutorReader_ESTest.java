/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:45:16 GMT 2025
 */

package org.apache.commons.text.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedReader;
import java.io.StringReader;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.text.StringSubstitutor;
import org.apache.commons.text.io.StringSubstitutorReader;
import org.apache.commons.text.lookup.StringLookup;
import org.apache.commons.text.matcher.StringMatcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class StringSubstitutorReader_ESTest extends StringSubstitutorReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((StringLookup) null, "", "kI.", '*', "");
      char[] charArray0 = new char[6];
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read(charArray0, 12, (-1174));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kyu.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read(charArray0, 121, 121);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -120
         //
         verifyException("org.apache.commons.text.TextStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.text.io.StringSubstitutorReader");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read((char[]) null, 111, 111);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      BufferedReader bufferedReader0 = new BufferedReader(pipedReader0, 312);
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(bufferedReader0, stringSubstitutor0);
      char[] charArray0 = new char[3];
      try { 
        stringSubstitutorReader0.read(charArray0, 568, 312);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(mockFileReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(pipedReader0, stringSubstitutor0);
      try { 
        stringSubstitutorReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      StringSubstitutorReader stringSubstitutorReader0 = null;
      try {
        stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, (StringSubstitutor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((StringLookup) null, "", "kI.", '*', "");
      char[] charArray0 = new char[6];
      stringReader0.read();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      // Undeclared exception!
      stringSubstitutorReader0.read(charArray0, 12, 2110);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((StringLookup) null, "", "kI.", '*', "");
      char[] charArray0 = new char[6];
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read(charArray0, (-1306), 1746);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.TextStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringMatcher stringMatcher0 = StringSubstitutor.DEFAULT_PREFIX;
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, stringMatcher0, stringMatcher0, 'T');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read(charArray0, 0, 127);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kyu.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      stringSubstitutorReader0.read(charArray0, 107, 107);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kyu.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[1];
      int int0 = stringSubstitutorReader0.read(charArray0);
      assertEquals(1, int0);
      assertArrayEquals(new char[] {'k'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      char[] charArray0 = new char[6];
      StringMatcher stringMatcher0 = StringSubstitutor.DEFAULT_VALUE_DELIMITER;
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, stringMatcher0, stringMatcher0, '*');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(107, int0);
      
      int int1 = stringSubstitutorReader0.read(charArray0);
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, "Invalid startIndex: ", "XBhLs-s1.8#l}Ca#", 'K', "");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[2];
      int int0 = stringSubstitutorReader0.read(charArray0, (-308), 458);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, "Invalid startIndex: ", "XBhLs-s1.8#l}Ca#", 'K', "");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[5];
      int int0 = stringSubstitutorReader0.read(charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringMatcher stringMatcher0 = StringSubstitutor.DEFAULT_PREFIX;
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, stringMatcher0, stringMatcher0, 'T');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read(charArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      char[] charArray0 = new char[2];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor1 = new StringSubstitutor((StringLookup) null, stringSubstitutor0.DEFAULT_SUFFIX, stringSubstitutor0.DEFAULT_VALUE_DELIMITER, '*');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor1);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(0, int0);
      
      int int1 = stringSubstitutorReader0.read(charArray0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x|hIJB ye3Hj#");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[0];
      int int0 = stringSubstitutorReader0.read(charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      char[] charArray0 = new char[1];
      StringMatcher stringMatcher0 = StringSubstitutor.DEFAULT_VALUE_DELIMITER;
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, stringMatcher0, stringMatcher0, '&');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(107, int0);
      
      int int1 = stringSubstitutorReader0.read(charArray0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((StringLookup) null, "", "kI.", '*', "");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[4];
      stringSubstitutor0.setVariableSuffix("}");
      // Undeclared exception!
      stringSubstitutorReader0.read(charArray0, 545, 2500);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      stringReader0.read();
      HashMap<String, StringSubstitutor> hashMap0 = new HashMap<String, StringSubstitutor>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, StringSubstitutor>) hashMap0, "kI.", "");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[0];
      int int0 = stringSubstitutorReader0.read(charArray0, 106, 106);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<Ros&OZZB)% _@l>Q\"");
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      stringSubstitutorReader0.read();
      int int0 = stringSubstitutorReader0.read();
      assertEquals(82, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Object>) hashMap0, "", "kI.");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      stringSubstitutorReader0.read();
      StringSubstitutorReader stringSubstitutorReader1 = new StringSubstitutorReader(stringSubstitutorReader0, stringSubstitutor0);
      // Undeclared exception!
      stringSubstitutorReader1.read();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      StringSubstitutorReader stringSubstitutorReader1 = new StringSubstitutorReader(stringSubstitutorReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader1.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kyu.");
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      StringSubstitutorReader stringSubstitutorReader1 = new StringSubstitutorReader(stringSubstitutorReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader1.read();
      assertEquals(107, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(107, int0);
      
      int int1 = stringSubstitutorReader0.read();
      assertEquals(73, int1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((StringLookup) null, "", "kI.", '*', "");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(107, int0);
      
      char[] charArray0 = new char[6];
      int int1 = stringSubstitutorReader0.read(charArray0, 1, 107);
      assertEquals(2, int1);
      
      int int2 = stringSubstitutorReader0.read(charArray0, (-2515), 2);
      assertEquals((-1), int2);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kI.");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Object>) hashMap0, "kI.", "kI.");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      StringSubstitutorReader stringSubstitutorReader1 = new StringSubstitutorReader(stringSubstitutorReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader1.read();
      assertEquals(107, int0);
  }
}
