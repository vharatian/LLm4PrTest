/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 22:03:37 GMT 2025
 */

package org.apache.commons.text.similarity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.text.similarity.JaroWinklerDistance;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class JaroWinklerDistance_ESTest extends JaroWinklerDistance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = '=';
      charArray0[2] = 'b';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(3);
      Double double0 = jaroWinklerDistance0.apply(charBuffer0, charBuffer1);
      assertEquals(0.6507936507936508, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int[] intArray0 = JaroWinklerDistance.matches(charBuffer0, charBuffer0);
      assertArrayEquals(new int[] {2, 0, 2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2562);
      // Undeclared exception!
      JaroWinklerDistance.matches(charBuffer0, charBuffer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        JaroWinklerDistance.matches((CharSequence) null, charBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.similarity.JaroWinklerDistance", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.append((CharSequence) charBuffer1);
      // Undeclared exception!
      try { 
        JaroWinklerDistance.matches(charBuffer1, charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(259);
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      // Undeclared exception!
      jaroWinklerDistance0.apply(charBuffer0, charBuffer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.append((CharSequence) charBuffer1);
      // Undeclared exception!
      try { 
        jaroWinklerDistance0.apply(charBuffer1, charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      char[] charArray0 = new char[3];
      charArray0[2] = '2';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[9];
      charArray1[0] = '2';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray1);
      Double double0 = jaroWinklerDistance0.apply(charBuffer0, charBuffer1);
      assertEquals(0.6666666666666666, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate(3);
      Double double0 = jaroWinklerDistance0.apply(charBuffer0, charBuffer1);
      assertEquals(0.8666666666666668, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      char[] charArray0 = new char[3];
      charArray0[2] = '2';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[9];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray1);
      Double double0 = jaroWinklerDistance0.apply(charBuffer0, charBuffer1);
      assertEquals(0.6296296296296297, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      Double double0 = jaroWinklerDistance0.apply(charBuffer0, charBuffer0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      CharBuffer charBuffer0 = CharBuffer.allocate(3);
      // Undeclared exception!
      try { 
        jaroWinklerDistance0.apply(charBuffer0, (CharSequence) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // CharSequences must not be null
         //
         verifyException("org.apache.commons.text.similarity.JaroWinklerDistance", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JaroWinklerDistance jaroWinklerDistance0 = new JaroWinklerDistance();
      // Undeclared exception!
      try { 
        jaroWinklerDistance0.apply((CharSequence) null, (CharSequence) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // CharSequences must not be null
         //
         verifyException("org.apache.commons.text.similarity.JaroWinklerDistance", e);
      }
  }
}
