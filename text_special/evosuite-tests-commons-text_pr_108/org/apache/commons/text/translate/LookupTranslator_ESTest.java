/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 21:53:14 GMT 2025
 */

package org.apache.commons.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.security.InvalidParameterException;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.text.translate.LookupTranslator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class LookupTranslator_ESTest extends LookupTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      hashMap0.put("FFFFFEF8", "FFFFFEF8");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "FFFFFEF8");
      hashMap0.put(charBuffer0, "FFFFFEF8");
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      CharBuffer charBuffer0 = CharBuffer.allocate(131);
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate((CharSequence) charBuffer0, 35, (Writer) stringWriter0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      CharBuffer charBuffer0 = CharBuffer.allocate(2337);
      hashMap0.put(charBuffer0, charBuffer0);
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
      String string0 = lookupTranslator0.translate((CharSequence) charBuffer0);
      StringWriter stringWriter0 = new StringWriter();
      int int0 = lookupTranslator0.translate((CharSequence) string0, 0, (Writer) stringWriter0);
      assertEquals(2337, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) "FFFFFBCC", 1865, (Writer) stringWriter0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "FFFFFEF8");
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) charBuffer0, (-264), (Writer) stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      hashMap0.put((CharSequence) null, (CharSequence) null);
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.translate.LookupTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      hashMap0.put(charBuffer0, charBuffer0);
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(hashMap0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('1');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(54);
      hashMap0.put(stringBuffer0, charBuffer0);
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
      String string0 = lookupTranslator0.translate((CharSequence) "FFFFF417");
      assertEquals("FFFFF4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00007", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('1');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(54);
      hashMap0.put(stringBuffer0, charBuffer0);
      hashMap0.put("FFFFF4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00007", "FFFFF417");
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
      String string0 = lookupTranslator0.translate((CharSequence) "FFFFF417");
      assertEquals("FFFFF4\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00007", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.allocate(54);
      hashMap0.put(stringBuffer0, charBuffer0);
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator(hashMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LookupTranslator lookupTranslator0 = null;
      try {
        lookupTranslator0 = new LookupTranslator((Map<CharSequence, CharSequence>) null);
        fail("Expecting exception: InvalidParameterException");
      
      } catch(InvalidParameterException e) {
         //
         // lookupMap cannot be null
         //
         verifyException("org.apache.commons.text.translate.LookupTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<CharSequence, CharSequence> hashMap0 = new HashMap<CharSequence, CharSequence>();
      LookupTranslator lookupTranslator0 = new LookupTranslator(hashMap0);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        lookupTranslator0.translate((CharSequence) null, (-3556), (Writer) stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.translate.LookupTranslator", e);
      }
  }
}
