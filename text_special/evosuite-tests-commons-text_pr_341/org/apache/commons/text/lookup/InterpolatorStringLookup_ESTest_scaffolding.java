/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Aug 22 19:17:49 GMT 2025
 */

package org.apache.commons.text.lookup;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class InterpolatorStringLookup_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.text.lookup.InterpolatorStringLookup"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("sun.cpu.isalist", ""); 
    java.lang.System.setProperty("sun.os.patch.level", "unknown"); 
    java.lang.System.setProperty("user.dir", "/home/azureuser/LLm4PrTest/text_experiments"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InterpolatorStringLookup_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.text.lookup.JavaPlatformStringLookup",
      "org.apache.commons.text.lookup.InterpolatorStringLookup",
      "org.apache.commons.text.lookup.StringLookupFactory",
      "org.apache.commons.text.lookup.PropertiesStringLookup",
      "org.apache.commons.text.lookup.AbstractStringLookup",
      "org.apache.commons.text.lookup.DateStringLookup",
      "org.apache.commons.text.lookup.UrlEncoderStringLookup",
      "org.apache.commons.text.lookup.FileStringLookup",
      "org.apache.commons.text.lookup.FunctionStringLookup",
      "org.apache.commons.text.lookup.XmlStringLookup",
      "org.apache.commons.text.lookup.UrlDecoderStringLookup",
      "org.apache.commons.text.lookup.ScriptStringLookup",
      "org.apache.commons.text.lookup.DnsStringLookup",
      "org.apache.commons.text.lookup.LocalHostStringLookup",
      "org.apache.commons.text.lookup.BiStringLookup",
      "org.apache.commons.text.lookup.StringLookup",
      "org.apache.commons.text.lookup.ConstantStringLookup",
      "org.apache.commons.text.lookup.ResourceBundleStringLookup",
      "org.apache.commons.text.lookup.UrlStringLookup",
      "org.apache.commons.text.lookup.DefaultStringLookup",
      "org.apache.commons.text.lookup.StringLookupFactory$DefaultStringLookupsHolder"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InterpolatorStringLookup_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.text.lookup.AbstractStringLookup",
      "org.apache.commons.text.lookup.FunctionStringLookup",
      "org.apache.commons.text.lookup.StringLookupFactory",
      "org.apache.commons.text.lookup.ConstantStringLookup",
      "org.apache.commons.text.lookup.DateStringLookup",
      "org.apache.commons.text.lookup.DnsStringLookup",
      "org.apache.commons.text.lookup.FileStringLookup",
      "org.apache.commons.text.lookup.JavaPlatformStringLookup",
      "org.apache.commons.text.lookup.LocalHostStringLookup",
      "org.apache.commons.text.lookup.PropertiesStringLookup",
      "org.apache.commons.text.lookup.ResourceBundleStringLookup",
      "org.apache.commons.text.lookup.ScriptStringLookup",
      "org.apache.commons.text.lookup.UrlStringLookup",
      "org.apache.commons.text.lookup.UrlDecoderStringLookup",
      "org.apache.commons.text.lookup.UrlEncoderStringLookup",
      "org.apache.commons.text.lookup.XmlStringLookup",
      "org.apache.commons.text.lookup.DefaultStringLookup",
      "org.apache.commons.text.lookup.StringLookupFactory$DefaultStringLookupsHolder",
      "org.apache.commons.text.lookup.InterpolatorStringLookup",
      "net.bytebuddy.build.HashCodeAndEqualsPlugin$Enhance$InvokeSuper",
      "org.apache.commons.lang3.ClassUtils",
      "org.apache.commons.lang3.StringUtils",
      "org.apache.commons.lang3.Validate",
      "net.bytebuddy.asm.Advice$AssignReturned$ExceptionHandler",
      "org.apache.commons.text.lookup.BiFunctionStringLookup",
      "org.apache.commons.text.lookup.IllegalArgumentExceptions",
      "org.apache.commons.lang3.time.FormatCache",
      "org.apache.commons.lang3.time.FastDateFormat$1",
      "org.apache.commons.lang3.time.FastDateFormat",
      "org.apache.commons.lang3.LocaleUtils",
      "org.apache.commons.lang3.time.FormatCache$ArrayKey",
      "org.apache.commons.lang3.time.FastDatePrinter",
      "org.apache.commons.lang3.time.FastDateParser$Strategy",
      "org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
      "org.apache.commons.lang3.time.FastDateParser$1",
      "org.apache.commons.lang3.time.FastDateParser$2",
      "org.apache.commons.lang3.time.FastDateParser$3",
      "org.apache.commons.lang3.time.FastDateParser$4",
      "org.apache.commons.lang3.time.FastDateParser$5",
      "org.apache.commons.lang3.time.FastDateParser",
      "org.apache.commons.lang3.time.FastDateParser$StrategyParser",
      "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField",
      "org.apache.commons.lang3.time.FastDatePrinter$StringLiteral",
      "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral",
      "org.apache.commons.lang3.time.FastDatePrinter$TextField",
      "org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth",
      "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
      "org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
      "org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule",
      "org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField",
      "org.apache.commons.lang3.time.FastDatePrinter$DayInWeekField",
      "org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule",
      "org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey",
      "org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField",
      "com.oracle.truffle.api.HostCompilerDirectives",
      "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField",
      "org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy",
      "org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField",
      "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField",
      "org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField",
      "org.graalvm.nativeimage.ImageInfo",
      "com.oracle.truffle.js.scriptengine.GraalJSEngineFactory",
      "org.apache.commons.lang3.time.FastDatePrinter$WeekYear",
      "com.oracle.truffle.api.dsl.SpecializationStatistics$NodeClassHistogram",
      "com.oracle.truffle.api.CompilerDirectives"
    );
  }
}
