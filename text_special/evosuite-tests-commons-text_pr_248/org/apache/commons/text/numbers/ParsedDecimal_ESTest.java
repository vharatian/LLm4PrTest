/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:52:34 GMT 2025
 */

package org.apache.commons.text.numbers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.text.numbers.ParsedDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ParsedDecimal_ESTest extends ParsedDecimal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(295.0);
      parsedDecimal0.round(2);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1.0);
      parsedDecimal0.digitCount = (-2205);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1265.7494721206);
      parsedDecimal0.digitCount = 0;
      parsedDecimal0.round(0);
      parsedDecimal0.digitCount = 932;
      // Undeclared exception!
      try { 
        parsedDecimal0.toEngineeringString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(966.273315);
      parsedDecimal0.maxPrecision(2487);
      assertEquals((-6), parsedDecimal0.getExponent());
      assertEquals(2, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1.0));
      parsedDecimal0.maxPrecision(0);
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1970));
      parsedDecimal0.round(1);
      assertEquals(1, parsedDecimal0.getExponent());
      assertEquals(3, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-228.3128585419731));
      parsedDecimal0.round(45);
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1.0));
      parsedDecimal0.digitCount = (-1970);
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals((-1971), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1186.66946));
      assertEquals((-5), parsedDecimal0.getExponent());
      
      parsedDecimal0.round(1000);
      int int0 = parsedDecimal0.getExponent();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1970));
      int int0 = parsedDecimal0.getExponent();
      assertEquals(3, parsedDecimal0.getScientificExponent());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(5);
      // Undeclared exception!
      try { 
        parsedDecimal0.round(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1248.87);
      parsedDecimal0.maxPrecision(1);
      assertEquals(3, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1248.87);
      parsedDecimal0.maxPrecision(3);
      assertEquals(1, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(22);
      parsedDecimal0.digitCount = 2280;
      // Undeclared exception!
      try { 
        parsedDecimal0.maxPrecision(22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-228.3128585419731));
      int int0 = parsedDecimal0.getScientificExponent();
      assertEquals((-13), parsedDecimal0.getExponent());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(8.385301363903086E-4);
      assertEquals((-4), parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(610.263643482);
      assertEquals((-9), parsedDecimal0.getExponent());
      
      parsedDecimal0.round(0);
      assertEquals(1, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      boolean boolean0 = parsedDecimal0.isZero();
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(295.0);
      boolean boolean0 = parsedDecimal0.isZero();
      assertFalse(boolean0);
      assertEquals(2, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-997.335));
      parsedDecimal0.round(1);
      assertEquals(3, parsedDecimal0.getScientificExponent());
      assertEquals(3, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(295.0);
      parsedDecimal0.round(1);
      assertEquals(2, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1107.365);
      // Undeclared exception!
      try { 
        parsedDecimal0.toEngineeringString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-0.9678473830680019));
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(0.0);
      // Undeclared exception!
      try { 
        parsedDecimal0.toPlainString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-525.0));
      parsedDecimal0.round(1);
      assertEquals(1, parsedDecimal0.getExponent());
      assertEquals(2, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.maxPrecision(1);
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(0, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-23));
      parsedDecimal0.maxPrecision((-23));
      assertEquals(0, parsedDecimal0.getExponent());
      assertEquals(1, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from(1);
      parsedDecimal0.round(1);
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1));
      parsedDecimal0.round((-1));
      assertEquals(0, parsedDecimal0.getScientificExponent());
      assertEquals(0, parsedDecimal0.getExponent());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-525.0));
      parsedDecimal0.round(3);
      assertEquals(3, parsedDecimal0.getExponent());
      assertEquals(3, parsedDecimal0.getScientificExponent());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-0.2542506298763573));
      // Undeclared exception!
      try { 
        parsedDecimal0.toScientificString((ParsedDecimal.FormatOptions) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.numbers.ParsedDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ParsedDecimal parsedDecimal0 = ParsedDecimal.from((-1482.15));
      int int0 = parsedDecimal0.getExponent();
      assertEquals((-2), int0);
      assertEquals(3, parsedDecimal0.getScientificExponent());
  }
}
