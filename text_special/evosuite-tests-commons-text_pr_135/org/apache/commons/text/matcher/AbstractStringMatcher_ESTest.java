/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 21:05:31 GMT 2025
 */

package org.apache.commons.text.matcher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.text.matcher.AbstractStringMatcher;
import org.apache.commons.text.matcher.StringMatcher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AbstractStringMatcher_ESTest extends AbstractStringMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = ' ';
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch(charArray0, 0, (-3263), 2);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 's';
      charArray0[2] = '4';
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_CharSetMatcher0.isMatch((CharSequence) charBuffer0, 0, 0, 557);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[2];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      int int0 = abstractStringMatcher_CharSetMatcher0.isMatch(charArray0, 0, 2506, 115);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('O');
      StringMatcher[] stringMatcherArray0 = new StringMatcher[3];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher@3[\"\"]", 1, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'V';
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('C');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch(charArray0, 0, (-1), 44);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      CharBuffer charBuffer0 = CharBuffer.allocate(891);
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) charBuffer0, 0, 86, 32);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[0];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      StringMatcher stringMatcher0 = abstractStringMatcher_CharArrayMatcher0.andThen(abstractStringMatcher_CharArrayMatcher0);
      int int0 = stringMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher@1[\"\"]", (-2), 32, 8);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = 'e';
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, 1, 1, 32);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[5];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      // Undeclared exception!
      try { 
        abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, 1, (-2), 357);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[4];
      char[] charArray0 = new char[8];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      stringMatcherArray0[1] = (StringMatcher) abstractStringMatcher_TrimMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) charBuffer0, 0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[8];
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      StringMatcher stringMatcher0 = abstractStringMatcher_NoneMatcher0.andThen(abstractStringMatcher_TrimMatcher0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = stringMatcher0.isMatch((CharSequence) charBuffer0, 0, 6269, (-455));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[5];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      StringMatcher[] stringMatcherArray0 = new StringMatcher[1];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, 1, 1, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[4];
      char[] charArray0 = new char[8];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharSetMatcher0;
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      stringMatcherArray0[1] = (StringMatcher) abstractStringMatcher_TrimMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, 0, 0, 86);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[8];
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch((CharSequence) charBuffer0, 0, 86, 86);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      int int0 = abstractStringMatcher_NoneMatcher0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      char[] charArray0 = new char[3];
      int int0 = abstractStringMatcher_NoneMatcher0.isMatch(charArray0, 0, (-2239), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      int int0 = abstractStringMatcher_NoneMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher@5[]", 0, 1077, (-553));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[0];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      int int0 = abstractStringMatcher_CharSetMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[0];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher@1[\", \", >, ?, G, T, a, }]", 76);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[4];
      char[] charArray0 = new char[8];
      charArray0[0] = '\"';
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      stringMatcherArray0[1] = (StringMatcher) abstractStringMatcher_TrimMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '[';
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      int int0 = abstractStringMatcher_TrimMatcher0.isMatch(charArray0, 1, 0, 1317);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[5];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      int int0 = abstractStringMatcher_CharSetMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher@3[\"\u0000[%gu\"]", 0, (-1), 32);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[0];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      char[] charArray1 = new char[1];
      int int0 = abstractStringMatcher_CharSetMatcher0.isMatch(charArray1, 0, 1, 554);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('\"');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch((CharSequence) charBuffer0, 0, 0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher@1[\"\"]");
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('|');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch((CharSequence) charBuffer0, 32, 8, 67);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[1];
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('|');
      int int0 = abstractStringMatcher_CharMatcher0.isMatch(charArray0, 0, 0, 2207);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[1];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher@1[\"8\"]", (int) '8', (int) '8', 77);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[0];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.apache.commons.text.matcher.AbstractStringMatcher$CharArrayMatcher@1[\"\"]");
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch((CharSequence) charBuffer0, 32, 8, (-2));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'U';
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, 1, 1, 32);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[1];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, 0, (-166), 44);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[8];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, 0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[0];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      int int0 = abstractStringMatcher_CharArrayMatcher0.isMatch(charArray0, 107, 107, 107);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[1];
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[6];
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      char[] charArray0 = new char[17];
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, 0, 107, 107);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      StringMatcher[] stringMatcherArray0 = new StringMatcher[1];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_NoneMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      char[] charArray0 = new char[0];
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, (-1363), (-1363), (-1363));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringMatcher[] stringMatcherArray0 = new StringMatcher[1];
      AbstractStringMatcher.NoneMatcher abstractStringMatcher_NoneMatcher0 = new AbstractStringMatcher.NoneMatcher();
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_NoneMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('O');
      int int0 = abstractStringMatcher_CharMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('O');
      String string0 = abstractStringMatcher_CharMatcher0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AbstractStringMatcher.CharMatcher abstractStringMatcher_CharMatcher0 = new AbstractStringMatcher.CharMatcher('T');
      StringMatcher[] stringMatcherArray0 = new StringMatcher[6];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      char[] charArray0 = new char[17];
      charArray0[0] = 'T';
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch(charArray0, 0, 107, 107);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AbstractStringMatcher.TrimMatcher abstractStringMatcher_TrimMatcher0 = new AbstractStringMatcher.TrimMatcher();
      StringMatcher[] stringMatcherArray0 = new StringMatcher[1];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_TrimMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      int int0 = abstractStringMatcher_AndStringMatcher0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[5];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      String string0 = abstractStringMatcher_CharArrayMatcher0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[1];
      AbstractStringMatcher.CharArrayMatcher abstractStringMatcher_CharArrayMatcher0 = new AbstractStringMatcher.CharArrayMatcher(charArray0);
      StringMatcher[] stringMatcherArray0 = new StringMatcher[1];
      stringMatcherArray0[0] = (StringMatcher) abstractStringMatcher_CharArrayMatcher0;
      AbstractStringMatcher.AndStringMatcher abstractStringMatcher_AndStringMatcher0 = new AbstractStringMatcher.AndStringMatcher(stringMatcherArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(1176);
      int int0 = abstractStringMatcher_AndStringMatcher0.isMatch((CharSequence) charBuffer0, 1, 1, 1176);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char[] charArray0 = new char[8];
      AbstractStringMatcher.CharSetMatcher abstractStringMatcher_CharSetMatcher0 = new AbstractStringMatcher.CharSetMatcher(charArray0);
      String string0 = abstractStringMatcher_CharSetMatcher0.toString();
      assertNotNull(string0);
  }
}
