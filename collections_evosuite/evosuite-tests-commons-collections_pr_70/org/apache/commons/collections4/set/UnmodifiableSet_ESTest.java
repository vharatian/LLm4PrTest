/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 20:19:17 GMT 2025
 */

package org.apache.commons.collections4.set;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import org.apache.commons.collections4.map.UnmodifiableMap;
import org.apache.commons.collections4.set.UnmodifiableSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UnmodifiableSet_ESTest extends UnmodifiableSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnmodifiableSet.unmodifiableSet((Set<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      Set<Object> set0 = UnmodifiableSet.unmodifiableSet((Set<?>) treeSet0);
      Set<Object> set1 = UnmodifiableSet.unmodifiableSet((Set<?>) set0);
      assertSame(set1, set0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedHashSet<UnmodifiableMap<Object, Locale.Category>> linkedHashSet0 = new LinkedHashSet<UnmodifiableMap<Object, Locale.Category>>();
      Set<Object> set0 = UnmodifiableSet.unmodifiableSet((Set<?>) linkedHashSet0);
      boolean boolean0 = linkedHashSet0.containsAll(set0);
      assertTrue(boolean0);
  }
}
