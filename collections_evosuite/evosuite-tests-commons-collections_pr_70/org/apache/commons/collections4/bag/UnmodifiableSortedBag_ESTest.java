/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 19:32:41 GMT 2025
 */

package org.apache.commons.collections4.bag;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.ArrayDeque;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.Locale;
import org.apache.commons.collections4.Bag;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.SortedBag;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.bag.PredicatedSortedBag;
import org.apache.commons.collections4.bag.SynchronizedSortedBag;
import org.apache.commons.collections4.bag.TransformedSortedBag;
import org.apache.commons.collections4.bag.TreeBag;
import org.apache.commons.collections4.bag.UnmodifiableSortedBag;
import org.apache.commons.collections4.functors.ConstantTransformer;
import org.apache.commons.collections4.functors.InvokerTransformer;
import org.apache.commons.collections4.functors.TransformerPredicate;
import org.apache.commons.collections4.map.UnmodifiableMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UnmodifiableSortedBag_ESTest extends UnmodifiableSortedBag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<UnmodifiableMap<LinkedList, LinkedList>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Collection must not be null.
         //
         verifyException("org.apache.commons.collections4.collection.AbstractCollectionDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeBag<Integer> treeBag0 = new TreeBag<Integer>(comparator0);
      SortedBag<Integer> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Integer>) treeBag0);
      SortedBag<Integer> sortedBag1 = UnmodifiableSortedBag.unmodifiableSortedBag(sortedBag0);
      assertEquals(0, sortedBag1.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TreeBag<Object> treeBag0 = new TreeBag<Object>();
      SortedBag<Object> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Object>) treeBag0);
      SynchronizedSortedBag<Object> synchronizedSortedBag0 = SynchronizedSortedBag.synchronizedSortedBag(sortedBag0);
      // Undeclared exception!
      try { 
        synchronizedSortedBag0.remove((Object) treeBag0, (-4705));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableSortedBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TreeBag<Object> treeBag0 = new TreeBag<Object>();
      SortedBag<Object> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Object>) treeBag0);
      SynchronizedSortedBag<Object> synchronizedSortedBag0 = SynchronizedSortedBag.synchronizedSortedBag(sortedBag0);
      Integer integer0 = new Integer((-1));
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      ConstantTransformer<Object, Locale.Category> constantTransformer0 = new ConstantTransformer<Object, Locale.Category>(locale_Category0);
      TransformedSortedBag<Object> transformedSortedBag0 = TransformedSortedBag.transformingSortedBag((SortedBag<Object>) synchronizedSortedBag0, (Transformer<? super Object, ?>) constantTransformer0);
      // Undeclared exception!
      try { 
        transformedSortedBag0.add((Object) integer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableSortedBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayDeque<Locale.FilteringMode> arrayDeque0 = new ArrayDeque<Locale.FilteringMode>();
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>(arrayDeque0);
      SortedBag<Locale.FilteringMode> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Locale.FilteringMode>) treeBag0);
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      InvokerTransformer<Object, Boolean> invokerTransformer0 = new InvokerTransformer<Object, Boolean>("", classArray0, classArray0);
      Predicate<Locale.FilteringMode> predicate0 = TransformerPredicate.transformerPredicate((Transformer<? super Locale.FilteringMode, Boolean>) invokerTransformer0);
      PredicatedSortedBag<Locale.FilteringMode> predicatedSortedBag0 = new PredicatedSortedBag<Locale.FilteringMode>(sortedBag0, predicate0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TreeBag<Object> treeBag0 = new TreeBag<Object>();
      SortedBag<Object> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Object>) treeBag0);
      boolean boolean0 = treeBag0.containsAll((Bag<?>) sortedBag0);
      assertTrue(boolean0);
  }
}
