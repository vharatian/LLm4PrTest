/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 17:55:09 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter.hasher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentity;
import org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentityImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class HashFunctionIdentityImpl_ESTest extends HashFunctionIdentityImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("", "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 0L);
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness1 = hashFunctionIdentityImpl0.getSignedness();
      assertSame(hashFunctionIdentity_Signedness1, hashFunctionIdentity_Signedness0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("", "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 0L);
      long long0 = hashFunctionIdentityImpl0.getSignature();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((String) null, "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 1L);
      long long0 = hashFunctionIdentityImpl0.getSignature();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.ITERATIVE;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("u<cv7 =", "u<cv7 =", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, (-119L));
      hashFunctionIdentityImpl0.getProvider();
      assertEquals((-119L), hashFunctionIdentityImpl0.getSignature());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("", "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 0L);
      String string0 = hashFunctionIdentityImpl0.getProvider();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((String) null, (String) null, (HashFunctionIdentity.Signedness) null, (HashFunctionIdentity.ProcessType) null, 3L);
      hashFunctionIdentityImpl0.getProcessType();
      assertEquals(3L, hashFunctionIdentityImpl0.getSignature());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((String) null, "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 1L);
      hashFunctionIdentityImpl0.getProcessType();
      assertEquals(1L, hashFunctionIdentityImpl0.getSignature());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.ITERATIVE;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("tFXk}v}Hv", (String) null, hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 467L);
      String string0 = hashFunctionIdentityImpl0.getName();
      assertNull(string0);
      assertEquals(467L, hashFunctionIdentityImpl0.getSignature());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.SIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.ITERATIVE;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentityImpl", "org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentityImpl", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 0L);
      String string0 = hashFunctionIdentityImpl0.getName();
      assertEquals("org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentityImpl", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((String) null, "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 1L);
      String string0 = hashFunctionIdentityImpl0.getName();
      assertEquals(1L, hashFunctionIdentityImpl0.getSignature());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = null;
      try {
        hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((HashFunctionIdentity) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentityImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((String) null, "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 1L);
      String string0 = hashFunctionIdentityImpl0.getProvider();
      assertEquals(1L, hashFunctionIdentityImpl0.getSignature());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.ITERATIVE;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("", "$VALUES", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, (-3379L));
      long long0 = hashFunctionIdentityImpl0.getSignature();
      assertEquals("$VALUES", hashFunctionIdentityImpl0.getName());
      assertEquals((-3379L), long0);
      assertEquals("", hashFunctionIdentityImpl0.getProvider());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.UNSIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((String) null, (String) null, hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, 0L);
      HashFunctionIdentityImpl hashFunctionIdentityImpl1 = new HashFunctionIdentityImpl(hashFunctionIdentityImpl0);
      assertEquals(HashFunctionIdentity.ProcessType.CYCLIC, hashFunctionIdentityImpl1.getProcessType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl((String) null, (String) null, (HashFunctionIdentity.Signedness) null, (HashFunctionIdentity.ProcessType) null, 3L);
      hashFunctionIdentityImpl0.getSignedness();
      assertEquals(3L, hashFunctionIdentityImpl0.getSignature());
  }
}
