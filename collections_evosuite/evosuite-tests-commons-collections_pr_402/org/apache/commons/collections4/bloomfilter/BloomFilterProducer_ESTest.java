/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 09:08:25 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.BiPredicate;
import org.apache.commons.collections4.bloomfilter.BloomFilter;
import org.apache.commons.collections4.bloomfilter.BloomFilterProducer;
import org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher;
import org.apache.commons.collections4.bloomfilter.Hasher;
import org.apache.commons.collections4.bloomfilter.LayerManager;
import org.apache.commons.collections4.bloomfilter.LayeredBloomFilter;
import org.apache.commons.collections4.bloomfilter.Shape;
import org.apache.commons.collections4.bloomfilter.SimpleBloomFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BloomFilterProducer_ESTest extends BloomFilterProducer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BloomFilter[] bloomFilterArray0 = new BloomFilter[0];
      BloomFilterProducer bloomFilterProducer0 = BloomFilterProducer.fromBloomFilterArray(bloomFilterArray0);
      BloomFilter bloomFilter0 = bloomFilterProducer0.flatten();
      assertNull(bloomFilter0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BloomFilter[] bloomFilterArray0 = new BloomFilter[0];
      BloomFilterProducer bloomFilterProducer0 = BloomFilterProducer.fromBloomFilterArray(bloomFilterArray0);
      BloomFilter[] bloomFilterArray1 = bloomFilterProducer0.asBloomFilterArray();
      assertEquals(0, bloomFilterArray1.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        BloomFilterProducer.fromBloomFilterArray((BloomFilter[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // filters
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Shape shape0 = Shape.fromNM(1349, 87855567);
      LayeredBloomFilter layeredBloomFilter0 = LayeredBloomFilter.fixed(shape0, 1349);
      // Undeclared exception!
      layeredBloomFilter0.flatten();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BloomFilter[] bloomFilterArray0 = new BloomFilter[1];
      BloomFilterProducer bloomFilterProducer0 = BloomFilterProducer.fromBloomFilterArray(bloomFilterArray0);
      // Undeclared exception!
      try { 
        bloomFilterProducer0.flatten();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.BloomFilterProducer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LayeredBloomFilter layeredBloomFilter0 = new LayeredBloomFilter((Shape) null, (LayerManager) null);
      // Undeclared exception!
      try { 
        layeredBloomFilter0.asBloomFilterArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.LayeredBloomFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BloomFilter[] bloomFilterArray0 = new BloomFilter[0];
      BloomFilterProducer bloomFilterProducer0 = BloomFilterProducer.fromBloomFilterArray(bloomFilterArray0);
      boolean boolean0 = bloomFilterProducer0.forEachBloomFilterPair(bloomFilterProducer0, (BiPredicate<BloomFilter, BloomFilter>) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Shape shape0 = Shape.fromNM(4, 4);
      LayeredBloomFilter layeredBloomFilter0 = LayeredBloomFilter.fixed(shape0, 4);
      BloomFilter[] bloomFilterArray0 = new BloomFilter[4];
      bloomFilterArray0[0] = (BloomFilter) layeredBloomFilter0;
      bloomFilterArray0[1] = (BloomFilter) layeredBloomFilter0;
      SimpleBloomFilter simpleBloomFilter0 = new SimpleBloomFilter(shape0);
      bloomFilterArray0[2] = (BloomFilter) simpleBloomFilter0;
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(4, 0L);
      simpleBloomFilter0.merge((Hasher) enhancedDoubleHasher0);
      BloomFilterProducer bloomFilterProducer0 = BloomFilterProducer.fromBloomFilterArray(bloomFilterArray0);
      boolean boolean0 = layeredBloomFilter0.contains(bloomFilterProducer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Shape shape0 = Shape.fromKM(775, 775);
      LayeredBloomFilter layeredBloomFilter0 = LayeredBloomFilter.fixed(shape0, 775);
      layeredBloomFilter0.next();
      BloomFilter[] bloomFilterArray0 = layeredBloomFilter0.asBloomFilterArray();
      BloomFilterProducer bloomFilterProducer0 = BloomFilterProducer.fromBloomFilterArray(bloomFilterArray0);
      BloomFilter bloomFilter0 = bloomFilterProducer0.flatten();
      assertEquals(0, bloomFilter0.characteristics());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Shape shape0 = Shape.fromNM(4, 4);
      LayeredBloomFilter layeredBloomFilter0 = LayeredBloomFilter.fixed(shape0, 4);
      BloomFilter[] bloomFilterArray0 = new BloomFilter[0];
      BloomFilterProducer bloomFilterProducer0 = BloomFilterProducer.fromBloomFilterArray(bloomFilterArray0);
      // Undeclared exception!
      try { 
        layeredBloomFilter0.forEachBloomFilterPair(bloomFilterProducer0, (BiPredicate<BloomFilter, BloomFilter>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.CountingPredicate", e);
      }
  }
}
