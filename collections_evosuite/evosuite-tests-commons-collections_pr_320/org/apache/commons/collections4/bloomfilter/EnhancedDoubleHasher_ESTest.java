/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 11:10:25 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher;
import org.apache.commons.collections4.bloomfilter.IndexProducer;
import org.apache.commons.collections4.bloomfilter.Shape;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class EnhancedDoubleHasher_ESTest extends EnhancedDoubleHasher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = EnhancedDoubleHasher.mod((-33L), 2096353072);
      assertEquals(361655871, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher((-1L), (-292L));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = EnhancedDoubleHasher.mod(2096353072, 2096353072);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)44;
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
      long long0 = enhancedDoubleHasher0.getInitial();
      assertEquals(3170534137668829184L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher((-1L), (-1L));
      long long0 = enhancedDoubleHasher0.getInitial();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte)2;
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
      long long0 = enhancedDoubleHasher0.getIncrement();
      assertEquals(562949953421312L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-80);
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
      long long0 = enhancedDoubleHasher0.getIncrement();
      assertEquals((-5764607523034234880L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        EnhancedDoubleHasher.mod(0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnhancedDoubleHasher enhancedDoubleHasher0 = null;
      try {
        enhancedDoubleHasher0 = new EnhancedDoubleHasher((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = EnhancedDoubleHasher.mod((-83L), (-2147483642));
      assertEquals((-2147483593), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      EnhancedDoubleHasher enhancedDoubleHasher0 = null;
      try {
        enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // buffer length must be greater than 0
         //
         verifyException("org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
      Shape shape0 = Shape.fromNMK((byte)7, (byte)7, 8);
      IndexProducer indexProducer0 = enhancedDoubleHasher0.indices(shape0);
      assertNotNull(indexProducer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
      // Undeclared exception!
      try { 
        enhancedDoubleHasher0.indices((Shape) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // shape
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
      long long0 = enhancedDoubleHasher0.getInitial();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      EnhancedDoubleHasher enhancedDoubleHasher0 = new EnhancedDoubleHasher(byteArray0);
      long long0 = enhancedDoubleHasher0.getIncrement();
      assertEquals(0L, long0);
  }
}
