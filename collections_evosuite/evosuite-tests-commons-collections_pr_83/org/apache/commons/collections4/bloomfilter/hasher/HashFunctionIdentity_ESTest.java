/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 18:55:54 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter.hasher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentity;
import org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentityImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class HashFunctionIdentity_ESTest extends HashFunctionIdentity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.SIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("", "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, (-776L));
      byte[] byteArray0 = HashFunctionIdentity.prepareSignatureBuffer(hashFunctionIdentityImpl0);
      assertEquals(14, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        HashFunctionIdentity.asCommonString((HashFunctionIdentity) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentity", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashFunctionIdentity.Signedness hashFunctionIdentity_Signedness0 = HashFunctionIdentity.Signedness.SIGNED;
      HashFunctionIdentity.ProcessType hashFunctionIdentity_ProcessType0 = HashFunctionIdentity.ProcessType.CYCLIC;
      HashFunctionIdentityImpl hashFunctionIdentityImpl0 = new HashFunctionIdentityImpl("", "", hashFunctionIdentity_Signedness0, hashFunctionIdentity_ProcessType0, (-776L));
      String string0 = HashFunctionIdentity.asCommonString(hashFunctionIdentityImpl0);
      assertEquals("-SIGNED-CYCLIC", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        HashFunctionIdentity.prepareSignatureBuffer((HashFunctionIdentity) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.hasher.HashFunctionIdentity", e);
      }
  }
}
