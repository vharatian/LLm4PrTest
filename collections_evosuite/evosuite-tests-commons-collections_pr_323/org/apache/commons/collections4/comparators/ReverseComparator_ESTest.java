/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 11:00:12 GMT 2025
 */

package org.apache.commons.collections4.comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Converter;
import com.google.common.base.Function;
import java.nio.file.StandardCopyOption;
import java.time.LocalDate;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.HijrahDate;
import java.util.Comparator;
import org.apache.commons.collections4.comparators.ReverseComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ReverseComparator_ESTest extends ReverseComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      Comparator<Object> comparator0 = reverseComparator0.thenComparing((Comparator<? super Object>) reverseComparator0);
      ReverseComparator<Object> reverseComparator1 = new ReverseComparator<Object>(comparator0);
      ReverseComparator<ChronoLocalDate> reverseComparator2 = new ReverseComparator<ChronoLocalDate>(comparator0);
      reverseComparator0.hashCode();
      ReverseComparator<Integer> reverseComparator3 = new ReverseComparator<Integer>();
      ReverseComparator<Comparable<Object>> reverseComparator4 = new ReverseComparator<Comparable<Object>>();
      ReverseComparator<Comparable<Integer>> reverseComparator5 = new ReverseComparator<Comparable<Integer>>(comparator0);
      reverseComparator5.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReverseComparator<ChronoLocalDate> reverseComparator0 = new ReverseComparator<ChronoLocalDate>();
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      LocalDate localDate0 = MockLocalDate.now();
      int int0 = reverseComparator0.compare(hijrahDate0, localDate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReverseComparator<Integer> reverseComparator0 = new ReverseComparator<Integer>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1073741824);
      int int0 = reverseComparator0.compare(integer1, integer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReverseComparator<ChronoLocalDate> reverseComparator0 = new ReverseComparator<ChronoLocalDate>();
      // Undeclared exception!
      try { 
        reverseComparator0.compare((ChronoLocalDate) null, (ChronoLocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.comparators.ComparableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Converter<Object, String> converter0 = Converter.from((Function<? super Object, ? extends String>) function0, (Function<? super String, ?>) function0);
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>((Comparator<? super Object>) null);
      Comparator<Object> comparator0 = Comparator.comparing((java.util.function.Function<? super Object, ? extends String>) converter0, (Comparator<? super String>) reverseComparator0);
      ReverseComparator<Object> reverseComparator1 = new ReverseComparator<Object>(comparator0);
      // Undeclared exception!
      try { 
        reverseComparator1.compare(comparator0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        reverseComparator0.compare(object0, reverseComparator0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.commons.collections4.comparators.ReverseComparator cannot be cast to java.lang.Comparable
         //
         verifyException("org.apache.commons.collections4.comparators.ComparableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      Object object0 = new Object();
      boolean boolean0 = reverseComparator0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      boolean boolean0 = reverseComparator0.equals(reverseComparator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReverseComparator<StandardCopyOption> reverseComparator0 = new ReverseComparator<StandardCopyOption>((Comparator<? super StandardCopyOption>) null);
      boolean boolean0 = reverseComparator0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReverseComparator<Object> reverseComparator0 = new ReverseComparator<Object>();
      ReverseComparator<ReverseComparator<Object>> reverseComparator1 = new ReverseComparator<ReverseComparator<Object>>(reverseComparator0);
      ReverseComparator<Comparable<Object>> reverseComparator2 = new ReverseComparator<Comparable<Object>>(reverseComparator0);
      boolean boolean0 = reverseComparator2.equals(reverseComparator1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReverseComparator<Integer> reverseComparator0 = new ReverseComparator<Integer>();
      Integer integer0 = new Integer(1);
      int int0 = reverseComparator0.compare(integer0, integer0);
      assertEquals(0, int0);
  }
}
