/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 15:48:22 GMT 2025
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.collections4.MultiSet;
import org.apache.commons.collections4.MultiSetUtils;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.EqualPredicate;
import org.apache.commons.collections4.functors.NullPredicate;
import org.apache.commons.collections4.functors.OnePredicate;
import org.apache.commons.collections4.multiset.HashMultiSet;
import org.apache.commons.collections4.multiset.PredicatedMultiSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MultiSetUtils_ESTest extends MultiSetUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMultiSet<Integer> hashMultiSet0 = new HashMultiSet<Integer>();
      MultiSet<Integer> multiSet0 = MultiSetUtils.synchronizedMultiSet((MultiSet<Integer>) hashMultiSet0);
      assertNotNull(multiSet0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        MultiSetUtils.unmodifiableMultiSet((MultiSet<? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // collection
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiSet<Object> multiSet0 = MultiSetUtils.emptyMultiSet();
      // Undeclared exception!
      try { 
        MultiSetUtils.predicatedMultiSet(multiSet0, (Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      HashMultiSet<Object> hashMultiSet0 = new HashMultiSet<Object>(linkedList0);
      hashMultiSet0.add((Object) linkedList0);
      Predicate<Object> predicate0 = NullPredicate.nullPredicate();
      // Undeclared exception!
      try { 
        MultiSetUtils.predicatedMultiSet((MultiSet<Object>) hashMultiSet0, (Predicate<? super Object>) predicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add Object '[]' - Predicate 'org.apache.commons.collections4.functors.NullPredicate@5' rejected it
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMultiSet<Integer> hashMultiSet0 = new HashMultiSet<Integer>();
      Object object0 = new Object();
      Predicate<Object> predicate0 = EqualPredicate.equalPredicate(object0);
      PredicatedMultiSet<Integer> predicatedMultiSet0 = PredicatedMultiSet.predicatedMultiSet((MultiSet<Integer>) hashMultiSet0, (Predicate<? super Integer>) predicate0);
      MultiSet<Object> multiSet0 = MultiSetUtils.unmodifiableMultiSet((MultiSet<?>) predicatedMultiSet0);
      assertFalse(multiSet0.contains(object0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMultiSet<Integer> hashMultiSet0 = new HashMultiSet<Integer>();
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      Predicate<Integer> predicate0 = OnePredicate.onePredicate((Collection<? extends Predicate<? super Integer>>) linkedList0);
      MultiSet<Integer> multiSet0 = MultiSetUtils.predicatedMultiSet((MultiSet<Integer>) hashMultiSet0, (Predicate<? super Integer>) predicate0);
      assertNotNull(multiSet0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        MultiSetUtils.synchronizedMultiSet((MultiSet<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // collection
         //
         verifyException("java.util.Objects", e);
      }
  }
}
