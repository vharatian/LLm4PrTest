/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 15:50:31 GMT 2025
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.PredicateUtils;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.functors.CloneTransformer;
import org.apache.commons.collections4.functors.InstanceofPredicate;
import org.apache.commons.collections4.functors.NonePredicate;
import org.apache.commons.collections4.functors.NullIsExceptionPredicate;
import org.apache.commons.collections4.functors.PredicateTransformer;
import org.apache.commons.collections4.functors.UniquePredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PredicateUtils_ESTest extends PredicateUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<InstanceofPredicate> linkedList0 = new LinkedList<InstanceofPredicate>();
      Predicate<Boolean> predicate0 = PredicateUtils.anyPredicate((Collection<? extends Predicate<? super Boolean>>) linkedList0);
      Predicate<Boolean> predicate1 = PredicateUtils.notNullPredicate();
      Predicate<Boolean> predicate2 = PredicateUtils.neitherPredicate((Predicate<? super Boolean>) predicate0, (Predicate<? super Boolean>) predicate1);
      assertFalse(predicate2.equals((Object)predicate1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<InstanceofPredicate> linkedList0 = new LinkedList<InstanceofPredicate>();
      Predicate<Boolean> predicate0 = PredicateUtils.anyPredicate((Collection<? extends Predicate<? super Boolean>>) linkedList0);
      Predicate<Boolean> predicate1 = PredicateUtils.notNullPredicate();
      Predicate<Boolean> predicate2 = PredicateUtils.eitherPredicate((Predicate<? super Boolean>) predicate1, (Predicate<? super Boolean>) predicate0);
      assertFalse(predicate2.equals((Object)predicate1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      Predicate<Object> predicate0 = InstanceofPredicate.instanceOfPredicate(class0);
      Predicate<InstanceofPredicate> predicate1 = PredicateUtils.orPredicate((Predicate<? super InstanceofPredicate>) predicate0, (Predicate<? super InstanceofPredicate>) instanceofPredicate0);
      assertNotNull(predicate1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Predicate<Predicate<Boolean>>[] predicateArray0 = (Predicate<Predicate<Boolean>>[]) Array.newInstance(Predicate.class, 1);
      NullIsExceptionPredicate<Predicate<Boolean>> nullIsExceptionPredicate0 = new NullIsExceptionPredicate<Predicate<Boolean>>((Predicate<? super Predicate<Boolean>>) null);
      predicateArray0[0] = (Predicate<Predicate<Boolean>>) nullIsExceptionPredicate0;
      // Undeclared exception!
      try { 
        PredicateUtils.andPredicate((Predicate<? super Predicate<Boolean>>) null, (Predicate<? super Predicate<Boolean>>) predicateArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate1
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Predicate<Object> predicate0 = PredicateUtils.notNullPredicate();
      PredicateTransformer<Boolean> predicateTransformer0 = new PredicateTransformer<Boolean>(predicate0);
      Predicate<Boolean> predicate1 = PredicateUtils.transformedPredicate((Transformer<? super Boolean, ? extends Boolean>) predicateTransformer0, (Predicate<? super Boolean>) predicate0);
      assertNotNull(predicate1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Predicate<Predicate<Boolean>>[] predicateArray0 = (Predicate<Predicate<Boolean>>[]) Array.newInstance(Predicate.class, 1);
      NullIsExceptionPredicate<Predicate<Boolean>> nullIsExceptionPredicate0 = new NullIsExceptionPredicate<Predicate<Boolean>>((Predicate<? super Predicate<Boolean>>) null);
      predicateArray0[0] = (Predicate<Predicate<Boolean>>) nullIsExceptionPredicate0;
      Predicate<Predicate<Boolean>> predicate0 = PredicateUtils.nullIsFalsePredicate((Predicate<? super Predicate<Boolean>>) predicateArray0[0]);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UniquePredicate<Boolean> uniquePredicate0 = new UniquePredicate<Boolean>();
      Predicate<Boolean> predicate0 = PredicateUtils.notPredicate((Predicate<? super Boolean>) uniquePredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Predicate<Predicate<Boolean>>[] predicateArray0 = (Predicate<Predicate<Boolean>>[]) Array.newInstance(Predicate.class, 1);
      NullIsExceptionPredicate<Predicate<Boolean>> nullIsExceptionPredicate0 = new NullIsExceptionPredicate<Predicate<Boolean>>((Predicate<? super Predicate<Boolean>>) null);
      predicateArray0[0] = (Predicate<Predicate<Boolean>>) nullIsExceptionPredicate0;
      Predicate<Predicate<Boolean>> predicate0 = PredicateUtils.nonePredicate((Predicate<? super Predicate<Boolean>>[]) predicateArray0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<InstanceofPredicate> linkedList0 = new LinkedList<InstanceofPredicate>();
      Predicate<InstanceofPredicate> predicate0 = PredicateUtils.nonePredicate((Collection<? extends Predicate<? super InstanceofPredicate>>) linkedList0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 2);
      Predicate<NonePredicate<Predicate<Boolean>>> predicate0 = PredicateUtils.invokerPredicate("", (Class<?>[]) classArray0, (Object[]) classArray0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Predicate<Boolean> predicate0 = PredicateUtils.invokerPredicate("");
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      Predicate<Object> predicate0 = PredicateUtils.instanceofPredicate(class0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transformer<Boolean, Boolean> transformer0 = CloneTransformer.cloneTransformer();
      Predicate<Boolean> predicate0 = PredicateUtils.asPredicate((Transformer<? super Boolean, Boolean>) transformer0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Predicate<InstanceofPredicate>[] predicateArray0 = (Predicate<InstanceofPredicate>[]) Array.newInstance(Predicate.class, 0);
      Predicate<InstanceofPredicate> predicate0 = PredicateUtils.anyPredicate((Predicate<? super InstanceofPredicate>[]) predicateArray0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Predicate<InstanceofPredicate> predicate0 = PredicateUtils.identityPredicate((InstanceofPredicate) null);
      Predicate<InstanceofPredicate> predicate1 = PredicateUtils.andPredicate((Predicate<? super InstanceofPredicate>) predicate0, (Predicate<? super InstanceofPredicate>) predicate0);
      assertFalse(predicate1.equals((Object)predicate0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 0);
      Predicate<NonePredicate<Boolean>> predicate0 = PredicateUtils.allPredicate((Predicate<? super NonePredicate<Boolean>>[]) predicateArray0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      Predicate<Boolean> predicate0 = PredicateUtils.allPredicate((Collection<? extends Predicate<? super Boolean>>) linkedList0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Predicate<? super Boolean>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Collection<? extends Predicate<? super NonePredicate<Predicate<Object>>>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      linkedList0.offerLast((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Collection<? extends Predicate<? super NonePredicate<Predicate<Boolean>>>>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nullIsTruePredicate((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nullIsExceptionPredicate((Predicate<? super Predicate<Boolean>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Predicate<? super Object>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      linkedList0.add((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Collection<? extends Predicate<? super Boolean>>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.neitherPredicate((Predicate<? super Object>) null, (Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        PredicateUtils.invokerPredicate((String) null, (Class<?>[]) classArray0, (Object[]) classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // methodName
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Predicate<? super Boolean>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      linkedList0.addFirst((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Collection<? extends Predicate<? super Boolean>>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Predicate<? super Object>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      linkedList0.offerFirst((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Collection<? extends Predicate<? super Object>>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Predicate<? super NonePredicate<Object>>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Predicate<Boolean>[] predicateArray0 = (Predicate<Boolean>[]) Array.newInstance(Predicate.class, 2);
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Predicate<? super Boolean>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Predicate<Object> predicate0 = PredicateUtils.truePredicate();
      // Undeclared exception!
      try { 
        PredicateUtils.transformedPredicate((Transformer<? super Object, ?>) null, (Predicate<? super Object>) predicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // transformer
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<InstanceofPredicate> linkedList0 = new LinkedList<InstanceofPredicate>();
      Predicate<InstanceofPredicate> predicate0 = PredicateUtils.onePredicate((Collection<? extends Predicate<? super InstanceofPredicate>>) linkedList0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Predicate<Object> predicate0 = PredicateUtils.nullPredicate();
      Predicate<Object> predicate1 = PredicateUtils.nullIsExceptionPredicate((Predicate<? super Object>) predicate0);
      assertFalse(predicate1.equals((Object)predicate0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Predicate<Boolean>[] predicateArray0 = (Predicate<Boolean>[]) Array.newInstance(Predicate.class, 9);
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Predicate<? super Boolean>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        PredicateUtils.invokerPredicate("G{", (Class<?>[]) classArray0, (Object[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter types must match the arguments
         //
         verifyException("org.apache.commons.collections4.functors.InvokerTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Predicate<Boolean> predicate0 = PredicateUtils.falsePredicate();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Collection<? extends Predicate<? super Predicate<Object>>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Collection<? extends Predicate<? super Predicate<Object>>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Predicate<Boolean>[] predicateArray0 = (Predicate<Boolean>[]) Array.newInstance(Predicate.class, 9);
      NonePredicate<Boolean> nonePredicate0 = new NonePredicate<Boolean>(predicateArray0);
      Predicate<NonePredicate<Boolean>> predicate0 = PredicateUtils.equalPredicate(nonePredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Predicate<Boolean> predicate0 = PredicateUtils.uniquePredicate();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Predicate<Object> predicate0 = PredicateUtils.nullPredicate();
      Predicate<Object> predicate1 = PredicateUtils.nullIsTruePredicate((Predicate<? super Object>) predicate0);
      assertFalse(predicate1.equals((Object)predicate0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Collection<? extends Predicate<? super Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.orPredicate((Predicate<? super NonePredicate<Object>>) null, (Predicate<? super NonePredicate<Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate1
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.instanceofPredicate((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Predicate<Boolean>[] predicateArray0 = (Predicate<Boolean>[]) Array.newInstance(Predicate.class, 9);
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Predicate<? super Boolean>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.invokerPredicate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // methodName
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Predicate<NonePredicate<NonePredicate>> predicate0 = PredicateUtils.exceptionPredicate();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Predicate<Boolean> predicate0 = PredicateUtils.nullPredicate();
      UniquePredicate<Boolean> uniquePredicate0 = new UniquePredicate<Boolean>();
      Predicate<Boolean>[] predicateArray0 = (Predicate<Boolean>[]) Array.newInstance(Predicate.class, 2);
      predicateArray0[0] = predicate0;
      predicateArray0[1] = (Predicate<Boolean>) uniquePredicate0;
      Predicate<Boolean> predicate1 = PredicateUtils.onePredicate((Predicate<? super Boolean>[]) predicateArray0);
      assertFalse(predicate1.equals((Object)predicate0));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.eitherPredicate((Predicate<? super Boolean>) null, (Predicate<? super Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.asPredicate((Transformer<? super Predicate<Object>, Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // transformer
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.notPredicate((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nullIsFalsePredicate((Predicate<? super Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }
}
