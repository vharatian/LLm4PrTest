/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 14:33:47 GMT 2025
 */

package org.apache.commons.collections4.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.Iterator;
import java.util.NoSuchElementException;
import org.apache.commons.collections4.iterators.IteratorChain;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IteratorChain_ESTest extends IteratorChain_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IteratorChain<Object> iteratorChain0 = new IteratorChain<Object>();
      IteratorChain<Object> iteratorChain1 = new IteratorChain<Object>(iteratorChain0);
      IteratorChain<Object> iteratorChain2 = new IteratorChain<Object>(iteratorChain1, iteratorChain0);
      assertFalse(iteratorChain2.equals((Object)iteratorChain1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IteratorChain<Object> iteratorChain0 = new IteratorChain<Object>();
      iteratorChain0.addIterator(iteratorChain0);
      assertFalse(iteratorChain0.isLocked());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IteratorChain<Object> iteratorChain0 = new IteratorChain<Object>();
      IteratorChain<Object> iteratorChain1 = new IteratorChain<Object>(iteratorChain0);
      int int0 = iteratorChain1.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IteratorChain<Integer> iteratorChain0 = new IteratorChain<Integer>();
      IteratorChain<Object> iteratorChain1 = new IteratorChain<Object>(iteratorChain0, iteratorChain0);
      iteratorChain1.updateCurrentIterator();
      boolean boolean0 = iteratorChain0.isLocked();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IteratorChain<Object> iteratorChain0 = new IteratorChain<Object>();
      // Undeclared exception!
      try { 
        iteratorChain0.addIterator((Iterator<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // iterator
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IteratorChain<Object> iteratorChain0 = null;
      try {
        iteratorChain0 = new IteratorChain<Object>((Iterator<?>) null, (Iterator<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // iterator
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IteratorChain<Object> iteratorChain0 = null;
      try {
        iteratorChain0 = new IteratorChain<Object>((Iterator<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // iterator
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IteratorChain<Integer> iteratorChain0 = new IteratorChain<Integer>();
      iteratorChain0.hasNext();
      // Undeclared exception!
      try { 
        iteratorChain0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator contains no elements
         //
         verifyException("org.apache.commons.collections4.iterators.AbstractEmptyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IteratorChain<Iterator<Object>> iteratorChain0 = new IteratorChain<Iterator<Object>>();
      IteratorChain<Object> iteratorChain1 = new IteratorChain<Object>(iteratorChain0, iteratorChain0);
      // Undeclared exception!
      try { 
        iteratorChain1.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // Iterator contains no elements
         //
         verifyException("org.apache.commons.collections4.iterators.AbstractEmptyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IteratorChain<Integer> iteratorChain0 = new IteratorChain<Integer>();
      iteratorChain0.hasNext();
      // Undeclared exception!
      try { 
        iteratorChain0.addIterator(iteratorChain0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IteratorChain cannot be changed after the first use of a method from the Iterator interface
         //
         verifyException("org.apache.commons.collections4.iterators.IteratorChain", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Iterator<Integer>[] iteratorArray0 = (Iterator<Integer>[]) Array.newInstance(Iterator.class, 6);
      IteratorChain<Integer> iteratorChain0 = null;
      try {
        iteratorChain0 = new IteratorChain<Integer>(iteratorArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // iterator
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IteratorChain<Integer> iteratorChain0 = new IteratorChain<Integer>();
      IteratorChain<Object> iteratorChain1 = new IteratorChain<Object>(iteratorChain0, iteratorChain0);
      // Undeclared exception!
      try { 
        iteratorChain1.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator contains no elements
         //
         verifyException("org.apache.commons.collections4.iterators.AbstractEmptyIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Iterator<Integer>[] iteratorArray0 = (Iterator<Integer>[]) Array.newInstance(Iterator.class, 0);
      IteratorChain<Integer> iteratorChain0 = new IteratorChain<Integer>(iteratorArray0);
      boolean boolean0 = iteratorChain0.isLocked();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IteratorChain<Object> iteratorChain0 = new IteratorChain<Object>();
      int int0 = iteratorChain0.size();
      assertEquals(0, int0);
  }
}
