/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 14:42:11 GMT 2025
 */

package org.apache.commons.collections4.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.collections4.iterators.ObjectArrayIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ObjectArrayIterator_ESTest extends ObjectArrayIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0);
      objectArrayIterator0.next();
      objectArrayIterator0.reset();
      assertEquals(7, objectArrayIterator0.getEndIndex());
      assertTrue(objectArrayIterator0.hasNext());
      assertEquals(0, objectArrayIterator0.getStartIndex());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ObjectArrayIterator<Object> objectArrayIterator0 = new ObjectArrayIterator<Object>(objectArray0);
      assertTrue(objectArrayIterator0.hasNext());
      
      objectArrayIterator0.index = 8;
      int int0 = objectArrayIterator0.getStartIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ObjectArrayIterator<Object> objectArrayIterator0 = new ObjectArrayIterator<Object>(objectArray0);
      assertTrue(objectArrayIterator0.hasNext());
      
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      objectArrayIterator0.index = 8;
      assertFalse(objectArrayIterator0.hasNext());
      
      objectArrayIterator0.forEachRemaining(consumer0);
      assertEquals(0, objectArrayIterator0.getStartIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      objectArray0[1] = object0;
      ObjectArrayIterator<Object> objectArrayIterator0 = new ObjectArrayIterator<Object>(objectArray0, 1);
      Object object1 = objectArrayIterator0.next();
      assertEquals(1, objectArrayIterator0.getStartIndex());
      assertNotNull(object1);
      assertTrue(objectArrayIterator0.hasNext());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer[] integerArray0 = new Integer[8];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0, 0);
      boolean boolean0 = objectArrayIterator0.hasNext();
      assertEquals(0, objectArrayIterator0.getStartIndex());
      assertTrue(boolean0);
      assertEquals(8, objectArrayIterator0.getEndIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer[] integerArray0 = new Integer[1];
      int int0 = 1;
      ObjectArrayIterator<Object> objectArrayIterator0 = new ObjectArrayIterator<Object>(integerArray0, int0);
      int int1 = objectArrayIterator0.getStartIndex();
      assertEquals(1, int1);
      assertEquals(1, objectArrayIterator0.getEndIndex());
      assertFalse(objectArrayIterator0.hasNext());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ObjectArrayIterator<Object> objectArrayIterator0 = new ObjectArrayIterator<Object>(objectArray0, 0, 0);
      int int0 = objectArrayIterator0.getEndIndex();
      assertEquals(0, int0);
      assertEquals(0, objectArrayIterator0.getStartIndex());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0);
      objectArrayIterator0.getArray();
      assertEquals(0, objectArrayIterator0.getEndIndex());
      assertEquals(0, objectArrayIterator0.getStartIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer[] integerArray0 = new Integer[1];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0);
      objectArrayIterator0.index = (-1193);
      // Undeclared exception!
      try { 
        objectArrayIterator0.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1193
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectArrayIterator<Object> objectArrayIterator0 = null;
      try {
        objectArrayIterator0 = new ObjectArrayIterator<Object>((Object[]) null, 164, 164);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectArrayIterator<Object> objectArrayIterator0 = null;
      try {
        objectArrayIterator0 = new ObjectArrayIterator<Object>((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ObjectArrayIterator<Object> objectArrayIterator0 = new ObjectArrayIterator<Object>(objectArray0);
      assertTrue(objectArrayIterator0.hasNext());
      
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      objectArrayIterator0.forEachRemaining(consumer0);
      assertEquals(0, objectArrayIterator0.getStartIndex());
      assertEquals(1, objectArrayIterator0.getEndIndex());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0);
      // Undeclared exception!
      try { 
        objectArrayIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      ObjectArrayIterator<Object> objectArrayIterator0 = new ObjectArrayIterator<Object>(objectArray0, 0, 0);
      boolean boolean0 = objectArrayIterator0.hasNext();
      assertFalse(boolean0);
      assertEquals(0, objectArrayIterator0.getEndIndex());
      assertEquals(0, objectArrayIterator0.getStartIndex());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      ObjectArrayIterator<Integer> objectArrayIterator0 = null;
      try {
        objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0, 3, (-386));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // End index must not be less than start index
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer[] integerArray0 = new Integer[13];
      ObjectArrayIterator<Object> objectArrayIterator0 = null;
      try {
        objectArrayIterator0 = new ObjectArrayIterator<Object>(integerArray0, 22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Start index must not be greater than the array length
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ObjectArrayIterator<Object> objectArrayIterator0 = null;
      try {
        objectArrayIterator0 = new ObjectArrayIterator<Object>(objectArray0, 443, 443);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // End index must not be greater than the array length
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer[] integerArray0 = new Integer[13];
      ObjectArrayIterator<Object> objectArrayIterator0 = null;
      try {
        objectArrayIterator0 = new ObjectArrayIterator<Object>(integerArray0, (-107));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Start index must not be less than zero
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer[] integerArray0 = new Integer[1];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0, 0);
      // Undeclared exception!
      try { 
        objectArrayIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // remove() method is not supported for an ObjectArrayIterator
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer[] integerArray0 = new Integer[2];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0);
      Integer[] integerArray1 = objectArrayIterator0.getArray();
      assertEquals(2, objectArrayIterator0.getEndIndex());
      assertTrue(objectArrayIterator0.hasNext());
      assertEquals(0, objectArrayIterator0.getStartIndex());
      assertNotNull(integerArray1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer[] integerArray0 = new Integer[5];
      ObjectArrayIterator<Integer> objectArrayIterator0 = new ObjectArrayIterator<Integer>(integerArray0);
      int int0 = objectArrayIterator0.getEndIndex();
      assertEquals(0, objectArrayIterator0.getStartIndex());
      assertEquals(5, int0);
      assertTrue(objectArrayIterator0.hasNext());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectArrayIterator<Object> objectArrayIterator0 = null;
      try {
        objectArrayIterator0 = new ObjectArrayIterator<Object>((Object[]) null, (-2460));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectArrayIterator", e);
      }
  }
}
