/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 16:47:25 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter.hasher.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.hasher.function.Murmur32x86Iterative;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Murmur32x86Iterative_ESTest extends Murmur32x86Iterative_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      murmur32x86Iterative0.getSignedness();
      assertEquals((-933798608L), murmur32x86Iterative0.getSignature());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      murmur32x86Iterative0.getProcessType();
      assertEquals((-933798608L), murmur32x86Iterative0.getSignature());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      murmur32x86Iterative0.getName();
      assertEquals((-933798608L), murmur32x86Iterative0.getSignature());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)70;
      long long0 = murmur32x86Iterative0.apply(byteArray0, (byte) (-49));
      assertEquals(789248627L, long0);
      assertEquals("Murmur3_x86_32", murmur32x86Iterative0.getName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      byte[] byteArray0 = new byte[3];
      long long0 = murmur32x86Iterative0.apply(byteArray0, 358);
      assertEquals("Murmur3_x86_32", murmur32x86Iterative0.getName());
      assertEquals((-182825157L), long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      // Undeclared exception!
      try { 
        murmur32x86Iterative0.apply((byte[]) null, 1324);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.hasher.function.Murmur32x86Iterative", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      byte[] byteArray0 = new byte[3];
      long long0 = murmur32x86Iterative0.apply(byteArray0, 3);
      assertEquals("Murmur3_x86_32", murmur32x86Iterative0.getName());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      String string0 = murmur32x86Iterative0.getProvider();
      assertEquals((-933798608L), murmur32x86Iterative0.getSignature());
      assertEquals("Apache Commons Collections", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Murmur32x86Iterative murmur32x86Iterative0 = new Murmur32x86Iterative();
      long long0 = murmur32x86Iterative0.getSignature();
      assertEquals((-933798608L), long0);
  }
}
