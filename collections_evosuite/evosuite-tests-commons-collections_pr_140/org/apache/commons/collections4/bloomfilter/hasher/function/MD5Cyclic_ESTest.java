/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 16:43:14 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter.hasher.function;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.hasher.function.MD5Cyclic;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MD5Cyclic_ESTest extends MD5Cyclic_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      byte[] byteArray0 = new byte[4];
      long long0 = mD5Cyclic0.apply(byteArray0, (byte) (-1));
      assertEquals((-4953910821303538052L), long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      mD5Cyclic0.getSignedness();
      assertEquals((-6790451487108189226L), mD5Cyclic0.getSignature());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      mD5Cyclic0.getProcessType();
      assertEquals((-6790451487108189226L), mD5Cyclic0.getSignature());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      mD5Cyclic0.getName();
      assertEquals((-6790451487108189226L), mD5Cyclic0.getSignature());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)64;
      long long0 = mD5Cyclic0.apply(byteArray0, 0);
      assertEquals((-6790451487108189226L), mD5Cyclic0.getSignature());
      assertEquals(3317630158241086524L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      // Undeclared exception!
      try { 
        mD5Cyclic0.apply((byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.MessageDigest", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      long long0 = mD5Cyclic0.apply((byte[]) null, 1);
      assertEquals((-6790451487108189226L), mD5Cyclic0.getSignature());
      assertEquals((-4953910821303538052L), long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      String string0 = mD5Cyclic0.getProvider();
      assertEquals("Apache Commons Collections", string0);
      assertEquals((-6790451487108189226L), mD5Cyclic0.getSignature());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MD5Cyclic mD5Cyclic0 = new MD5Cyclic();
      long long0 = mD5Cyclic0.getSignature();
      assertEquals((-6790451487108189226L), long0);
  }
}
