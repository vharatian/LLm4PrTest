/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 15:00:50 GMT 2025
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.apache.commons.collections4.Get;
import org.apache.commons.collections4.IterableMap;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.Put;
import org.apache.commons.collections4.SplitMapUtils;
import org.apache.commons.collections4.map.CompositeMap;
import org.apache.commons.collections4.map.SingletonMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SplitMapUtils_ESTest extends SplitMapUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CompositeMap<Object, TimeUnit> compositeMap0 = new CompositeMap<Object, TimeUnit>();
      Map<Object, TimeUnit> map0 = SplitMapUtils.writableMap((Put<Object, TimeUnit>) compositeMap0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SingletonMap<Object, Predicate<TimeUnit>> singletonMap0 = new SingletonMap<Object, Predicate<TimeUnit>>();
      IterableMap<Object, Predicate<TimeUnit>> iterableMap0 = SplitMapUtils.readableMap((Get<Object, Predicate<TimeUnit>>) singletonMap0);
      assertFalse(iterableMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CompositeMap<Object, TimeUnit> compositeMap0 = new CompositeMap<Object, TimeUnit>();
      IterableMap<Object, TimeUnit> iterableMap0 = SplitMapUtils.readableMap((Get<Object, TimeUnit>) compositeMap0);
      assertEquals(0, iterableMap0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        SplitMapUtils.writableMap((Put<TimeUnit, Predicate<Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // put
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        SplitMapUtils.readableMap((Get<Object, TimeUnit>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // get
         //
         verifyException("java.util.Objects", e);
      }
  }
}
