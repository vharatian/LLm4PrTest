/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 08:08:46 GMT 2025
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.PredicateUtils;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.functors.ConstantTransformer;
import org.apache.commons.collections4.functors.EqualPredicate;
import org.apache.commons.collections4.functors.IdentityPredicate;
import org.apache.commons.collections4.functors.InstanceofPredicate;
import org.apache.commons.collections4.functors.InvokerTransformer;
import org.apache.commons.collections4.functors.MapTransformer;
import org.apache.commons.collections4.functors.NonePredicate;
import org.apache.commons.collections4.functors.NullIsExceptionPredicate;
import org.apache.commons.collections4.functors.NullIsTruePredicate;
import org.apache.commons.collections4.functors.UniquePredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PredicateUtils_ESTest extends PredicateUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>(boolean0);
      Predicate<Boolean> predicate0 = PredicateUtils.eitherPredicate((Predicate<? super Boolean>) equalPredicate0, (Predicate<? super Boolean>) equalPredicate0);
      Predicate<Boolean> predicate1 = PredicateUtils.neitherPredicate((Predicate<? super Boolean>) equalPredicate0, (Predicate<? super Boolean>) predicate0);
      assertFalse(predicate1.equals((Object)predicate0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>(boolean0);
      Predicate<Object> predicate0 = PredicateUtils.neitherPredicate((Predicate<? super Object>) equalPredicate0, (Predicate<? super Object>) equalPredicate0);
      Predicate<Boolean> predicate1 = PredicateUtils.eitherPredicate((Predicate<? super Boolean>) predicate0, (Predicate<? super Boolean>) equalPredicate0);
      assertNotNull(predicate1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>(boolean0);
      Predicate<Object> predicate0 = PredicateUtils.neitherPredicate((Predicate<? super Object>) equalPredicate0, (Predicate<? super Object>) equalPredicate0);
      Predicate<NonePredicate<Object>> predicate1 = PredicateUtils.orPredicate((Predicate<? super NonePredicate<Object>>) equalPredicate0, (Predicate<? super NonePredicate<Object>>) predicate0);
      assertNotNull(predicate1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      Predicate<Object> predicate0 = PredicateUtils.instanceofPredicate(class0);
      NullIsTruePredicate<Object> nullIsTruePredicate0 = new NullIsTruePredicate<Object>(predicate0);
      Predicate<NonePredicate<NonePredicate>> predicate1 = PredicateUtils.andPredicate((Predicate<? super NonePredicate<NonePredicate>>) predicate0, (Predicate<? super NonePredicate<NonePredicate>>) nullIsTruePredicate0);
      assertNotNull(predicate1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>((Object) null);
      NullIsExceptionPredicate<Object> nullIsExceptionPredicate0 = new NullIsExceptionPredicate<Object>(identityPredicate0);
      predicateArray0[0] = (Predicate<Object>) nullIsExceptionPredicate0;
      Predicate<Object> predicate0 = PredicateUtils.onePredicate((Predicate<? super Object>[]) predicateArray0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>((Object) null);
      NullIsExceptionPredicate<Object> nullIsExceptionPredicate0 = new NullIsExceptionPredicate<Object>(identityPredicate0);
      Predicate<Object> predicate0 = PredicateUtils.nullIsFalsePredicate((Predicate<? super Object>) nullIsExceptionPredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 5);
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(classArray0[0]);
      Predicate<Boolean> predicate0 = PredicateUtils.notPredicate((Predicate<? super Boolean>) instanceofPredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>((Object) null);
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 3);
      predicateArray0[0] = (Predicate<Object>) identityPredicate0;
      predicateArray0[1] = (Predicate<Object>) identityPredicate0;
      predicateArray0[2] = (Predicate<Object>) identityPredicate0;
      Predicate<Object> predicate0 = PredicateUtils.nonePredicate((Predicate<? super Object>[]) predicateArray0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<Predicate<Object>> stack0 = new Stack<Predicate<Object>>();
      Predicate<Object> predicate0 = PredicateUtils.nonePredicate((Collection<? extends Predicate<? super Object>>) stack0);
      assertFalse(stack0.contains(predicate0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<Boolean, Boolean> hashMap0 = new HashMap<Boolean, Boolean>();
      Transformer<Boolean, Boolean> transformer0 = MapTransformer.mapTransformer((Map<? super Boolean, ? extends Boolean>) hashMap0);
      Predicate<Boolean> predicate0 = PredicateUtils.asPredicate((Transformer<? super Boolean, Boolean>) transformer0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      IdentityPredicate<Object> identityPredicate0 = new IdentityPredicate<Object>((Object) null);
      predicateArray0[0] = (Predicate<Object>) identityPredicate0;
      Predicate<Object>[] predicateArray1 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 3);
      predicateArray1[0] = predicateArray0[0];
      predicateArray1[1] = (Predicate<Object>) identityPredicate0;
      predicateArray1[2] = (Predicate<Object>) identityPredicate0;
      Predicate<NonePredicate<Boolean>> predicate0 = PredicateUtils.anyPredicate((Predicate<? super NonePredicate<Boolean>>[]) predicateArray1);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 0);
      Predicate<Predicate<Object>> predicate0 = PredicateUtils.allPredicate((Predicate<? super Predicate<Object>>[]) predicateArray0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transformer<Object, Boolean> transformer0 = ConstantTransformer.nullTransformer();
      // Undeclared exception!
      try { 
        PredicateUtils.transformedPredicate((Transformer<? super Object, ?>) transformer0, (Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.orPredicate((Predicate<? super Object>) null, (Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate1
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Predicate<? super NonePredicate<Boolean>>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Collection<? extends Predicate<? super Boolean>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stack<Predicate<Object>> stack0 = new Stack<Predicate<Object>>();
      stack0.add((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Collection<? extends Predicate<? super Object>>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nullIsTruePredicate((Predicate<? super Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nullIsExceptionPredicate((Predicate<? super Transformer<Boolean, Transformer>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Predicate<? super Object>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedHashSet<Predicate<Object>> linkedHashSet0 = new LinkedHashSet<Predicate<Object>>();
      linkedHashSet0.add((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Collection<? extends Predicate<? super Transformer<Boolean, Predicate<Object>>>>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.neitherPredicate((Predicate<? super Boolean>) null, (Predicate<? super Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        PredicateUtils.invokerPredicate((String) null, (Class<?>[]) classArray0, (Object[]) classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // methodName
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        PredicateUtils.invokerPredicate("B", (Class<?>[]) null, (Object[]) classArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter types must match the arguments
         //
         verifyException("org.apache.commons.collections4.functors.InvokerTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.invokerPredicate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // methodName
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.eitherPredicate((Predicate<? super Transformer<Object, Object>>) null, (Predicate<? super Transformer<Object, Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Predicate<? super Object>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Collection<? extends Predicate<? super Object>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      linkedList0.addFirst((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Collection<? extends Predicate<? super Boolean>>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.andPredicate((Predicate<? super Boolean>) null, (Predicate<? super Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate1
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Predicate<? super Boolean>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Collection<? extends Predicate<? super Boolean>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedHashSet<Predicate<Object>> linkedHashSet0 = new LinkedHashSet<Predicate<Object>>();
      linkedHashSet0.add((Predicate<Object>) null);
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Collection<? extends Predicate<? super Object>>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Predicate<? super Object>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.onePredicate((Predicate<? super Boolean>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.asPredicate((Transformer<? super Boolean, Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // transformer
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 5);
      InvokerTransformer<Object, NonePredicate<Boolean>> invokerTransformer0 = new InvokerTransformer<Object, NonePredicate<Boolean>>("$!", classArray0, classArray0);
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(classArray0[1]);
      Predicate<NonePredicate<Boolean>> predicate0 = PredicateUtils.transformedPredicate((Transformer<? super NonePredicate<Boolean>, ? extends NonePredicate<Boolean>>) invokerTransformer0, (Predicate<? super NonePredicate<Boolean>>) instanceofPredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PriorityQueue<Predicate<Object>> priorityQueue0 = new PriorityQueue<Predicate<Object>>();
      Predicate<Boolean> predicate0 = PredicateUtils.onePredicate((Collection<? extends Predicate<? super Boolean>>) priorityQueue0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UniquePredicate<Object> uniquePredicate0 = new UniquePredicate<Object>();
      Predicate<Transformer<Object, Object>> predicate0 = PredicateUtils.nullIsExceptionPredicate((Predicate<? super Transformer<Object, Object>>) uniquePredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 1);
      // Undeclared exception!
      try { 
        PredicateUtils.allPredicate((Predicate<? super Object>[]) predicateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates[0]
         //
         verifyException("org.apache.commons.collections4.functors.FunctorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 5);
      Predicate<Object> predicate0 = PredicateUtils.invokerPredicate("P<_<I8n", (Class<?>[]) classArray0, (Object[]) classArray0);
      Predicate<Transformer<Boolean, NonePredicate>> predicate1 = PredicateUtils.andPredicate((Predicate<? super Transformer<Boolean, NonePredicate>>) predicate0, (Predicate<? super Transformer<Boolean, NonePredicate>>) predicate0);
      assertNotNull(predicate1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Predicate<NonePredicate<Object>> predicate0 = PredicateUtils.falsePredicate();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nonePredicate((Collection<? extends Predicate<? super Boolean>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<Predicate<Object>> linkedList0 = new LinkedList<Predicate<Object>>();
      Predicate<Boolean> predicate0 = PredicateUtils.anyPredicate((Collection<? extends Predicate<? super Boolean>>) linkedList0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Predicate<Boolean> predicate0 = PredicateUtils.equalPredicate(boolean0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Predicate<NonePredicate<Object>> predicate0 = PredicateUtils.uniquePredicate();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UniquePredicate<Object> uniquePredicate0 = new UniquePredicate<Object>();
      Predicate<NonePredicate<Transformer>> predicate0 = PredicateUtils.nullIsTruePredicate((Predicate<? super NonePredicate<Transformer>>) uniquePredicate0);
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PriorityQueue<Predicate<Object>> priorityQueue0 = new PriorityQueue<Predicate<Object>>();
      Predicate<Object> predicate0 = PredicateUtils.allPredicate((Collection<? extends Predicate<? super Object>>) priorityQueue0);
      assertFalse(priorityQueue0.contains(predicate0));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Predicate<Object> predicate0 = PredicateUtils.truePredicate();
      Predicate<Predicate<Boolean>> predicate1 = PredicateUtils.orPredicate((Predicate<? super Predicate<Boolean>>) predicate0, (Predicate<? super Predicate<Boolean>>) predicate0);
      assertNotNull(predicate1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.anyPredicate((Predicate<? super NonePredicate<NonePredicate>>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicates
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Predicate<Boolean> predicate0 = PredicateUtils.invokerPredicate("HV3[tuEH>=6");
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Predicate<NonePredicate<Transformer>> predicate0 = PredicateUtils.exceptionPredicate();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Predicate<NonePredicate<Transformer>> predicate0 = PredicateUtils.nullPredicate();
      assertNotNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Predicate<Transformer<Object, NonePredicate>> predicate0 = PredicateUtils.notNullPredicate();
      Predicate<Transformer<Object, NonePredicate>> predicate1 = PredicateUtils.eitherPredicate((Predicate<? super Transformer<Object, NonePredicate>>) predicate0, (Predicate<? super Transformer<Object, NonePredicate>>) predicate0);
      assertFalse(predicate1.equals((Object)predicate0));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.notPredicate((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        PredicateUtils.nullIsFalsePredicate((Predicate<? super NonePredicate<Predicate>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }
}
