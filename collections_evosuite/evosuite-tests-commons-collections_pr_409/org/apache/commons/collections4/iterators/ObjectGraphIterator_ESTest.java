/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 08:23:12 GMT 2025
 */

package org.apache.commons.collections4.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.EnumSet;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Stack;
import org.apache.commons.collections4.Factory;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.functors.ChainedTransformer;
import org.apache.commons.collections4.functors.ConstantFactory;
import org.apache.commons.collections4.functors.ConstantTransformer;
import org.apache.commons.collections4.functors.EqualPredicate;
import org.apache.commons.collections4.functors.ExceptionTransformer;
import org.apache.commons.collections4.functors.FactoryTransformer;
import org.apache.commons.collections4.functors.InstanceofPredicate;
import org.apache.commons.collections4.functors.InvokerTransformer;
import org.apache.commons.collections4.functors.MapTransformer;
import org.apache.commons.collections4.functors.NOPTransformer;
import org.apache.commons.collections4.functors.NotPredicate;
import org.apache.commons.collections4.functors.NullIsFalsePredicate;
import org.apache.commons.collections4.iterators.ObjectGraphIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ObjectGraphIterator_ESTest extends ObjectGraphIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.Category locale_Category2 = Locale.Category.DISPLAY;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_Category1, locale_Category0, locale_Category2);
      Iterator<Locale.Category> iterator0 = enumSet0.iterator();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(iterator0);
      objectGraphIterator0.next();
      objectGraphIterator0.hasNext();
      Locale.Category locale_Category3 = Locale.Category.FORMAT;
      objectGraphIterator0.findNext(locale_Category3);
      ArrayList<Predicate<Object>> arrayList0 = new ArrayList<Predicate<Object>>();
      Iterator<Predicate<Object>> iterator1 = arrayList0.iterator();
      ObjectGraphIterator<Predicate<Object>> objectGraphIterator1 = new ObjectGraphIterator<Predicate<Object>>(iterator1);
      Class<Object> class0 = Object.class;
      InstanceofPredicate instanceofPredicate0 = new InstanceofPredicate(class0);
      objectGraphIterator1.findNext(instanceofPredicate0);
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 7);
      classArray0[0] = class0;
      classArray0[1] = class0;
      classArray0[2] = class0;
      objectGraphIterator0.remove();
      Integer integer0 = new Integer((-2666));
      Integer integer1 = new Integer(133);
      assertFalse(integer1.equals((Object)integer0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      Iterator<Object> iterator0 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Object> objectGraphIterator0 = new ObjectGraphIterator<Object>(iterator0);
      objectGraphIterator0.findNext(iterator0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Factory<Locale.Category> factory0 = ConstantFactory.constantFactory(locale_Category0);
      Transformer<Locale.Category, Locale.Category> transformer0 = FactoryTransformer.factoryTransformer((Factory<? extends Locale.Category>) factory0);
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      ObjectGraphIterator<Locale.Category> objectGraphIterator1 = new ObjectGraphIterator<Locale.Category>(locale_Category1, transformer0);
      ObjectGraphIterator<Locale.Category> objectGraphIterator2 = new ObjectGraphIterator<Locale.Category>(objectGraphIterator1);
      Locale.Category locale_Category2 = Locale.Category.FORMAT;
      objectGraphIterator2.findNext(locale_Category2);
      ObjectGraphIterator<Object> objectGraphIterator3 = new ObjectGraphIterator<Object>(objectGraphIterator0);
      // Undeclared exception!
      try { 
        objectGraphIterator3.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.Category locale_Category2 = Locale.Category.DISPLAY;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_Category1, locale_Category0, locale_Category2);
      Iterator<Locale.Category> iterator0 = enumSet0.iterator();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(iterator0);
      Locale.Category locale_Category3 = Locale.Category.FORMAT;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Iterator<Integer> iterator1 = linkedList0.iterator();
      Transformer<Object, Locale.Category> transformer0 = MapTransformer.mapTransformer((Map<? super Object, ? extends Locale.Category>) null);
      ObjectGraphIterator<Locale.Category> objectGraphIterator1 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      ObjectGraphIterator<Object> objectGraphIterator2 = new ObjectGraphIterator<Object>(iterator0);
      ObjectGraphIterator<Locale.Category> objectGraphIterator3 = new ObjectGraphIterator<Locale.Category>(objectGraphIterator1);
      Integer integer0 = new Integer((-1011));
      Transformer<Object, Integer> transformer1 = ExceptionTransformer.exceptionTransformer();
      ObjectGraphIterator<Integer> objectGraphIterator4 = new ObjectGraphIterator<Integer>(integer0, transformer1);
      ArrayDeque<Integer> arrayDeque0 = new ArrayDeque<Integer>();
      arrayDeque0.descendingIterator();
      ObjectGraphIterator<Integer> objectGraphIterator5 = new ObjectGraphIterator<Integer>(iterator1);
      Integer integer1 = new Integer((-1011));
      ObjectGraphIterator<Integer> objectGraphIterator6 = new ObjectGraphIterator<Integer>(integer1, transformer1);
      // Undeclared exception!
      try { 
        objectGraphIterator6.next();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ExceptionTransformer invoked
         //
         verifyException("org.apache.commons.collections4.functors.ExceptionTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      ConstantTransformer<Locale.Category, Locale.Category> constantTransformer0 = new ConstantTransformer<Locale.Category, Locale.Category>(locale_Category0);
      ConstantTransformer.constantTransformer((Object) locale_Category0);
      ConstantTransformer.constantTransformer((Object) constantTransformer0);
      Transformer<Object, Predicate<Object>> transformer0 = ConstantTransformer.constantTransformer((Predicate<Object>) null);
      ObjectGraphIterator<Predicate<Object>> objectGraphIterator0 = new ObjectGraphIterator<Predicate<Object>>((Predicate<Object>) null, transformer0);
      Integer integer0 = new Integer((-1089));
      ObjectGraphIterator<Integer> objectGraphIterator1 = new ObjectGraphIterator<Integer>(integer0, (Transformer<? super Integer, ? extends Integer>) null);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Iterator<Integer> iterator0 = linkedHashSet0.iterator();
      objectGraphIterator1.findNextByIterator(iterator0);
      // Undeclared exception!
      try { 
        objectGraphIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No more elements in the iteration
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0);
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      enumSet0.add(locale_Category1);
      Iterator<Locale.Category> iterator0 = enumSet0.iterator();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(iterator0);
      ArrayDeque<Integer> arrayDeque0 = new ArrayDeque<Integer>();
      Iterator<Integer> iterator1 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Integer> objectGraphIterator1 = new ObjectGraphIterator<Integer>(iterator1);
      Iterator<Integer> iterator2 = arrayDeque0.iterator();
      objectGraphIterator1.findNextByIterator(iterator2);
      objectGraphIterator1.findNextByIterator(iterator2);
      objectGraphIterator1.findNextByIterator(iterator2);
      HashSet<Transformer<Object, Object>> hashSet0 = new HashSet<Transformer<Object, Object>>();
      Transformer<Object, Object> transformer0 = ChainedTransformer.chainedTransformer((Collection<? extends Transformer<? super Object, ?>>) hashSet0);
      hashSet0.add(transformer0);
      ObjectGraphIterator<Object> objectGraphIterator2 = new ObjectGraphIterator<Object>(objectGraphIterator0, transformer0);
      objectGraphIterator2.findNext(objectGraphIterator1);
      objectGraphIterator0.findNextByIterator(iterator0);
      Predicate<Object>[] predicateArray0 = (Predicate<Object>[]) Array.newInstance(Predicate.class, 6);
      // Undeclared exception!
      try { 
        NullIsFalsePredicate.nullIsFalsePredicate((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // predicate
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      Iterator<Object> iterator0 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Object> objectGraphIterator0 = new ObjectGraphIterator<Object>(iterator0);
      objectGraphIterator0.findNext(iterator0);
      Transformer<Object, Locale.Category> transformer0 = ConstantTransformer.nullTransformer();
      ArrayList<Locale.Category> arrayList0 = new ArrayList<Locale.Category>();
      arrayList0.listIterator();
      Integer integer0 = new Integer((-1262));
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      ObjectGraphIterator<Locale.Category> objectGraphIterator1 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      ObjectGraphIterator<Locale.Category> objectGraphIterator2 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      assertFalse(objectGraphIterator2.equals((Object)objectGraphIterator1));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      Object object0 = new Object();
      arrayDeque0.add(object0);
      Iterator<Object> iterator0 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Object> objectGraphIterator0 = new ObjectGraphIterator<Object>(iterator0);
      objectGraphIterator0.findNext(iterator0);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Transformer<Object, Locale.Category> transformer0 = ConstantTransformer.nullTransformer();
      ObjectGraphIterator<Locale.Category> objectGraphIterator1 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      ArrayList<Locale.Category> arrayList0 = new ArrayList<Locale.Category>();
      ListIterator<Locale.Category> listIterator0 = arrayList0.listIterator();
      objectGraphIterator1.findNextByIterator(listIterator0);
      Factory<Integer> factory0 = ConstantFactory.constantFactory((Integer) null);
      FactoryTransformer<Object, Integer> factoryTransformer0 = new FactoryTransformer<Object, Integer>(factory0);
      ObjectGraphIterator<Integer> objectGraphIterator2 = new ObjectGraphIterator<Integer>((Integer) null, factoryTransformer0);
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = new Integer((-3404));
      stack0.add(integer0);
      stack0.add(integer0);
      Iterator<Integer> iterator1 = stack0.iterator();
      objectGraphIterator2.findNextByIterator(iterator1);
      objectGraphIterator2.next();
      objectGraphIterator2.hasNext();
      objectGraphIterator2.findNext((Integer) null);
      // Undeclared exception!
      try { 
        objectGraphIterator1.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No more elements in the iteration
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-214));
      ConstantTransformer<Object, Integer> constantTransformer0 = new ConstantTransformer<Object, Integer>(integer1);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      ConstantTransformer.constantTransformer(locale_Category0);
      ConstantTransformer.constantTransformer(locale_Category0);
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      ConstantTransformer.constantTransformer(locale_Category1);
      ConstantTransformer.constantTransformer(locale_Category0);
      ConstantTransformer.constantTransformer(locale_Category0);
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>(integer0, constantTransformer0);
      ArrayDeque<Integer> arrayDeque0 = new ArrayDeque<Integer>();
      Iterator<Integer> iterator0 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Integer> objectGraphIterator1 = new ObjectGraphIterator<Integer>(iterator0);
      ObjectGraphIterator<Integer> objectGraphIterator2 = new ObjectGraphIterator<Integer>(integer1, constantTransformer0);
      objectGraphIterator2.next();
      ObjectGraphIterator<Object> objectGraphIterator3 = new ObjectGraphIterator<Object>(iterator0);
      objectGraphIterator3.findNextByIterator(objectGraphIterator0);
      objectGraphIterator1.findNextByIterator(objectGraphIterator2);
      // Undeclared exception!
      try { 
        objectGraphIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<Predicate<Object>> arrayList0 = new ArrayList<Predicate<Object>>();
      Iterator<Predicate<Object>> iterator0 = arrayList0.iterator();
      ObjectGraphIterator<Predicate<Object>> objectGraphIterator0 = new ObjectGraphIterator<Predicate<Object>>(iterator0);
      Integer.getInteger("", (-126));
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Transformer<Object, Locale.Category> transformer0 = InvokerTransformer.invokerTransformer("h.3`B(Ho?#.Oe&c*x:n", (Class<?>[]) null, (Object[]) null);
      ObjectGraphIterator<Locale.Category> objectGraphIterator1 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      // Undeclared exception!
      try { 
        objectGraphIterator1.hasNext();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // InvokerTransformer: The method 'h.3`B(Ho?#.Oe&c*x:n' on 'class java.util.Locale$Category' does not exist
         //
         verifyException("org.apache.commons.collections4.functors.InvokerTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-214));
      ConstantTransformer<Object, Integer> constantTransformer0 = new ConstantTransformer<Object, Integer>(integer1);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      ConstantTransformer.constantTransformer(locale_Category0);
      ConstantTransformer.constantTransformer(locale_Category0);
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      ConstantTransformer.constantTransformer(locale_Category1);
      ConstantTransformer.constantTransformer(locale_Category0);
      ConstantTransformer.constantTransformer(locale_Category0);
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>(integer0, constantTransformer0);
      objectGraphIterator0.hasNext();
      objectGraphIterator0.findNext(integer1);
      objectGraphIterator0.findNext(integer1);
      ArrayList<Locale.Category> arrayList0 = new ArrayList<Locale.Category>();
      ListIterator<Locale.Category> listIterator0 = arrayList0.listIterator();
      ObjectGraphIterator<Locale.Category> objectGraphIterator1 = new ObjectGraphIterator<Locale.Category>(listIterator0);
      objectGraphIterator1.findNextByIterator(listIterator0);
      ObjectGraphIterator<Object> objectGraphIterator2 = new ObjectGraphIterator<Object>((Iterator<?>) null);
      objectGraphIterator2.updateCurrentIterator();
      // Undeclared exception!
      try { 
        objectGraphIterator1.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-39));
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>(integer0, (Transformer<? super Integer, ? extends Integer>) null);
      objectGraphIterator0.updateCurrentIterator();
      ObjectGraphIterator<Object> objectGraphIterator1 = new ObjectGraphIterator<Object>(objectGraphIterator0);
      objectGraphIterator1.updateCurrentIterator();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.Category locale_Category2 = Locale.Category.DISPLAY;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_Category1, locale_Category0, locale_Category2);
      Iterator<Locale.Category> iterator0 = enumSet0.iterator();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(iterator0);
      objectGraphIterator0.next();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Iterator<Integer> iterator1 = linkedList0.iterator();
      ObjectGraphIterator<Integer> objectGraphIterator1 = new ObjectGraphIterator<Integer>(iterator1);
      // Undeclared exception!
      try { 
        objectGraphIterator1.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.Category locale_Category2 = Locale.Category.FORMAT;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_Category1, locale_Category0, locale_Category2);
      Iterator<Locale.Category> iterator0 = enumSet0.iterator();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(iterator0);
      objectGraphIterator0.next();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Iterator<Integer> iterator1 = linkedList0.iterator();
      ObjectGraphIterator<Integer> objectGraphIterator1 = new ObjectGraphIterator<Integer>(iterator1);
      // Undeclared exception!
      try { 
        objectGraphIterator1.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Transformer<Locale.Category, Locale.Category> transformer0 = NOPTransformer.nopTransformer();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      // Undeclared exception!
      try { 
        objectGraphIterator0.findNextByIterator((Iterator<? extends Locale.Category>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NOPTransformer.nopTransformer();
      Integer integer0 = new Integer(0);
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>(integer0, (Transformer<? super Integer, ? extends Integer>) null);
      ObjectGraphIterator<Integer> objectGraphIterator1 = new ObjectGraphIterator<Integer>(integer0, (Transformer<? super Integer, ? extends Integer>) null);
      ObjectGraphIterator<Object> objectGraphIterator2 = new ObjectGraphIterator<Object>(objectGraphIterator0, (Transformer<? super Object, ?>) null);
      objectGraphIterator2.next();
      ConstantTransformer.constantTransformer((Object) null);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      objectGraphIterator2.findNext((Object) null);
      // Undeclared exception!
      try { 
        objectGraphIterator2.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Transformer<Locale.Category, Locale.Category> transformer0 = NOPTransformer.nopTransformer();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      // Undeclared exception!
      try { 
        objectGraphIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(1963);
      Transformer<Object, Object> transformer0 = ExceptionTransformer.exceptionTransformer();
      ObjectGraphIterator<Object> objectGraphIterator0 = new ObjectGraphIterator<Object>(integer0, transformer0);
      // Undeclared exception!
      try { 
        objectGraphIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Iterator remove() cannot be called at this time
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>((Integer) null, (Transformer<? super Integer, ? extends Integer>) null);
      Integer integer0 = new Integer(3031);
      objectGraphIterator0.findNext(integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Transformer<Locale.Category, Locale.Category> transformer0 = NOPTransformer.nopTransformer();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      boolean boolean0 = objectGraphIterator0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Transformer<Locale.Category, Locale.Category> transformer0 = NOPTransformer.nopTransformer();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(locale_Category0, transformer0);
      ObjectGraphIterator<Locale.Category> objectGraphIterator1 = new ObjectGraphIterator<Locale.Category>(objectGraphIterator0);
      boolean boolean0 = objectGraphIterator1.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      ObjectGraphIterator<Object> objectGraphIterator0 = new ObjectGraphIterator<Object>(object0, (Transformer<? super Object, ?>) null);
      ArrayDeque<Integer> arrayDeque0 = new ArrayDeque<Integer>();
      Iterator<Integer> iterator0 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Integer> objectGraphIterator1 = new ObjectGraphIterator<Integer>(iterator0);
      objectGraphIterator0.findNextByIterator(iterator0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Iterator<Integer> iterator0 = linkedList0.iterator();
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>(iterator0);
      // Undeclared exception!
      try { 
        objectGraphIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No more elements in the iteration
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.Category[] locale_CategoryArray0 = new Locale.Category[7];
      locale_CategoryArray0[0] = locale_Category0;
      locale_CategoryArray0[1] = locale_Category0;
      locale_CategoryArray0[2] = locale_Category0;
      locale_CategoryArray0[3] = locale_Category0;
      locale_CategoryArray0[4] = locale_Category0;
      locale_CategoryArray0[5] = locale_Category0;
      locale_CategoryArray0[6] = locale_Category0;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_CategoryArray0);
      EnumSet<Locale.Category> enumSet1 = enumSet0.clone();
      Iterator<Locale.Category> iterator0 = enumSet1.iterator();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>(iterator0);
      Object object0 = objectGraphIterator0.next();
      Transformer<Object, Object> transformer0 = ExceptionTransformer.exceptionTransformer();
      ObjectGraphIterator<Object> objectGraphIterator1 = new ObjectGraphIterator<Object>(object0, transformer0);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Iterator<Integer> iterator1 = linkedHashSet0.iterator();
      objectGraphIterator1.findNextByIterator(iterator1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NOPTransformer.nopTransformer();
      ObjectGraphIterator<Locale.Category> objectGraphIterator0 = new ObjectGraphIterator<Locale.Category>((Iterator<? extends Locale.Category>) null);
      boolean boolean0 = objectGraphIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      ArrayDeque<Integer> arrayDeque0 = new ArrayDeque<Integer>();
      Iterator<Integer> iterator0 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>(iterator0);
      // Undeclared exception!
      try { 
        objectGraphIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No more elements in the iteration
         //
         verifyException("org.apache.commons.collections4.iterators.ObjectGraphIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayDeque<Integer> arrayDeque0 = new ArrayDeque<Integer>();
      Iterator<Integer> iterator0 = arrayDeque0.descendingIterator();
      ObjectGraphIterator<Integer> objectGraphIterator0 = new ObjectGraphIterator<Integer>(iterator0);
      objectGraphIterator0.hasNext();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>(arrayDeque0);
      NotPredicate.notPredicate((Predicate<? super Object>) equalPredicate0);
      // Undeclared exception!
      try { 
        InvokerTransformer.invokerTransformer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // methodName
         //
         verifyException("java.util.Objects", e);
      }
  }
}
