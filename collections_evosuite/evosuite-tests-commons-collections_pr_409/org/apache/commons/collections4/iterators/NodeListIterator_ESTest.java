/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 08:21:37 GMT 2025
 */

package org.apache.commons.collections4.iterators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.commons.collections4.iterators.NodeListIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class NodeListIterator_ESTest extends NodeListIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode1);
      Node node1 = iIOMetadataNode1.removeChild(node0);
      NodeListIterator nodeListIterator0 = new NodeListIterator(node1);
      // Undeclared exception!
      try { 
        nodeListIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // underlying nodeList has no more elements
         //
         verifyException("org.apache.commons.collections4.iterators.NodeListIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.removeChild(iIOMetadataNode0);
      NodeListIterator nodeListIterator0 = new NodeListIterator(node0);
      boolean boolean0 = nodeListIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      NodeListIterator nodeListIterator0 = new NodeListIterator((NodeList) iIOMetadataNode0);
      Node node0 = nodeListIterator0.next();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      NodeListIterator nodeListIterator0 = new NodeListIterator((NodeList) iIOMetadataNode0);
      Node node1 = nodeListIterator0.next();
      assertSame(node1, node0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      NodeListIterator nodeListIterator0 = new NodeListIterator((NodeList) iIOMetadataNode0);
      boolean boolean0 = nodeListIterator0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NodeListIterator nodeListIterator0 = null;
      try {
        nodeListIterator0 = new NodeListIterator((NodeList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // nodeList
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NodeListIterator nodeListIterator0 = null;
      try {
        nodeListIterator0 = new NodeListIterator((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // node
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NodeListIterator nodeListIterator0 = new NodeListIterator((Node) iIOMetadataNode0);
      // Undeclared exception!
      try { 
        nodeListIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // underlying nodeList has no more elements
         //
         verifyException("org.apache.commons.collections4.iterators.NodeListIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("eV");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagName("eV");
      NodeListIterator nodeListIterator0 = new NodeListIterator(nodeList0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      nodeListIterator0.forEachRemaining(consumer0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NodeListIterator nodeListIterator0 = new NodeListIterator((NodeList) iIOMetadataNode0);
      // Undeclared exception!
      try { 
        nodeListIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // remove() method not supported for a NodeListIterator.
         //
         verifyException("org.apache.commons.collections4.iterators.NodeListIterator", e);
      }
  }
}
