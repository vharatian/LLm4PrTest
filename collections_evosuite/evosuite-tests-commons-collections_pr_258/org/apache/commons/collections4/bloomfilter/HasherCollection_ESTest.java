/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 13:20:38 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.List;
import java.util.Stack;
import java.util.function.IntPredicate;
import org.apache.commons.collections4.bloomfilter.BitMapProducer;
import org.apache.commons.collections4.bloomfilter.Hasher;
import org.apache.commons.collections4.bloomfilter.HasherCollection;
import org.apache.commons.collections4.bloomfilter.IndexProducer;
import org.apache.commons.collections4.bloomfilter.Shape;
import org.apache.commons.collections4.bloomfilter.SimpleHasher;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class HasherCollection_ESTest extends HasherCollection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HasherCollection hasherCollection0 = new HasherCollection();
      // Undeclared exception!
      try { 
        hasherCollection0.uniqueIndices((Shape) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // shape
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HasherCollection hasherCollection0 = new HasherCollection();
      // Undeclared exception!
      try { 
        hasherCollection0.indices((Shape) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // shape
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HasherCollection hasherCollection0 = new HasherCollection();
      // Undeclared exception!
      try { 
        hasherCollection0.add((Hasher) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // hasher
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HasherCollection hasherCollection0 = new HasherCollection();
      // Undeclared exception!
      try { 
        hasherCollection0.add((Collection<Hasher>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // hashers
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HasherCollection hasherCollection0 = null;
      try {
        hasherCollection0 = new HasherCollection((Hasher[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HasherCollection hasherCollection0 = null;
      try {
        hasherCollection0 = new HasherCollection((Collection<Hasher>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // hashers
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Hasher> stack0 = new Stack<Hasher>();
      HasherCollection hasherCollection0 = new HasherCollection(stack0);
      Shape shape0 = Shape.fromKM(1450, 1450);
      IndexProducer indexProducer0 = hasherCollection0.indices(shape0);
      assertNotNull(indexProducer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Stack<Hasher> stack0 = new Stack<Hasher>();
      HasherCollection hasherCollection0 = new HasherCollection(stack0);
      Shape shape0 = Shape.fromKM(1450, 1450);
      byte[] byteArray0 = new byte[9];
      SimpleHasher simpleHasher0 = new SimpleHasher(byteArray0);
      hasherCollection0.add((Hasher) simpleHasher0);
      HasherCollection.HasherCollectionIndexProducer hasherCollection_HasherCollectionIndexProducer0 = hasherCollection0.new HasherCollectionIndexProducer(shape0);
      int[] intArray0 = hasherCollection_HasherCollectionIndexProducer0.asIndexArray();
      assertEquals(1450, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      SimpleHasher simpleHasher0 = new SimpleHasher(byteArray0);
      Shape shape0 = Shape.fromKM((byte)41, (byte)123);
      Hasher[] hasherArray0 = new Hasher[5];
      hasherArray0[0] = (Hasher) simpleHasher0;
      hasherArray0[1] = (Hasher) simpleHasher0;
      hasherArray0[2] = (Hasher) simpleHasher0;
      hasherArray0[3] = (Hasher) simpleHasher0;
      hasherArray0[4] = (Hasher) simpleHasher0;
      HasherCollection hasherCollection0 = new HasherCollection(hasherArray0);
      HasherCollection.HasherCollectionIndexProducer hasherCollection_HasherCollectionIndexProducer0 = hasherCollection0.new HasherCollectionIndexProducer(shape0);
      int[] intArray0 = hasherCollection_HasherCollectionIndexProducer0.asIndexArray();
      assertEquals(205, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Stack<Hasher> stack0 = new Stack<Hasher>();
      HasherCollection hasherCollection0 = new HasherCollection(stack0);
      Shape shape0 = Shape.fromKM(1450, 1450);
      byte[] byteArray0 = new byte[9];
      SimpleHasher simpleHasher0 = new SimpleHasher(byteArray0);
      hasherCollection0.add((Hasher) simpleHasher0);
      HasherCollection.HasherCollectionIndexProducer hasherCollection_HasherCollectionIndexProducer0 = hasherCollection0.new HasherCollectionIndexProducer(shape0);
      Hasher.IndexFilter.BitMapTracker hasher_IndexFilter_BitMapTracker0 = new Hasher.IndexFilter.BitMapTracker(shape0);
      IntPredicate intPredicate0 = hasher_IndexFilter_BitMapTracker0.negate();
      Hasher.IndexFilter hasher_IndexFilter0 = Hasher.IndexFilter.create(shape0, intPredicate0);
      boolean boolean0 = hasherCollection_HasherCollectionIndexProducer0.forEachIndex(hasher_IndexFilter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      SimpleHasher simpleHasher0 = new SimpleHasher(byteArray0);
      Shape shape0 = Shape.fromKM((byte)41, (byte)123);
      Hasher[] hasherArray0 = new Hasher[5];
      hasherArray0[0] = (Hasher) simpleHasher0;
      hasherArray0[1] = (Hasher) simpleHasher0;
      hasherArray0[2] = (Hasher) simpleHasher0;
      hasherArray0[3] = (Hasher) simpleHasher0;
      hasherArray0[4] = (Hasher) simpleHasher0;
      HasherCollection hasherCollection0 = new HasherCollection(hasherArray0);
      HasherCollection.HasherCollectionIndexProducer hasherCollection_HasherCollectionIndexProducer0 = hasherCollection0.new HasherCollectionIndexProducer(shape0);
      Hasher.IndexFilter.BitMapTracker hasher_IndexFilter_BitMapTracker0 = new Hasher.IndexFilter.BitMapTracker(shape0);
      Hasher.IndexFilter hasher_IndexFilter0 = Hasher.IndexFilter.create(shape0, hasher_IndexFilter_BitMapTracker0);
      boolean boolean0 = hasherCollection_HasherCollectionIndexProducer0.forEachIndex(hasher_IndexFilter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Stack<Hasher> stack0 = new Stack<Hasher>();
      Hasher[] hasherArray0 = new Hasher[5];
      HasherCollection hasherCollection0 = new HasherCollection(hasherArray0);
      hasherCollection0.add((Collection<Hasher>) stack0);
      assertTrue(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HasherCollection hasherCollection0 = new HasherCollection();
      Shape shape0 = Shape.fromKM(2147483645, 2147483645);
      HasherCollection.HasherCollectionIndexProducer hasherCollection_HasherCollectionIndexProducer0 = hasherCollection0.new HasherCollectionIndexProducer(shape0);
      int[] intArray0 = hasherCollection_HasherCollectionIndexProducer0.asIndexArray();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Hasher[] hasherArray0 = new Hasher[5];
      HasherCollection hasherCollection0 = new HasherCollection(hasherArray0);
      List<Hasher> list0 = hasherCollection0.getHashers();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Stack<Hasher> stack0 = new Stack<Hasher>();
      HasherCollection hasherCollection0 = new HasherCollection(stack0);
      Shape shape0 = Shape.fromKM(1450, 1450);
      IndexProducer indexProducer0 = hasherCollection0.uniqueIndices(shape0);
      BitMapProducer bitMapProducer0 = BitMapProducer.fromIndexProducer(indexProducer0, 1450);
      assertNotNull(bitMapProducer0);
  }
}
