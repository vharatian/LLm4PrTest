/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 13:18:19 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.Hasher;
import org.apache.commons.collections4.bloomfilter.Shape;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Hasher_ESTest extends Hasher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Shape shape0 = Shape.fromKM(604, 1308);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      hasher_IndexFilter_ArrayTracker0.test(1308);
      boolean boolean0 = hasher_IndexFilter_ArrayTracker0.test(1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Shape shape0 = Shape.fromKM(604, 1308);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      boolean boolean0 = hasher_IndexFilter_ArrayTracker0.test(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Shape shape0 = Shape.fromNM(8, 8);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      Hasher.IndexFilter hasher_IndexFilter0 = Hasher.IndexFilter.create(shape0, hasher_IndexFilter_ArrayTracker0);
      // Undeclared exception!
      try { 
        hasher_IndexFilter0.test(1205);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // number too large 1205 >= 8
         //
         verifyException("org.apache.commons.collections4.bloomfilter.Hasher$IndexFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Shape shape0 = Shape.fromKM(2, 2);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      Hasher.IndexFilter hasher_IndexFilter0 = Hasher.IndexFilter.create(shape0, hasher_IndexFilter_ArrayTracker0);
      assertNotNull(hasher_IndexFilter0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Shape shape0 = Shape.fromNM(707, 707);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      // Undeclared exception!
      try { 
        hasher_IndexFilter_ArrayTracker0.test((-1328));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // number may not be less than zero. -1328
         //
         verifyException("org.apache.commons.collections4.bloomfilter.Hasher$IndexFilter$ArrayTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Shape shape0 = Shape.fromNMK(6, 6, 6);
      Hasher.IndexFilter.BitMapTracker hasher_IndexFilter_BitMapTracker0 = new Hasher.IndexFilter.BitMapTracker(shape0);
      boolean boolean0 = hasher_IndexFilter_BitMapTracker0.test(6);
      assertTrue(boolean0);
      
      boolean boolean1 = hasher_IndexFilter_BitMapTracker0.test(6);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Shape shape0 = Shape.fromNM(8, 8);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      Hasher.IndexFilter hasher_IndexFilter0 = Hasher.IndexFilter.create(shape0, hasher_IndexFilter_ArrayTracker0);
      hasher_IndexFilter0.test(6);
      // Undeclared exception!
      try { 
        hasher_IndexFilter_ArrayTracker0.test(1214);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.collections4.bloomfilter.Hasher$IndexFilter$ArrayTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Shape shape0 = Shape.fromNM(8, 8);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      Hasher.IndexFilter hasher_IndexFilter0 = Hasher.IndexFilter.create(shape0, hasher_IndexFilter_ArrayTracker0);
      hasher_IndexFilter0.test(6);
      boolean boolean0 = hasher_IndexFilter0.test(6);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Shape shape0 = Shape.fromKM(604, 1308);
      Hasher.IndexFilter.ArrayTracker hasher_IndexFilter_ArrayTracker0 = new Hasher.IndexFilter.ArrayTracker(shape0);
      Hasher.IndexFilter hasher_IndexFilter0 = Hasher.IndexFilter.create(shape0, hasher_IndexFilter_ArrayTracker0);
      // Undeclared exception!
      try { 
        hasher_IndexFilter0.test(1308);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // number too large 1308 >= 1308
         //
         verifyException("org.apache.commons.collections4.bloomfilter.Hasher$IndexFilter", e);
      }
  }
}
