/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 23 13:24:59 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter;
import org.apache.commons.collections4.bloomfilter.BitMapProducer;
import org.apache.commons.collections4.bloomfilter.BloomFilter;
import org.apache.commons.collections4.bloomfilter.CountingBloomFilter;
import org.apache.commons.collections4.bloomfilter.Hasher;
import org.apache.commons.collections4.bloomfilter.IndexProducer;
import org.apache.commons.collections4.bloomfilter.SetOperations;
import org.apache.commons.collections4.bloomfilter.Shape;
import org.apache.commons.collections4.bloomfilter.SimpleBloomFilter;
import org.apache.commons.collections4.bloomfilter.SimpleHasher;
import org.apache.commons.collections4.bloomfilter.SparseBloomFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SetOperations_ESTest extends SetOperations_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Shape shape0 = Shape.fromKM(5, 5);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      SimpleHasher simpleHasher0 = new SimpleHasher(20, (-9223372036854775808L));
      CountingBloomFilter countingBloomFilter0 = arrayCountingBloomFilter0.merge((Hasher) simpleHasher0);
      SparseBloomFilter sparseBloomFilter0 = new SparseBloomFilter(shape0, (IndexProducer) arrayCountingBloomFilter0);
      double double0 = SetOperations.jaccardSimilarity(sparseBloomFilter0, countingBloomFilter0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[4];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      BitMapProducer bitMapProducer1 = BitMapProducer.fromBitMapArray(longArray0);
      double double0 = SetOperations.jaccardDistance(bitMapProducer0, bitMapProducer1);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleHasher simpleHasher0 = new SimpleHasher((-1296L), (-1296L));
      Shape shape0 = Shape.fromNM(20, 1305);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      CountingBloomFilter countingBloomFilter0 = arrayCountingBloomFilter0.merge((Hasher) simpleHasher0);
      SparseBloomFilter sparseBloomFilter0 = new SparseBloomFilter(shape0, (BitMapProducer) countingBloomFilter0);
      double double0 = SetOperations.cosineSimilarity((BloomFilter) sparseBloomFilter0, (BloomFilter) countingBloomFilter0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = 1350L;
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      BitMapProducer bitMapProducer1 = BitMapProducer.fromBitMapArray(longArray0);
      double double0 = SetOperations.cosineDistance(bitMapProducer0, bitMapProducer1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long[] longArray0 = new long[1];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      BitMapProducer bitMapProducer1 = BitMapProducer.fromBitMapArray(longArray0);
      double double0 = SetOperations.cosineDistance(bitMapProducer1, bitMapProducer0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = 1350L;
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.hammingDistance(bitMapProducer0, bitMapProducer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 18L;
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.orCardinality(bitMapProducer0, bitMapProducer0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Shape shape0 = Shape.fromNMK(2, 2, 2);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      SimpleHasher simpleHasher0 = new SimpleHasher((-1L), 0L);
      CountingBloomFilter countingBloomFilter0 = arrayCountingBloomFilter0.merge((Hasher) simpleHasher0);
      double double0 = SetOperations.cosineSimilarity((BloomFilter) countingBloomFilter0, (BloomFilter) arrayCountingBloomFilter0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long[] longArray0 = new long[1];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      BitMapProducer bitMapProducer1 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.andCardinality(bitMapProducer0, bitMapProducer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long[] longArray0 = new long[1];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.xorCardinality(bitMapProducer0, bitMapProducer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Shape shape0 = Shape.fromNMK(2, 2, 2);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      SimpleHasher simpleHasher0 = new SimpleHasher((-1L), 0L);
      CountingBloomFilter countingBloomFilter0 = arrayCountingBloomFilter0.merge((Hasher) simpleHasher0);
      SimpleBloomFilter simpleBloomFilter0 = new SimpleBloomFilter(countingBloomFilter0);
      int int0 = SetOperations.xorCardinality(simpleBloomFilter0, arrayCountingBloomFilter0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long[] longArray0 = new long[6];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.orCardinality(bitMapProducer0, bitMapProducer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long[] longArray0 = new long[5];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      long[] longArray1 = new long[3];
      longArray1[0] = 2L;
      BitMapProducer bitMapProducer1 = BitMapProducer.fromBitMapArray(longArray1);
      int int0 = SetOperations.orCardinality(bitMapProducer0, bitMapProducer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Shape shape0 = Shape.fromNMK(6, 6, 6);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      SimpleHasher simpleHasher0 = new SimpleHasher(21L, 6);
      CountingBloomFilter countingBloomFilter0 = arrayCountingBloomFilter0.merge((Hasher) simpleHasher0);
      SparseBloomFilter sparseBloomFilter0 = new SparseBloomFilter(shape0, (IndexProducer) countingBloomFilter0);
      int int0 = SetOperations.hammingDistance(arrayCountingBloomFilter0, sparseBloomFilter0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long[] longArray0 = new long[1];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.cardinality(bitMapProducer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = (-1L);
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.cardinality(bitMapProducer0);
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 18L;
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      int int0 = SetOperations.andCardinality(bitMapProducer0, bitMapProducer0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Shape shape0 = Shape.fromNM(1073741823, 1073741823);
      SimpleBloomFilter simpleBloomFilter0 = new SimpleBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.xorCardinality(simpleBloomFilter0, simpleBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Shape shape0 = Shape.fromKM(2753, 2753);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      SetOperations.cosineSimilarity((BloomFilter) arrayCountingBloomFilter0, (BloomFilter) arrayCountingBloomFilter0);
      // Undeclared exception!
      SetOperations.orCardinality(arrayCountingBloomFilter0, arrayCountingBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Shape shape0 = Shape.fromNM(8233, 8233);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.jaccardSimilarity(arrayCountingBloomFilter0, arrayCountingBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.jaccardSimilarity((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Shape shape0 = Shape.fromKM(12288, 12288);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.jaccardDistance(arrayCountingBloomFilter0, arrayCountingBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Shape shape0 = Shape.fromKM(1647, 1073741824);
      SimpleBloomFilter simpleBloomFilter0 = new SimpleBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.hammingDistance(simpleBloomFilter0, simpleBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Shape shape0 = Shape.fromNM(5992, 5992);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.cosineSimilarity((BloomFilter) arrayCountingBloomFilter0, (BloomFilter) arrayCountingBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.cosineSimilarity((BloomFilter) null, (BloomFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Shape shape0 = Shape.fromKM(12288, 12288);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.cosineSimilarity((BitMapProducer) arrayCountingBloomFilter0, (BitMapProducer) arrayCountingBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.cosineSimilarity((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Shape shape0 = Shape.fromNM(1073741823, 1073741823);
      SparseBloomFilter sparseBloomFilter0 = new SparseBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.cosineDistance(sparseBloomFilter0, sparseBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Shape shape0 = Shape.fromKM(65536, 65536);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.cardinality(arrayCountingBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Shape shape0 = Shape.fromNP(65536, 4.9E-324);
      ArrayCountingBloomFilter arrayCountingBloomFilter0 = new ArrayCountingBloomFilter(shape0);
      // Undeclared exception!
      SetOperations.andCardinality(arrayCountingBloomFilter0, arrayCountingBloomFilter0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 18L;
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      double double0 = SetOperations.jaccardSimilarity(bitMapProducer0, bitMapProducer0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long[] longArray0 = new long[1];
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      double double0 = SetOperations.cosineSimilarity(bitMapProducer0, bitMapProducer0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      long[] longArray0 = new long[4];
      longArray0[0] = 1350L;
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      double double0 = SetOperations.cosineSimilarity(bitMapProducer0, bitMapProducer0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.xorCardinality((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = 685L;
      BitMapProducer bitMapProducer0 = BitMapProducer.fromBitMapArray(longArray0);
      double double0 = SetOperations.jaccardDistance(bitMapProducer0, bitMapProducer0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.cosineDistance((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.orCardinality((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.hammingDistance((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.cardinality((BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.andCardinality((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetOperations.jaccardDistance((BitMapProducer) null, (BitMapProducer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bloomfilter.SetOperations", e);
      }
  }
}
