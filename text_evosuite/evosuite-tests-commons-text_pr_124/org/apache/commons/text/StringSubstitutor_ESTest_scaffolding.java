/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Aug 22 21:18:47 GMT 2025
 */

package org.apache.commons.text;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class StringSubstitutor_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.text.StringSubstitutor"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/azureuser/LLm4PrTest/text_experiments"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StringSubstitutor_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.text.lookup.StringLookupFactory",
      "org.apache.commons.text.Builder",
      "org.apache.commons.text.lookup.SystemPropertyStringLookup",
      "org.apache.commons.text.lookup.AbstractStringLookup",
      "org.apache.commons.text.lookup.UrlEncoderStringLookup",
      "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher",
      "org.apache.commons.text.lookup.ScriptStringLookup",
      "org.apache.commons.text.StringSubstitutor",
      "org.apache.commons.text.matcher.StringMatcherFactory",
      "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher",
      "org.apache.commons.text.lookup.Base64DecoderStringLookup",
      "org.apache.commons.text.TextStringBuilder$StrBuilderReader",
      "org.apache.commons.text.lookup.UrlStringLookup",
      "org.apache.commons.text.lookup.DefaultStringLookup",
      "org.apache.commons.text.TextStringBuilder$StrBuilderWriter",
      "org.apache.commons.text.lookup.JavaPlatformStringLookup",
      "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher",
      "org.apache.commons.text.lookup.InterpolatorStringLookup",
      "org.apache.commons.text.lookup.Base64EncoderStringLookup",
      "org.apache.commons.text.lookup.PropertiesStringLookup",
      "org.apache.commons.text.matcher.AbstractStringMatcher",
      "org.apache.commons.text.StringTokenizer",
      "org.apache.commons.text.TextStringBuilder",
      "org.apache.commons.text.lookup.DateStringLookup",
      "org.apache.commons.text.lookup.FileStringLookup",
      "org.apache.commons.text.lookup.MapStringLookup",
      "org.apache.commons.text.lookup.XmlStringLookup",
      "org.apache.commons.text.lookup.UrlDecoderStringLookup",
      "org.apache.commons.text.matcher.StringMatcher",
      "org.apache.commons.text.lookup.DnsStringLookup",
      "org.apache.commons.text.lookup.LocalHostStringLookup",
      "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher",
      "org.apache.commons.text.TextStringBuilder$TextStringBuilderTokenizer",
      "org.apache.commons.text.lookup.StringLookup",
      "org.apache.commons.text.lookup.EnvironmentVariableStringLookup",
      "org.apache.commons.lang3.Validate",
      "org.apache.commons.text.lookup.ConstantStringLookup",
      "org.apache.commons.text.lookup.ResourceBundleStringLookup",
      "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.apache.commons.text.lookup.StringLookup", false, StringSubstitutor_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StringSubstitutor_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.text.matcher.AbstractStringMatcher",
      "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher",
      "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher",
      "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher",
      "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher",
      "org.apache.commons.text.matcher.StringMatcherFactory",
      "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher",
      "org.apache.commons.text.StringSubstitutor",
      "org.apache.commons.text.lookup.StringLookupFactory",
      "org.apache.commons.lang3.Validate",
      "org.apache.commons.text.lookup.MapStringLookup",
      "org.apache.commons.text.TextStringBuilder",
      "org.apache.commons.text.lookup.AbstractStringLookup",
      "org.apache.commons.text.lookup.Base64DecoderStringLookup",
      "org.apache.commons.text.lookup.Base64EncoderStringLookup",
      "org.apache.commons.text.lookup.ConstantStringLookup",
      "org.apache.commons.text.lookup.DateStringLookup",
      "org.apache.commons.text.lookup.DnsStringLookup",
      "org.apache.commons.text.lookup.EnvironmentVariableStringLookup",
      "org.apache.commons.text.lookup.FileStringLookup",
      "org.apache.commons.text.lookup.JavaPlatformStringLookup",
      "org.apache.commons.text.lookup.LocalHostStringLookup",
      "org.apache.commons.text.lookup.PropertiesStringLookup",
      "org.apache.commons.text.lookup.ResourceBundleStringLookup",
      "org.apache.commons.text.lookup.ScriptStringLookup",
      "org.apache.commons.text.lookup.SystemPropertyStringLookup",
      "org.apache.commons.text.lookup.UrlStringLookup",
      "org.apache.commons.text.lookup.UrlDecoderStringLookup",
      "org.apache.commons.text.lookup.UrlEncoderStringLookup",
      "org.apache.commons.text.lookup.XmlStringLookup",
      "org.apache.commons.text.lookup.DefaultStringLookup",
      "org.apache.commons.text.lookup.InterpolatorStringLookup",
      "org.apache.commons.text.TextStringBuilder$StrBuilderWriter",
      "org.apache.commons.text.StringTokenizer",
      "org.apache.commons.text.TextStringBuilder$TextStringBuilderTokenizer",
      "org.assertj.core.extractor.ByNameMultipleExtractor",
      "org.assertj.core.util.Preconditions",
      "org.assertj.core.extractor.ByNameSingleExtractor",
      "org.apache.commons.text.TextStringBuilder$StrBuilderReader",
      "org.assertj.core.util.introspection.PropertySupport",
      "org.assertj.core.util.introspection.FieldSupport",
      "org.assertj.core.util.introspection.PropertyOrFieldSupport",
      "org.assertj.core.util.introspection.Introspection",
      "org.assertj.core.util.introspection.IntrospectionError",
      "org.assertj.core.util.Strings",
      "org.assertj.core.util.Arrays",
      "org.assertj.core.util.introspection.FieldUtils",
      "org.assertj.core.util.introspection.ClassUtils"
    );
  }
}
