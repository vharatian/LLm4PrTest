/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 20:53:42 GMT 2025
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Function;
import org.apache.commons.text.lookup.FunctionStringLookup;
import org.apache.commons.text.lookup.InterpolatorStringLookup;
import org.apache.commons.text.lookup.StringLookup;
import org.apache.commons.text.lookup.StringLookupFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class StringLookupFactory_ESTest extends StringLookupFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FunctionStringLookup<String> functionStringLookup0 = StringLookupFactory.INSTANCE_BASE64_ENCODER;
      String string0 = functionStringLookup0.lookup("base64Decoder");
      assertEquals("YmFzZTY0RGVjb2Rlcg==", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FunctionStringLookup<String> functionStringLookup0 = StringLookupFactory.INSTANCE_BASE64_DECODER;
      String string0 = functionStringLookup0.lookup("L9)/Rn-QI{&rReX");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      // Undeclared exception!
      try { 
        stringLookupFactory0.mapStringLookup((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.lookup.FunctionStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup();
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      // Undeclared exception!
      try { 
        stringLookupFactory0.interpolatorStringLookup((Map<String, StringLookup>) null, (StringLookup) interpolatorStringLookup0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.lookup.InterpolatorStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      stringLookupFactory0.addDefaultStringLookups((Map<String, StringLookup>) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.javaPlatformStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.systemPropertyStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.base64EncoderStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      FunctionStringLookup<String> functionStringLookup0 = StringLookupFactory.INSTANCE_BASE64_DECODER;
      StringLookup stringLookup0 = stringLookupFactory0.interpolatorStringLookup((StringLookup) functionStringLookup0);
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.dateStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.urlStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.localHostStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.resourceBundleStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.base64StringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      HashMap<String, StringLookup> hashMap0 = new HashMap<String, StringLookup>();
      StringLookup stringLookup0 = stringLookupFactory0.scriptStringLookup();
      StringLookup stringLookup1 = stringLookupFactory0.INSTANCE.interpolatorStringLookup((Map<String, StringLookup>) hashMap0, stringLookup0, false);
      assertNotNull(stringLookup1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.constantStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringLookupFactory.clear();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.urlDecoderStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      Function<String, String> function0 = Function.identity();
      StringLookup stringLookup0 = stringLookupFactory0.functionStringLookup(function0);
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.nullStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.base64DecoderStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.dnsStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.propertiesStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.xmlStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.environmentVariableStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.urlEncoderStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.INSTANCE.resourceBundleStringLookup("YmFzZTY0RGVjb2Rlcg==");
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.interpolatorStringLookup();
      assertNotNull(stringLookup0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringLookupFactory stringLookupFactory0 = StringLookupFactory.INSTANCE;
      StringLookup stringLookup0 = stringLookupFactory0.fileStringLookup();
      assertNotNull(stringLookup0);
  }
}
