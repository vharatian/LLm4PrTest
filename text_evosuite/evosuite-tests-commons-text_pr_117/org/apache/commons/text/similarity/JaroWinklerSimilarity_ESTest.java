/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 21:35:32 GMT 2025
 */

package org.apache.commons.text.similarity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.text.similarity.JaroWinklerSimilarity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class JaroWinklerSimilarity_ESTest extends JaroWinklerSimilarity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int[] intArray0 = JaroWinklerSimilarity.matches(charBuffer0, charBuffer0);
      assertArrayEquals(new int[] {2, 0, 2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(751);
      // Undeclared exception!
      JaroWinklerSimilarity.matches(charBuffer0, charBuffer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        JaroWinklerSimilarity.matches((CharSequence) null, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.similarity.JaroWinklerSimilarity", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.flip();
      // Undeclared exception!
      try { 
        JaroWinklerSimilarity.matches(charBuffer1, charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      CharBuffer charBuffer0 = CharBuffer.allocate(3185);
      // Undeclared exception!
      jaroWinklerSimilarity0.apply(charBuffer0, "Y{CM,xp");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      char[] charArray0 = new char[19];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 1, 16);
      charBuffer0.put("7@Y7NiOe|$UWlcNO");
      // Undeclared exception!
      try { 
        jaroWinklerSimilarity0.apply(charBuffer1, charBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      char[] charArray0 = new char[19];
      charArray0[2] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 1, 16);
      Double double0 = jaroWinklerSimilarity0.apply(charBuffer1, charBuffer0);
      assertEquals(0.9168421052631579, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      Double double0 = jaroWinklerSimilarity0.apply("YCM^.4", "wM244");
      assertEquals(0.5777777777777778, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      Double double0 = jaroWinklerSimilarity0.apply("", "wM24");
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      char[] charArray1 = new char[19];
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray1);
      Double double0 = jaroWinklerSimilarity0.apply(charBuffer1, charBuffer0);
      assertEquals(0.7614035087719297, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      // Undeclared exception!
      try { 
        jaroWinklerSimilarity0.apply("U", (CharSequence) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // CharSequences must not be null
         //
         verifyException("org.apache.commons.text.similarity.JaroWinklerSimilarity", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      Double double0 = jaroWinklerSimilarity0.apply(charBuffer0, charBuffer0);
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JaroWinklerSimilarity jaroWinklerSimilarity0 = new JaroWinklerSimilarity();
      // Undeclared exception!
      try { 
        jaroWinklerSimilarity0.apply((CharSequence) null, (CharSequence) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // CharSequences must not be null
         //
         verifyException("org.apache.commons.text.similarity.JaroWinklerSimilarity", e);
      }
  }
}
