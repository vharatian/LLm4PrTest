/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:17:49 GMT 2025
 */

package org.apache.commons.text.lookup;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.apache.commons.text.lookup.DnsStringLookup;
import org.apache.commons.text.lookup.FileStringLookup;
import org.apache.commons.text.lookup.FunctionStringLookup;
import org.apache.commons.text.lookup.InterpolatorStringLookup;
import org.apache.commons.text.lookup.JavaPlatformStringLookup;
import org.apache.commons.text.lookup.StringLookup;
import org.apache.commons.text.lookup.UrlDecoderStringLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class InterpolatorStringLookup_ESTest extends InterpolatorStringLookup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup((Map<String, FunctionStringLookup<FunctionStringLookup>>) null);
      String string0 = interpolatorStringLookup0.lookup(":#G#");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UrlDecoderStringLookup urlDecoderStringLookup0 = new UrlDecoderStringLookup();
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup(urlDecoderStringLookup0);
      String string0 = interpolatorStringLookup0.lookup("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, StringLookup> hashMap0 = new HashMap<String, StringLookup>();
      HashMap<String, FunctionStringLookup<Object>> hashMap1 = new HashMap<String, FunctionStringLookup<Object>>();
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup((Map<String, FunctionStringLookup<Object>>) hashMap1);
      InterpolatorStringLookup interpolatorStringLookup1 = new InterpolatorStringLookup(hashMap0, interpolatorStringLookup0, false);
      Map<String, StringLookup> map0 = interpolatorStringLookup1.getStringLookupMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup((Map<String, Object>) hashMap0);
      String string0 = interpolatorStringLookup0.toString();
      Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)hashMap0.entrySet();
      hashMap0.put(string0, set0);
      // Undeclared exception!
      try { 
        interpolatorStringLookup0.lookup(string0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileStringLookup fileStringLookup0 = (FileStringLookup)FileStringLookup.INSTANCE;
      // Undeclared exception!
      try { 
        fileStringLookup0.lookup("\"di5Rh8A4A&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaPlatformStringLookup javaPlatformStringLookup0 = JavaPlatformStringLookup.INSTANCE;
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup(javaPlatformStringLookup0);
      // Undeclared exception!
      try { 
        interpolatorStringLookup0.lookup("q)y:COj!DkC9?WyE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // COj!DkC9?WyE
         //
         verifyException("org.apache.commons.text.lookup.JavaPlatformStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DnsStringLookup dnsStringLookup0 = DnsStringLookup.INSTANCE;
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup(dnsStringLookup0);
      // Undeclared exception!
      try { 
        interpolatorStringLookup0.lookup("| ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.text.lookup.DnsStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup();
      InterpolatorStringLookup interpolatorStringLookup1 = null;
      try {
        interpolatorStringLookup1 = new InterpolatorStringLookup((Map<String, StringLookup>) null, interpolatorStringLookup0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.lookup.InterpolatorStringLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup((StringLookup) null);
      String string0 = interpolatorStringLookup0.lookup(", defaultStringLookup=");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup();
      String string0 = interpolatorStringLookup0.lookup("base64Encoder:base64Encoder");
      assertNotNull(string0);
      assertEquals("YmFzZTY0RW5jb2Rlcg==", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, FunctionStringLookup<Object>> hashMap0 = new HashMap<String, FunctionStringLookup<Object>>();
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup((Map<String, FunctionStringLookup<Object>>) hashMap0);
      String string0 = interpolatorStringLookup0.lookup((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      InterpolatorStringLookup interpolatorStringLookup0 = new InterpolatorStringLookup((Map<String, String>) hashMap0);
      Map<String, StringLookup> map0 = interpolatorStringLookup0.getStringLookupMap();
      InterpolatorStringLookup interpolatorStringLookup1 = new InterpolatorStringLookup(map0, interpolatorStringLookup0, false);
      assertEquals(15, map0.size());
      assertFalse(map0.isEmpty());
  }
}
