/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 22 19:47:34 GMT 2025
 */

package org.apache.commons.text.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.PipedReader;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.text.StringSubstitutor;
import org.apache.commons.text.io.StringSubstitutorReader;
import org.apache.commons.text.lookup.StringLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class StringSubstitutorReader_ESTest extends StringSubstitutorReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%5^!\"1X,/4RcDwC");
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      stringSubstitutorReader0.read();
      int int0 = stringSubstitutorReader0.read();
      assertEquals(53, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read(charArray0, 688, 688);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -685
         //
         verifyException("org.apache.commons.text.TextStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read((char[]) null, 0, 2662);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read(charArray0, (-1468), 688);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.TextStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      stringSubstitutorReader0.close();
      try { 
        stringSubstitutorReader0.read(charArray0, 0, 688);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(mockFileReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, "(NTBi}:v", "(NTBi}:v", '~', (String) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2222), (byte)50);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, charset0);
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(inputStreamReader0, stringSubstitutor0);
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      PipedReader pipedReader0 = new PipedReader();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(pipedReader0, stringSubstitutor0);
      try { 
        stringSubstitutorReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutorReader stringSubstitutorReader0 = null;
      try {
        stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, (StringSubstitutor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.text.StringSubstitutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Object>) hashMap0, "", ":-", '$');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      // Undeclared exception!
      stringSubstitutorReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, "", "", ';');
      stringSubstitutor0.setVariableSuffix("3IK$2u+U$\"z3 *|&#");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      // Undeclared exception!
      stringSubstitutorReader0.read(charArray0, (-21), 44);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%5^!\"1X,/4RcDwC");
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, "", "", '~', "");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[0];
      int int0 = stringSubstitutorReader0.read(charArray0, (-813), 3074);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%5^!\"1X,/4RcDwC");
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Integer>) hashMap0, "['", "['", '~', "3[Khk]GHZ1}K;aA.I:");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[4];
      int int0 = stringSubstitutorReader0.read(charArray0);
      assertArrayEquals(new char[] {'%', '5', '^', '!'}, charArray0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[3];
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Integer>) hashMap0, "zr7`U", "org.apache.commons.text.io.StringSubstitutorReader", '|', "?&");
      StringReader stringReader0 = new StringReader("");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read(charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Integer>) hashMap0, "6Z0Xf 'Tf,\"6\u0003", "", 'j', "wp1BQyrty^p1");
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 1112);
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(bufferedReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read(charArray0, 1, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(0, int0);
      
      int int1 = stringSubstitutorReader0.read(charArray0);
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      stringSubstitutorReader0.read();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "}");
      // Undeclared exception!
      try { 
        stringSubstitutorReader0.read(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read(charArray0, (-2676), (-2676));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$!\"1X,/4R(Dw");
      StringLookup stringLookup0 = mock(StringLookup.class, new ViolatedAssumptionAnswer());
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor(stringLookup0, "$!\"1X,/4R(Dw", "$!\"1X,/4R(Dw", 'p', "");
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      StringSubstitutorReader stringSubstitutorReader1 = new StringSubstitutorReader(stringSubstitutorReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader1.read();
      assertEquals(36, int0);
      
      char[] charArray0 = new char[3];
      int int1 = stringSubstitutorReader0.read(charArray0);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%5^!\"1X,/4RcDwC");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Object>) hashMap0, "", "D!2K", '\u0091');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      // Undeclared exception!
      stringSubstitutorReader0.read();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%5^!\"1X,/4RcDwC");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Object>) hashMap0, "ASvW'9{BL*zG3~KnZR", "Failed to create invoker for ", 'j');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(stringReader0, stringSubstitutor0);
      char[] charArray0 = new char[0];
      int int0 = stringSubstitutorReader0.read(charArray0, 2065, 8177);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(0, int0);
      
      int int1 = stringSubstitutorReader0.read(charArray0, 0, 688);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      stringSubstitutorReader0.read();
      int int0 = stringSubstitutorReader0.read(charArray0, 0, 688);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read();
      assertEquals(0, int0);
      
      int int1 = stringSubstitutorReader0.read();
      assertFalse(int1 == int0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      charArrayReader0.read();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      StringSubstitutor stringSubstitutor0 = new StringSubstitutor((Map<String, Object>) hashMap0, "", "B&YV*,=-ni ,Fkh", '~');
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(lineNumberReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader0.read(charArray0);
      assertEquals(1, int0);
      
      int int1 = stringSubstitutorReader0.read();
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(lineNumberReader0, stringSubstitutor0);
      stringSubstitutorReader0.read();
      int int0 = stringSubstitutorReader0.read();
      assertEquals(0, int0);
      
      StringSubstitutorReader stringSubstitutorReader1 = new StringSubstitutorReader(stringSubstitutorReader0, stringSubstitutor0);
      int int1 = stringSubstitutorReader1.read(charArray0, 0, 442);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringSubstitutor stringSubstitutor0 = StringSubstitutor.createInterpolator();
      StringSubstitutorReader stringSubstitutorReader0 = new StringSubstitutorReader(charArrayReader0, stringSubstitutor0);
      StringSubstitutorReader stringSubstitutorReader1 = new StringSubstitutorReader(stringSubstitutorReader0, stringSubstitutor0);
      int int0 = stringSubstitutorReader1.read();
      assertEquals(0, int0);
  }
}
